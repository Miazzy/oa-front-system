{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/jeecg/JGraphicCode.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/jeecg/JGraphicCode.vue","mtime":1571018558897},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":1565525386522},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'JGraphicCode',\n  props: {\n    length:{\n      type: Number,\n      default: 4\n    },\n    fontSizeMin: {\n      type: Number,\n      default: 20\n    },\n    fontSizeMax: {\n      type: Number,\n      default: 45\n    },\n    backgroundColorMin: {\n      type: Number,\n      default: 180\n    },\n    backgroundColorMax: {\n      type: Number,\n      default: 240\n    },\n    colorMin: {\n      type: Number,\n      default: 50\n    },\n    colorMax: {\n      type: Number,\n      default: 160\n    },\n    lineColorMin: {\n      type: Number,\n      default: 40\n    },\n    lineColorMax: {\n      type: Number,\n      default: 180\n    },\n    dotColorMin: {\n      type: Number,\n      default: 0\n    },\n    dotColorMax: {\n      type: Number,\n      default: 255\n    },\n    contentWidth: {\n      type: Number,\n      default:136\n    },\n    contentHeight: {\n      type: Number,\n      default: 38\n    }\n  },\n  methods: {\n    // 生成一个随机数\n    randomNum (min, max) {\n      return Math.floor(Math.random() * (max - min) + min)\n    },\n    // 生成一个随机的颜色\n    randomColor (min, max) {\n      let r = this.randomNum(min, max)\n      let g = this.randomNum(min, max)\n      let b = this.randomNum(min, max)\n      return 'rgb(' + r + ',' + g + ',' + b + ')'\n    },\n    drawPic () {\n      this.randomCode()\n      let canvas = document.getElementById('gc-canvas')\n      let ctx = canvas.getContext('2d')\n      ctx.textBaseline = 'bottom'\n      // 绘制背景\n      ctx.fillStyle = this.randomColor(this.backgroundColorMin, this.backgroundColorMax)\n      ctx.fillRect(0, 0, this.contentWidth, this.contentHeight)\n      // 绘制文字\n      for (let i = 0; i < this.code.length; i++) {\n        this.drawText(ctx, this.code[i], i)\n      }\n      this.drawLine(ctx)\n      this.drawDot(ctx)\n      this.$emit(\"success\",this.code)\n    },\n    drawText (ctx, txt, i) {\n      ctx.fillStyle = this.randomColor(this.colorMin, this.colorMax)\n      let fontSize = this.randomNum(this.fontSizeMin, this.fontSizeMax)\n      ctx.font = fontSize + 'px SimHei'\n      let padding = 10;\n      let offset = (this.contentWidth-40)/(this.code.length-1)\n      let x=padding;\n      if(i>0){\n        x = padding+(i*offset)\n      }\n      //let x = (i + 1) * (this.contentWidth / (this.code.length + 1))\n      let y = this.randomNum(this.fontSizeMax, this.contentHeight - 5)\n      if(fontSize>40){\n        y=40\n      }\n      var deg = this.randomNum(-10,10)\n      // 修改坐标原点和旋转角度\n      ctx.translate(x, y)\n      ctx.rotate(deg * Math.PI / 180)\n      ctx.fillText(txt, 0, 0)\n      // 恢复坐标原点和旋转角度\n      ctx.rotate(-deg * Math.PI / 180)\n      ctx.translate(-x, -y)\n    },\n    drawLine (ctx) {\n      // 绘制干扰线\n      for (let i = 0; i <1; i++) {\n        ctx.strokeStyle = this.randomColor(this.lineColorMin, this.lineColorMax)\n        ctx.beginPath()\n        ctx.moveTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))\n        ctx.lineTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))\n        ctx.stroke()\n      }\n    },\n    drawDot (ctx) {\n      // 绘制干扰点\n      for (let i = 0; i < 100; i++) {\n        ctx.fillStyle = this.randomColor(0, 255)\n        ctx.beginPath()\n        ctx.arc(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight), 1, 0, 2 * Math.PI)\n        ctx.fill()\n      }\n    },\n    reloadPic(){\n      this.drawPic()\n    },\n    randomCode(){\n      let random = ''\n      //去掉了I l i o O\n      let str = \"QWERTYUPLKJHGFDSAZXCVBNMqwertyupkjhgfdsazxcvbnm1234567890\"\n      for(let i = 0; i < this.length; i++) {\n        let index = Math.floor(Math.random()*57);\n        random += str[index];\n      }\n      this.code = random\n    }\n  },\n  mounted () {\n    this.drawPic()\n  },\n  data(){\n    return {\n      code:\"\"\n    }\n  }\n\n}\n",null]}