{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/list/TableInnerEditList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/list/TableInnerEditList.vue","mtime":1571018558926},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":1565525386522},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport STable from '@/components/table/'\n\nexport default {\n  name: \"TableList\",\n  components: {\n    STable\n  },\n  data () {\n    return {\n      // 高级搜索 展开/关闭\n      advanced: false,\n      // 查询参数\n      queryParam: {},\n      // 表头\n      columns: [\n        {\n          title: '规则编号',\n          dataIndex: 'no',\n          width: 90\n        },\n        {\n          title: '描述',\n          dataIndex: 'description',\n          scopedSlots: { customRender: 'description' },\n        },\n        {\n          title: '服务调用次数',\n          dataIndex: 'callNo',\n          width: '150px',\n          sorter: true,\n          needTotal: true,\n          scopedSlots: { customRender: 'callNo' },\n          // customRender: (text) => text + ' 次'\n        },\n        {\n          title: '状态',\n          dataIndex: 'status',\n          width: '100px',\n          needTotal: true,\n          scopedSlots: { customRender: 'status' },\n        },\n        {\n          title: '更新时间',\n          dataIndex: 'updatedAt',\n          width: '150px',\n          sorter: true,\n          scopedSlots: { customRender: 'updatedAt' },\n        },\n        {\n          table: '操作',\n          dataIndex: 'action',\n          width: '120px',\n          scopedSlots: { customRender: 'action' },\n        }\n      ],\n      // 加载数据方法 必须为 Promise 对象\n      loadData: parameter => {\n        return this.$http.get('/api/service', {\n          params: Object.assign(parameter, this.queryParam)\n        }).then(res => {\n          return res.result\n        })\n      },\n\n      selectedRowKeys: [],\n      selectedRows: []\n    }\n  },\n  methods: {\n\n    handleChange (value, key, column) {\n      console.log(value, key, column)\n    },\n    edit (row) {\n      row.editable = true\n      // row = Object.assign({}, row)\n      this.$refs.table.updateEdit()\n    },\n    // eslint-disable-next-line\n    del (row) {\n      this.$confirm({\n        title: '警告',\n        content: '真的要删除吗?',\n        okText: '删除',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk() {\n          console.log('OK');\n          // 在这里调用删除接口\n          return new Promise((resolve, reject) => {\n            setTimeout(Math.random() > 0.5 ? resolve : reject, 1000);\n          }).catch(() => console.log('Oops errors!'));\n        },\n        onCancel() {\n          console.log('Cancel');\n        },\n      });\n    },\n    save (row) {\n      delete row.editable\n      this.$refs.table.updateEdit()\n    },\n    cancel (row) {\n      delete row.editable\n      this.$refs.table.updateEdit()\n    },\n\n    onChange (row) {\n      this.selectedRowKeys = row.selectedRowKeys\n      this.selectedRows = row.selectedRows\n    },\n    toggleAdvanced () {\n      this.advanced = !this.advanced\n    },\n  },\n  watch: {\n    /*\n    'selectedRows': function (selectedRows) {\n      this.needTotalList = this.needTotalList.map(item => {\n        return {\n          ...item,\n          total: selectedRows.reduce( (sum, val) => {\n            return sum + val[item.dataIndex]\n          }, 0)\n        }\n      })\n    }\n    */\n  }\n}\n",null]}