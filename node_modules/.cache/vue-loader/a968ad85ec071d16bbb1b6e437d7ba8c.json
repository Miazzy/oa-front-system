{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/modules/online/cgform/OnlCgformHeadList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/modules/online/cgform/OnlCgformHeadList.vue","mtime":1571018558929},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":1565525386522},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { initDictOptions, filterDictText } from '@/components/dict/JDictSelectUtil'\nimport { deleteAction, postAction } from '@/api/manage'\nimport JDictSelectTag from '../../../../components/dict/JDictSelectTag.vue'\nimport { JeecgListMixin } from '@/mixins/JeecgListMixin'\nimport Clipboard from 'clipboard'\n\nexport default {\n  name: 'OnlCgformHeadList',\n  mixins: [JeecgListMixin],\n  components: {\n    JDictSelectTag,\n  },\n  data() {\n    return {\n      description: 'Online表单开发管理页面',\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: '',\n          key: 'rowIndex',\n          width: 60,\n          align: 'center',\n          customRender: function(t, r, index) {\n            return parseInt(index) + 1\n          }\n        },\n        {\n          title: '表类型',\n          align: 'center',\n          dataIndex: 'tableType',\n          customRender: (text) => {\n            return filterDictText(this.tableTypeDictOptions, `${text}`)\n          }\n        },\n        {\n          title: '表名',\n          align: 'center',\n          dataIndex: 'tableName'\n        },\n        {\n          title: '表描述',\n          align: 'center',\n          dataIndex: 'tableTxt'\n        },\n        {\n          title: '版本',\n          align: 'center',\n          dataIndex: 'tableVersion'\n        },\n\n        {\n          title: '同步数据库状态',\n          align: 'center',\n          dataIndex: 'isDbSynch',\n          scopedSlots: { customRender: 'dbsync' }\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          align: 'center',\n          scopedSlots: { customRender: 'action' }\n        }\n      ],\n      url: {\n        list: '/online/cgform/head/list',\n        delete: '/online/cgform/head/delete',\n        deleteBatch: '/online/cgform/head/deleteBatch',\n        doDbSynch: '/online/cgform/api/doDbSynch/',\n        removeRecord: '/online/cgform/head/removeRecord'\n      },\n      tableTypeDictOptions: [],\n      sexDictOptions: [],\n      syncModalVisible: false,\n      syncFormId: '',\n      synMethod: 'normal',\n      syncLoading: false,\n      onlineUrlTitle: '',\n      onlineUrlVisible: false,\n      onlineUrl: '',\n      selectedRowKeys: [],\n      selectedRows: []\n    }\n  },\n  created() {\n    //初始化字典 - 表类型\n    initDictOptions('cgform_table_type').then((res) => {\n      if (res.success) {\n        this.tableTypeDictOptions = res.result\n      }\n    })\n    this.loadData()\n  },\n  methods: {\n    doDbSynch(id) {\n      postAction(this.url.doDbSynch + id, { synMethod: '1' }).then((res) => {\n        if (res.success) {\n          this.$message.success(res.message)\n          this.loadData()\n        } else {\n          this.$message.warning(res.message)\n        }\n      })\n    },\n    handleCancleDbSync() {\n      this.syncModalVisible = false\n    },\n    handleDbSync() {\n      this.syncLoading = true\n      postAction(this.url.doDbSynch + this.syncFormId + '/' + this.synMethod).then((res) => {\n        this.syncModalVisible = false\n        this.syncLoading = false\n        if (res.success) {\n          this.$message.success(res.message)\n          this.loadData()\n        } else {\n          this.$message.warning(res.message)\n        }\n      })\n    },\n    openSyncModal(id) {\n      this.syncModalVisible = true\n      this.syncFormId = id\n    },\n    goPageOnline(rd) {\n      if(rd.isTree=='Y'){\n        this.$router.push({ path: '/online/cgformTreeList/' + rd.id })\n      }else{\n        this.$router.push({ path: '/online/cgformList/' + rd.id })\n      }\n    },\n    handleOnlineUrlClose() {\n      this.onlineUrlTitle = ''\n      this.onlineUrlVisible = false\n    },\n    handleOnlineUrlShow(record) {\n      if(record.isTree=='Y'){\n        this.onlineUrl = `/online/cgformTreeList/${record.id}`\n      }else{\n        this.onlineUrl = `/online/cgformList/${record.id}`\n      }\n      this.onlineUrlVisible = true\n      this.onlineUrlTitle = '菜单链接[' + record.tableTxt + ']'\n    },\n    handleRemoveRecord(id) {\n      let that = this\n      this.$confirm({\n        title: '确认要移除此记录?',\n        onOk() {\n          deleteAction(that.url.removeRecord, { id: id }).then((res) => {\n            if (res.success) {\n              that.$message.success('移除成功')\n              that.loadData()\n            } else {\n              that.$message.warning(res.message)\n            }\n          })\n        },\n        onCancel() {\n        }\n      })\n    },\n    doEnhanceJs() {\n      if (!this.selectedRowKeys || this.selectedRowKeys.length != 1) {\n        this.$message.warning('请先选中一条记录')\n        return\n      }\n      this.$refs.ehjs.show(this.selectedRowKeys[0])\n    },\n    doEnhanceSql() {\n      if (!this.selectedRowKeys || this.selectedRowKeys.length != 1) {\n        this.$message.warning('请先选中一条记录')\n        return\n      }\n      this.$refs.ehsql.show(this.selectedRowKeys[0])\n    },\n    doEnhanceJava() {\n      if (!this.selectedRowKeys || this.selectedRowKeys.length != 1) {\n        this.$message.warning('请先选中一条记录')\n        return\n      }\n      this.$refs.ehjava.show(this.selectedRowKeys[0])\n    },\n    doCgformButton() {\n      if (!this.selectedRowKeys || this.selectedRowKeys.length != 1) {\n        this.$message.warning('请先选中一条记录')\n        return\n      }\n      this.$refs.btnList.show(this.selectedRowKeys[0])\n\n      //this.$router.push({ path: '/online/cgformButton/' + this.selectedRowKeys[0] })\n    },\n    importOnlineForm() {\n      this.$refs.transd2o.show()\n    },\n    transOk() {\n      this.loadData()\n    },\n    goGenerateCode() {\n      if (!this.selectedRowKeys || this.selectedRowKeys.length != 1) {\n        this.$message.warning('请先选中一条记录')\n        return\n      }\n      let row = this.selectedRows[0]\n      if (!row.isDbSynch || row.isDbSynch == 'N') {\n        this.$message.warning('请先同步数据库!')\n        return\n      }\n      if (row.tableType == 3) {\n        this.$message.warning('请选中该表对应的主表生成代码')\n        return\n      }\n      this.$refs.cg.show(this.selectedRowKeys[0])\n    },\n    onSelectChange(keys, rows) {\n      this.selectedRowKeys = keys\n      this.selectedRows = rows\n    },\n    onCopyUrl(){\n      var clipboard = new Clipboard('.copy-this-text')\n      clipboard.on('success', () => {\n        clipboard.destroy()\n        this.$message.success('复制成功')\n        this.handleOnlineUrlClose()\n      })\n      clipboard.on('error', () => {\n        this.$message.error('该浏览器不支持自动复制')\n        clipboard.destroy()\n      })\n    }\n  }\n}\n",null]}