{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/UserModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/UserModal.vue","mtime":1571018558937},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport pick from 'lodash.pick'\nimport moment from 'moment'\nimport Vue from 'vue'\n// 引入搜索部门弹出框的组件\nimport departWindow from './DepartWindow'\nimport { ACCESS_TOKEN } from \"@/store/mutation-types\"\nimport { getAction } from '@/api/manage'\nimport {addUser,editUser,queryUserRole,queryall } from '@/api/api'\nimport { disabledAuthFilter } from \"@/utils/authFilter\"\nimport {duplicateCheck } from '@/api/api'\n\nexport default {\n  name: \"RoleModal\",\n  components: {\n    departWindow,\n  },\n  data () {\n    return {\n      departDisabled: false, //是否是我的部门调用该页面\n      roleDisabled: false, //是否是角色维护调用该页面\n      modalWidth:800,\n      drawerWidth:700,\n      modaltoggleFlag:true,\n      confirmDirty: false,\n      selectedDepartKeys:[], //保存用户选择部门id\n      checkedDepartKeys:[],\n      checkedDepartNames:[], // 保存部门的名称 =>title\n      checkedDepartNameString:\"\", // 保存部门的名称 =>title\n      userId:\"\", //保存用户id\n      disableSubmit:false,\n      userDepartModel:{userId:'',departIdList:[]}, // 保存SysUserDepart的用户部门中间表数据需要的对象\n      dateFormat:\"YYYY-MM-DD\",\n      validatorRules:{\n        username:{\n          rules: [{\n            required: true, message: '请输入用户账号!'\n          },{\n            validator: this.validateUsername,\n          }]\n        },\n        password:{\n          rules: [{\n            required: true,\n            pattern:/^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,./]).{8,}$/,\n            message: '密码由8位数字、大小写字母和特殊符号组成!'\n          }, {\n            validator: this.validateToNextPassword,\n          }],\n        },\n        confirmpassword:{\n          rules: [{\n            required: true, message: '请重新输入登陆密码!',\n          }, {\n            validator: this.compareToFirstPassword,\n          }],\n        },\n        realname:{rules: [{ required: true, message: '请输入用户名称!' }]},\n        phone:{rules: [{validator: this.validatePhone}]},\n        email:{\n          rules: [{\n            validator: this.validateEmail\n          }],\n        },\n        roles:{}\n        //  sex:{initialValue:((!this.model.sex)?\"\": (this.model.sex+\"\"))}\n      },\n      title:\"操作\",\n      visible: false,\n      model: {},\n      roleList:[],\n      selectedRole:[],\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n      uploadLoading:false,\n      confirmLoading: false,\n      headers:{},\n      form:this.$form.createForm(this),\n      picUrl: \"\",\n      url: {\n        fileUpload: window._CONFIG['domianURL']+\"/sys/common/upload\",\n        imgerver: window._CONFIG['domianURL']+\"/sys/common/view\",\n        userWithDepart: \"/sys/user/userDepartList\", // 引入为指定用户查看部门信息需要的url\n        userId:\"/sys/user/generateUserId\", // 引入生成添加用户情况下的url\n        syncUserByUserName:\"/process/extActProcess/doSyncUserByUserName\",//同步用户到工作流\n      },\n    }\n  },\n  created () {\n    const token = Vue.ls.get(ACCESS_TOKEN);\n    this.headers = {\"X-Access-Token\":token}\n\n  },\n  computed:{\n    uploadAction:function () {\n      return this.url.fileUpload;\n    }\n  },\n  methods: {\n    isDisabledAuth(code){\n      return disabledAuthFilter(code);\n    },\n    //窗口最大化切换\n    toggleScreen(){\n      if(this.modaltoggleFlag){\n        this.modalWidth = window.innerWidth;\n      }else{\n        this.modalWidth = 800;\n      }\n      this.modaltoggleFlag = !this.modaltoggleFlag;\n    },\n    initialRoleList(){\n      queryall().then((res)=>{\n        if(res.success){\n          this.roleList = res.result;\n        }else{\n          console.log(res.message);\n        }\n      });\n    },\n    loadUserRoles(userid){\n      queryUserRole({userid:userid}).then((res)=>{\n        if(res.success){\n          this.selectedRole = res.result;\n        }else{\n          console.log(res.message);\n        }\n      });\n    },\n    refresh () {\n        this.selectedDepartKeys=[];\n        this.checkedDepartKeys=[];\n        this.checkedDepartNames=[];\n        this.checkedDepartNameString = \"\";\n        this.userId=\"\"\n    },\n    add () {\n      this.picUrl = \"\";\n      this.refresh();\n      this.edit({activitiSync:'1'});\n    },\n    edit (record) {\n      this.resetScreenSize(); // 调用此方法,根据屏幕宽度自适应调整抽屉的宽度\n      let that = this;\n      that.initialRoleList();\n      that.checkedDepartNameString = \"\";\n      that.form.resetFields();\n      if(record.hasOwnProperty(\"id\")){\n        that.loadUserRoles(record.id);\n        this.picUrl = \"Has no pic url yet\";\n      }\n      that.userId = record.id;\n      that.visible = true;\n      that.model = Object.assign({}, record);\n      that.$nextTick(() => {\n        that.form.setFieldsValue(pick(this.model,'username','sex','realname','email','phone','activitiSync'))\n      });\n      // 调用查询用户对应的部门信息的方法\n      that.checkedDepartKeys = [];\n      that.loadCheckedDeparts();\n    },\n    //\n    loadCheckedDeparts(){\n      let that = this;\n      if(!that.userId){return}\n      getAction(that.url.userWithDepart,{userId:that.userId}).then((res)=>{\n        that.checkedDepartNames = [];\n        if(res.success){\n          for (let i = 0; i < res.result.length; i++) {\n            that.checkedDepartNames.push(res.result[i].title);\n            this.checkedDepartNameString = this.checkedDepartNames.join(\",\");\n            that.checkedDepartKeys.push(res.result[i].key);\n          }\n          that.userDepartModel.departIdList = that.checkedDepartKeys\n        }else{\n          console.log(res.message);\n        }\n      })\n    },\n    close () {\n      this.$emit('close');\n      this.visible = false;\n      this.disableSubmit = false;\n      this.selectedRole = [];\n      this.userDepartModel = {userId:'',departIdList:[]};\n      this.checkedDepartNames = [];\n      this.checkedDepartNameString='';\n      this.checkedDepartKeys = [];\n      this.selectedDepartKeys = [];\n    },\n    moment,\n    handleSubmit () {\n\n      const that = this;\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          that.confirmLoading = true;\n          let avatar = that.model.avatar;\n          if(!values.birthday){\n            values.birthday = '';\n          }else{\n            values.birthday = values.birthday.format(this.dateFormat);\n          }\n          let formData = Object.assign(this.model, values);\n          formData.avatar = avatar;\n          formData.selectedroles = this.selectedRole.length>0?this.selectedRole.join(\",\"):'';\n          formData.selecteddeparts = this.userDepartModel.departIdList.length>0?this.userDepartModel.departIdList.join(\",\"):'';\n\n          // that.addDepartsToUser(that,formData); // 调用根据当前用户添加部门信息的方法\n          let obj;\n          if(!this.model.id){\n            formData.id = this.userId;\n            obj=addUser(formData);\n          }else{\n            obj=editUser(formData);\n          }\n          obj.then((res)=>{\n            if(res.success){\n              that.$message.success(res.message);\n              that.$emit('ok');\n            }else{\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n            that.checkedDepartNames = [];\n            that.userDepartModel.departIdList = {userId:'',departIdList:[]};\n\n            that.close();\n          })\n\n        }\n      })\n    },\n    handleCancel () {\n      this.close()\n    },\n    validateToNextPassword  (rule, value, callback) {\n      const form = this.form;\n      const confirmpassword=form.getFieldValue('confirmpassword');\n\n      if (value && confirmpassword && value !== confirmpassword) {\n        callback('两次输入的密码不一样！');\n      }\n      if (value && this.confirmDirty) {\n        form.validateFields(['confirm'], { force: true })\n      }\n      callback();\n    },\n    compareToFirstPassword  (rule, value, callback) {\n      const form = this.form;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('两次输入的密码不一样！');\n      } else {\n        callback()\n      }\n    },\n    validatePhone(rule, value, callback){\n      if(!value){\n        callback()\n      }else{\n        if(new RegExp(/^1[3|4|5|7|8][0-9]\\d{8}$/).test(value)){\n          var params = {\n            tableName: 'sys_user',\n            fieldName: 'phone',\n            fieldVal: value,\n            dataId: this.userId\n          };\n          duplicateCheck(params).then((res) => {\n            if (res.success) {\n              callback()\n            } else {\n              callback(\"手机号已存在!\")\n            }\n          })\n        }else{\n          callback(\"请输入正确格式的手机号码!\");\n        }\n      }\n    },\n    validateEmail(rule, value, callback){\n      if(!value){\n        callback()\n      }else{\n        if(new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/).test(value)){\n          var params = {\n            tableName: 'sys_user',\n            fieldName: 'email',\n            fieldVal: value,\n            dataId: this.userId\n          };\n          duplicateCheck(params).then((res) => {\n            console.log(res)\n            if (res.success) {\n              callback()\n            } else {\n              callback(\"邮箱已存在!\")\n            }\n          })\n        }else{\n          callback(\"请输入正确格式的邮箱!\")\n        }\n      }\n    },\n    validateUsername(rule, value, callback){\n      var params = {\n        tableName: 'sys_user',\n        fieldName: 'username',\n        fieldVal: value,\n        dataId: this.userId\n      };\n      duplicateCheck(params).then((res) => {\n        if (res.success) {\n        callback()\n      } else {\n        callback(\"用户名已存在!\")\n      }\n    })\n    },\n    handleConfirmBlur  (e) {\n      const value = e.target.value;\n      this.confirmDirty = this.confirmDirty || !!value\n    },\n\n    normFile  (e) {\n      console.log('Upload event:', e);\n      if (Array.isArray(e)) {\n        return e\n      }\n      return e && e.fileList\n    },\n    beforeUpload: function(file){\n      var fileType = file.type;\n      if(fileType.indexOf('image')<0){\n        this.$message.warning('请上传图片');\n        return false;\n      }\n      //TODO 验证文件大小\n    },\n    handleChange (info) {\n      this.picUrl = \"\";\n      if (info.file.status === 'uploading') {\n        this.uploadLoading = true;\n        return\n      }\n      if (info.file.status === 'done') {\n        var response = info.file.response;\n        this.uploadLoading = false;\n        console.log(response);\n        if(response.success){\n          this.model.avatar = response.message;\n          this.picUrl = \"Has no pic url yet\";\n        }else{\n          this.$message.warning(response.message);\n        }\n      }\n    },\n    getAvatarView(){\n      return this.url.imgerver +\"/\"+ this.model.avatar;\n    },\n    // 搜索用户对应的部门API\n    onSearch(){\n      this.$refs.departWindow.add(this.checkedDepartKeys,this.userId);\n    },\n\n    // 获取用户对应部门弹出框提交给返回的数据\n    modalFormOk (formData) {\n      this.checkedDepartNames = [];\n      this.selectedDepartKeys = [];\n      this.checkedDepartNameString = '';\n      this.userId = formData.userId;\n      this.userDepartModel.userId = formData.userId;\n      for (let i = 0; i < formData.departIdList.length; i++) {\n        this.selectedDepartKeys.push(formData.departIdList[i].key);\n        this.checkedDepartNames.push(formData.departIdList[i].title);\n        this.checkedDepartNameString = this.checkedDepartNames.join(\",\");\n      }\n      this.userDepartModel.departIdList = this.selectedDepartKeys;\n      this.checkedDepartKeys = this.selectedDepartKeys  //更新当前的选择keys\n     },\n    // 根据屏幕变化,设置抽屉尺寸\n    resetScreenSize(){\n      let screenWidth = document.body.clientWidth;\n      if(screenWidth < 500){\n        this.drawerWidth = screenWidth;\n      }else{\n        this.drawerWidth = 700;\n      }\n    },\n  }\n}\n",{"version":3,"sources":["UserModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\n  <a-drawer\n    :title=\"title\"\n    :maskClosable=\"true\"\n    :width=\"drawerWidth\"\n    placement=\"right\"\n    :closable=\"true\"\n    @close=\"handleCancel\"\n    :visible=\"visible\"\n    style=\"height: calc(100% - 55px);overflow: auto;padding-bottom: 53px;\">\n\n    <template slot=\"title\">\n      <div style=\"width: 100%;\">\n        <span>{{ title }}</span>\n        <span style=\"display:inline-block;width:calc(100% - 51px);padding-right:10px;text-align: right\">\n          <a-button @click=\"toggleScreen\" icon=\"appstore\" style=\"height:20px;width:20px;border:0px\"></a-button>\n        </span>\n      </div>\n\n    </template>\n\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form :form=\"form\">\n\n        <a-form-item label=\"用户账号\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-input placeholder=\"请输入用户账号\" v-decorator=\"[ 'username', validatorRules.username]\" :readOnly=\"!!model.id\"/>\n        </a-form-item>\n\n        <template v-if=\"!model.id\">\n          <a-form-item label=\"登陆密码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" >\n            <a-input type=\"password\" placeholder=\"请输入登陆密码\" v-decorator=\"[ 'password', validatorRules.password]\" />\n          </a-form-item>\n\n          <a-form-item label=\"确认密码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" >\n            <a-input type=\"password\" @blur=\"handleConfirmBlur\" placeholder=\"请重新输入登陆密码\" v-decorator=\"[ 'confirmpassword', validatorRules.confirmpassword]\"/>\n          </a-form-item>\n        </template>\n\n        <a-form-item label=\"用户名字\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" >\n          <a-input placeholder=\"请输入用户名称\" v-decorator=\"[ 'realname', validatorRules.realname]\" />\n        </a-form-item>\n\n        <a-form-item label=\"角色分配\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" v-show=\"!roleDisabled\" >\n          <a-select\n            mode=\"multiple\"\n            style=\"width: 100%\"\n            placeholder=\"请选择用户角色\"\n            optionFilterProp = \"children\"\n            v-model=\"selectedRole\">\n            <a-select-option v-for=\"(role,roleindex) in roleList\" :key=\"roleindex.toString()\" :value=\"role.id\">\n              {{ role.roleName }}\n            </a-select-option>\n          </a-select>\n        </a-form-item>\n\n        <!--部门分配-->\n        <a-form-item label=\"部门分配\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" v-show=\"!departDisabled\">\n          <a-input-search\n            placeholder=\"点击右侧按钮选择部门\"\n            v-model=\"checkedDepartNameString\"\n            disabled\n            @search=\"onSearch\">\n            <a-button slot=\"enterButton\" icon=\"search\">选择</a-button>\n          </a-input-search>\n        </a-form-item>\n        <a-form-item label=\"头像\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-upload\n            listType=\"picture-card\"\n            class=\"avatar-uploader\"\n            :showUploadList=\"false\"\n            :action=\"uploadAction\"\n            :data=\"{'isup':1}\"\n            :headers=\"headers\"\n            :beforeUpload=\"beforeUpload\"\n            @change=\"handleChange\"\n          >\n            <img v-if=\"picUrl\" :src=\"getAvatarView()\" alt=\"头像\" style=\"height:104px;max-width:300px\"/>\n            <div v-else>\n              <a-icon :type=\"uploadLoading ? 'loading' : 'plus'\" />\n              <div class=\"ant-upload-text\">上传</div>\n            </div>\n          </a-upload>\n        </a-form-item>\n\n        <a-form-item label=\"生日\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-date-picker\n            style=\"width: 100%\"\n            placeholder=\"请选择生日\"\n            v-decorator=\"['birthday', {initialValue:!model.birthday?null:moment(model.birthday,dateFormat)}]\"/>\n        </a-form-item>\n\n        <a-form-item label=\"性别\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-select v-decorator=\"[ 'sex', {}]\" placeholder=\"请选择性别\">\n            <a-select-option :value=\"1\">男</a-select-option>\n            <a-select-option :value=\"2\">女</a-select-option>\n          </a-select>\n        </a-form-item>\n\n        <a-form-item label=\"邮箱\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-input placeholder=\"请输入邮箱\" v-decorator=\"[ 'email', validatorRules.email]\" />\n        </a-form-item>\n\n        <a-form-item label=\"手机号码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-input placeholder=\"请输入手机号码\" :disabled=\"isDisabledAuth('user:form:phone')\" v-decorator=\"[ 'phone', validatorRules.phone]\" />\n        </a-form-item>\n\n        <a-form-item label=\"工作流引擎\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <j-dict-select-tag  v-decorator=\"['activitiSync', {}]\" placeholder=\"请选择是否同步工作流引擎\" :type=\"'radio'\" :triggerChange=\"true\" dictCode=\"activiti_sync\"/>\n        </a-form-item>\n\n      </a-form>\n    </a-spin>\n    <depart-window ref=\"departWindow\" @ok=\"modalFormOk\"></depart-window>\n\n    <div class=\"drawer-bootom-button\" v-show=\"!disableSubmit\">\n      <a-popconfirm title=\"确定放弃编辑？\" @confirm=\"handleCancel\" okText=\"确定\" cancelText=\"取消\">\n        <a-button style=\"margin-right: .8rem\">取消</a-button>\n      </a-popconfirm>\n      <a-button @click=\"handleSubmit\" type=\"primary\" :loading=\"confirmLoading\">提交</a-button>\n    </div>\n  </a-drawer>\n</template>\n\n<script>\n  import pick from 'lodash.pick'\n  import moment from 'moment'\n  import Vue from 'vue'\n  // 引入搜索部门弹出框的组件\n  import departWindow from './DepartWindow'\n  import { ACCESS_TOKEN } from \"@/store/mutation-types\"\n  import { getAction } from '@/api/manage'\n  import {addUser,editUser,queryUserRole,queryall } from '@/api/api'\n  import { disabledAuthFilter } from \"@/utils/authFilter\"\n  import {duplicateCheck } from '@/api/api'\n\n  export default {\n    name: \"RoleModal\",\n    components: {\n      departWindow,\n    },\n    data () {\n      return {\n        departDisabled: false, //是否是我的部门调用该页面\n        roleDisabled: false, //是否是角色维护调用该页面\n        modalWidth:800,\n        drawerWidth:700,\n        modaltoggleFlag:true,\n        confirmDirty: false,\n        selectedDepartKeys:[], //保存用户选择部门id\n        checkedDepartKeys:[],\n        checkedDepartNames:[], // 保存部门的名称 =>title\n        checkedDepartNameString:\"\", // 保存部门的名称 =>title\n        userId:\"\", //保存用户id\n        disableSubmit:false,\n        userDepartModel:{userId:'',departIdList:[]}, // 保存SysUserDepart的用户部门中间表数据需要的对象\n        dateFormat:\"YYYY-MM-DD\",\n        validatorRules:{\n          username:{\n            rules: [{\n              required: true, message: '请输入用户账号!'\n            },{\n              validator: this.validateUsername,\n            }]\n          },\n          password:{\n            rules: [{\n              required: true,\n              pattern:/^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,./]).{8,}$/,\n              message: '密码由8位数字、大小写字母和特殊符号组成!'\n            }, {\n              validator: this.validateToNextPassword,\n            }],\n          },\n          confirmpassword:{\n            rules: [{\n              required: true, message: '请重新输入登陆密码!',\n            }, {\n              validator: this.compareToFirstPassword,\n            }],\n          },\n          realname:{rules: [{ required: true, message: '请输入用户名称!' }]},\n          phone:{rules: [{validator: this.validatePhone}]},\n          email:{\n            rules: [{\n              validator: this.validateEmail\n            }],\n          },\n          roles:{}\n          //  sex:{initialValue:((!this.model.sex)?\"\": (this.model.sex+\"\"))}\n        },\n        title:\"操作\",\n        visible: false,\n        model: {},\n        roleList:[],\n        selectedRole:[],\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n        uploadLoading:false,\n        confirmLoading: false,\n        headers:{},\n        form:this.$form.createForm(this),\n        picUrl: \"\",\n        url: {\n          fileUpload: window._CONFIG['domianURL']+\"/sys/common/upload\",\n          imgerver: window._CONFIG['domianURL']+\"/sys/common/view\",\n          userWithDepart: \"/sys/user/userDepartList\", // 引入为指定用户查看部门信息需要的url\n          userId:\"/sys/user/generateUserId\", // 引入生成添加用户情况下的url\n          syncUserByUserName:\"/process/extActProcess/doSyncUserByUserName\",//同步用户到工作流\n        },\n      }\n    },\n    created () {\n      const token = Vue.ls.get(ACCESS_TOKEN);\n      this.headers = {\"X-Access-Token\":token}\n\n    },\n    computed:{\n      uploadAction:function () {\n        return this.url.fileUpload;\n      }\n    },\n    methods: {\n      isDisabledAuth(code){\n        return disabledAuthFilter(code);\n      },\n      //窗口最大化切换\n      toggleScreen(){\n        if(this.modaltoggleFlag){\n          this.modalWidth = window.innerWidth;\n        }else{\n          this.modalWidth = 800;\n        }\n        this.modaltoggleFlag = !this.modaltoggleFlag;\n      },\n      initialRoleList(){\n        queryall().then((res)=>{\n          if(res.success){\n            this.roleList = res.result;\n          }else{\n            console.log(res.message);\n          }\n        });\n      },\n      loadUserRoles(userid){\n        queryUserRole({userid:userid}).then((res)=>{\n          if(res.success){\n            this.selectedRole = res.result;\n          }else{\n            console.log(res.message);\n          }\n        });\n      },\n      refresh () {\n          this.selectedDepartKeys=[];\n          this.checkedDepartKeys=[];\n          this.checkedDepartNames=[];\n          this.checkedDepartNameString = \"\";\n          this.userId=\"\"\n      },\n      add () {\n        this.picUrl = \"\";\n        this.refresh();\n        this.edit({activitiSync:'1'});\n      },\n      edit (record) {\n        this.resetScreenSize(); // 调用此方法,根据屏幕宽度自适应调整抽屉的宽度\n        let that = this;\n        that.initialRoleList();\n        that.checkedDepartNameString = \"\";\n        that.form.resetFields();\n        if(record.hasOwnProperty(\"id\")){\n          that.loadUserRoles(record.id);\n          this.picUrl = \"Has no pic url yet\";\n        }\n        that.userId = record.id;\n        that.visible = true;\n        that.model = Object.assign({}, record);\n        that.$nextTick(() => {\n          that.form.setFieldsValue(pick(this.model,'username','sex','realname','email','phone','activitiSync'))\n        });\n        // 调用查询用户对应的部门信息的方法\n        that.checkedDepartKeys = [];\n        that.loadCheckedDeparts();\n      },\n      //\n      loadCheckedDeparts(){\n        let that = this;\n        if(!that.userId){return}\n        getAction(that.url.userWithDepart,{userId:that.userId}).then((res)=>{\n          that.checkedDepartNames = [];\n          if(res.success){\n            for (let i = 0; i < res.result.length; i++) {\n              that.checkedDepartNames.push(res.result[i].title);\n              this.checkedDepartNameString = this.checkedDepartNames.join(\",\");\n              that.checkedDepartKeys.push(res.result[i].key);\n            }\n            that.userDepartModel.departIdList = that.checkedDepartKeys\n          }else{\n            console.log(res.message);\n          }\n        })\n      },\n      close () {\n        this.$emit('close');\n        this.visible = false;\n        this.disableSubmit = false;\n        this.selectedRole = [];\n        this.userDepartModel = {userId:'',departIdList:[]};\n        this.checkedDepartNames = [];\n        this.checkedDepartNameString='';\n        this.checkedDepartKeys = [];\n        this.selectedDepartKeys = [];\n      },\n      moment,\n      handleSubmit () {\n\n        const that = this;\n        // 触发表单验证\n        this.form.validateFields((err, values) => {\n          if (!err) {\n            that.confirmLoading = true;\n            let avatar = that.model.avatar;\n            if(!values.birthday){\n              values.birthday = '';\n            }else{\n              values.birthday = values.birthday.format(this.dateFormat);\n            }\n            let formData = Object.assign(this.model, values);\n            formData.avatar = avatar;\n            formData.selectedroles = this.selectedRole.length>0?this.selectedRole.join(\",\"):'';\n            formData.selecteddeparts = this.userDepartModel.departIdList.length>0?this.userDepartModel.departIdList.join(\",\"):'';\n\n            // that.addDepartsToUser(that,formData); // 调用根据当前用户添加部门信息的方法\n            let obj;\n            if(!this.model.id){\n              formData.id = this.userId;\n              obj=addUser(formData);\n            }else{\n              obj=editUser(formData);\n            }\n            obj.then((res)=>{\n              if(res.success){\n                that.$message.success(res.message);\n                that.$emit('ok');\n              }else{\n                that.$message.warning(res.message);\n              }\n            }).finally(() => {\n              that.confirmLoading = false;\n              that.checkedDepartNames = [];\n              that.userDepartModel.departIdList = {userId:'',departIdList:[]};\n\n              that.close();\n            })\n\n          }\n        })\n      },\n      handleCancel () {\n        this.close()\n      },\n      validateToNextPassword  (rule, value, callback) {\n        const form = this.form;\n        const confirmpassword=form.getFieldValue('confirmpassword');\n\n        if (value && confirmpassword && value !== confirmpassword) {\n          callback('两次输入的密码不一样！');\n        }\n        if (value && this.confirmDirty) {\n          form.validateFields(['confirm'], { force: true })\n        }\n        callback();\n      },\n      compareToFirstPassword  (rule, value, callback) {\n        const form = this.form;\n        if (value && value !== form.getFieldValue('password')) {\n          callback('两次输入的密码不一样！');\n        } else {\n          callback()\n        }\n      },\n      validatePhone(rule, value, callback){\n        if(!value){\n          callback()\n        }else{\n          if(new RegExp(/^1[3|4|5|7|8][0-9]\\d{8}$/).test(value)){\n            var params = {\n              tableName: 'sys_user',\n              fieldName: 'phone',\n              fieldVal: value,\n              dataId: this.userId\n            };\n            duplicateCheck(params).then((res) => {\n              if (res.success) {\n                callback()\n              } else {\n                callback(\"手机号已存在!\")\n              }\n            })\n          }else{\n            callback(\"请输入正确格式的手机号码!\");\n          }\n        }\n      },\n      validateEmail(rule, value, callback){\n        if(!value){\n          callback()\n        }else{\n          if(new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/).test(value)){\n            var params = {\n              tableName: 'sys_user',\n              fieldName: 'email',\n              fieldVal: value,\n              dataId: this.userId\n            };\n            duplicateCheck(params).then((res) => {\n              console.log(res)\n              if (res.success) {\n                callback()\n              } else {\n                callback(\"邮箱已存在!\")\n              }\n            })\n          }else{\n            callback(\"请输入正确格式的邮箱!\")\n          }\n        }\n      },\n      validateUsername(rule, value, callback){\n        var params = {\n          tableName: 'sys_user',\n          fieldName: 'username',\n          fieldVal: value,\n          dataId: this.userId\n        };\n        duplicateCheck(params).then((res) => {\n          if (res.success) {\n          callback()\n        } else {\n          callback(\"用户名已存在!\")\n        }\n      })\n      },\n      handleConfirmBlur  (e) {\n        const value = e.target.value;\n        this.confirmDirty = this.confirmDirty || !!value\n      },\n\n      normFile  (e) {\n        console.log('Upload event:', e);\n        if (Array.isArray(e)) {\n          return e\n        }\n        return e && e.fileList\n      },\n      beforeUpload: function(file){\n        var fileType = file.type;\n        if(fileType.indexOf('image')<0){\n          this.$message.warning('请上传图片');\n          return false;\n        }\n        //TODO 验证文件大小\n      },\n      handleChange (info) {\n        this.picUrl = \"\";\n        if (info.file.status === 'uploading') {\n          this.uploadLoading = true;\n          return\n        }\n        if (info.file.status === 'done') {\n          var response = info.file.response;\n          this.uploadLoading = false;\n          console.log(response);\n          if(response.success){\n            this.model.avatar = response.message;\n            this.picUrl = \"Has no pic url yet\";\n          }else{\n            this.$message.warning(response.message);\n          }\n        }\n      },\n      getAvatarView(){\n        return this.url.imgerver +\"/\"+ this.model.avatar;\n      },\n      // 搜索用户对应的部门API\n      onSearch(){\n        this.$refs.departWindow.add(this.checkedDepartKeys,this.userId);\n      },\n\n      // 获取用户对应部门弹出框提交给返回的数据\n      modalFormOk (formData) {\n        this.checkedDepartNames = [];\n        this.selectedDepartKeys = [];\n        this.checkedDepartNameString = '';\n        this.userId = formData.userId;\n        this.userDepartModel.userId = formData.userId;\n        for (let i = 0; i < formData.departIdList.length; i++) {\n          this.selectedDepartKeys.push(formData.departIdList[i].key);\n          this.checkedDepartNames.push(formData.departIdList[i].title);\n          this.checkedDepartNameString = this.checkedDepartNames.join(\",\");\n        }\n        this.userDepartModel.departIdList = this.selectedDepartKeys;\n        this.checkedDepartKeys = this.selectedDepartKeys  //更新当前的选择keys\n       },\n      // 根据屏幕变化,设置抽屉尺寸\n      resetScreenSize(){\n        let screenWidth = document.body.clientWidth;\n        if(screenWidth < 500){\n          this.drawerWidth = screenWidth;\n        }else{\n          this.drawerWidth = 700;\n        }\n      },\n    }\n  }\n</script>\n\n<style scoped>\n  .avatar-uploader > .ant-upload {\n    width:104px;\n    height:104px;\n  }\n  .ant-upload-select-picture-card i {\n    font-size: 49px;\n    color: #999;\n  }\n\n  .ant-upload-select-picture-card .ant-upload-text {\n    margin-top: 8px;\n    color: #666;\n  }\n\n  .ant-table-tbody .ant-table-row td{\n    padding-top:10px;\n    padding-bottom:10px;\n  }\n\n  .drawer-bootom-button {\n    position: absolute;\n    bottom: -8px;\n    width: 100%;\n    border-top: 1px solid #e8e8e8;\n    padding: 10px 16px;\n    text-align: right;\n    left: 0;\n    background: #fff;\n    border-radius: 0 0 2px 2px;\n  }\n</style>"]}]}