{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/list/modules/RoleModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/list/modules/RoleModal.vue","mtime":1571018558926},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getPermissions } from '@/api/manage'\nimport { actionToObject } from '@/utils/permissions'\nimport pick from 'lodash.pick'\n\nexport default {\n  name: \"RoleModal\",\n  data () {\n    return {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n      visible: false,\n      confirmLoading: false,\n      mdl: {},\n\n      form: this.$form.createForm(this),\n      permissions: []\n    }\n  },\n  created () {\n    this.loadPermissions()\n  },\n  methods: {\n    add () {\n      this.edit({ id: 0 })\n    },\n    edit (record) {\n      this.mdl = Object.assign({}, record)\n      this.visible = true\n\n      // 有权限表，处理勾选\n      if (this.mdl.permissions && this.permissions) {\n        // 先处理要勾选的权限结构\n        const permissionsAction = {}\n        this.mdl.permissions.forEach(permission => {\n          permissionsAction[permission.permissionId] = permission.actionEntitySet.map(entity => entity.action)\n        })\n        // 把权限表遍历一遍，设定要勾选的权限 action\n        this.permissions.forEach(permission => {\n          permission.selected = permissionsAction[permission.id]\n        })\n      }\n\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.mdl, 'id', 'name', 'status', 'describe'))\n      })\n      console.log('this.mdl', this.mdl)\n\n    },\n    close () {\n      this.$emit('close')\n      this.visible = false\n    },\n    handleOk () {\n      const _this = this\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        // 验证表单没错误\n        if (!err) {\n          console.log('form values', values)\n\n          _this.confirmLoading = true\n          // 模拟后端请求 2000 毫秒延迟\n          new Promise((resolve) => {\n            setTimeout(() => resolve(), 2000)\n          }).then(() => {\n            // Do something\n            _this.$message.success('保存成功')\n            _this.$emit('ok')\n          }).catch(() => {\n            // Do something\n          }).finally(() => {\n            _this.confirmLoading = false\n            _this.close()\n          })\n        }\n      })\n    },\n    handleCancel () {\n      this.close()\n    },\n    onChangeCheck (permission) {\n      permission.indeterminate = !!permission.selected.length && (permission.selected.length < permission.actionsOptions.length)\n      permission.checkedAll = permission.selected.length === permission.actionsOptions.length\n    },\n    onChangeCheckAll (e, permission) {\n      Object.assign(permission, {\n        selected: e.target.checked ? permission.actionsOptions.map(obj => obj.value) : [],\n        indeterminate: false,\n        checkedAll: e.target.checked\n      })\n    },\n    loadPermissions () {\n      getPermissions().then(res => {\n        let result = res.result\n        this.permissions = result.map(permission => {\n          const options = actionToObject(permission.actionData)\n          permission.checkedAll = false\n          permission.selected = []\n          permission.indeterminate = false\n          permission.actionsOptions = options.map(option => {\n            return {\n              label: option.describe,\n              value: option.action\n            }\n          })\n          return permission\n        })\n      })\n    }\n\n  }\n}\n",{"version":3,"sources":["RoleModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"RoleModal.vue","sourceRoot":"src/views/list/modules","sourcesContent":["<template>\n  <a-modal\n    title=\"操作\"\n    :width=\"800\"\n    :visible=\"visible\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleOk\"\n    @cancel=\"handleCancel\"\n  >\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form :form=\"form\">\n\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"唯一识别码\"\n          hasFeedback\n        >\n          <a-input placeholder=\"唯一识别码\" disabled=\"disabled\" v-decorator=\"[ 'id', {rules: []} ]\" />\n        </a-form-item>\n\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"角色名称\"\n          hasFeedback >\n          <a-input placeholder=\"起一个名字\" v-decorator=\"[ 'name', {rules: [{ required: true, message: '不起一个名字吗？' }] }]\" />\n        </a-form-item>\n\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"状态\"\n          hasFeedback >\n          <a-select v-decorator=\"[ 'status', {rules: []} ]\">\n            <a-select-option :value=\"1\">正常</a-select-option>\n            <a-select-option :value=\"2\">禁用</a-select-option>\n          </a-select>\n        </a-form-item>\n\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"描述\"\n          hasFeedback\n        >\n          <a-textarea :rows=\"5\" placeholder=\"...\" v-decorator=\"[ 'describe', { rules: [] } ]\" />\n        </a-form-item>\n\n        <a-divider/>\n\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"拥有权限\"\n          hasFeedback\n        >\n          <a-row :gutter=\"16\" v-for=\"(permission, index) in permissions\" :key=\"index\">\n            <a-col :span=\"4\">\n              {{ permission.name }}：\n            </a-col>\n            <a-col :span=\"20\">\n              <a-checkbox\n                v-if=\"permission.actionsOptions.length > 0\"\n                :indeterminate=\"permission.indeterminate\"\n                :checked=\"permission.checkedAll\"\n                @change=\"onChangeCheckAll($event, permission)\">\n                全选\n              </a-checkbox>\n              <a-checkbox-group :options=\"permission.actionsOptions\" v-model=\"permission.selected\" @change=\"onChangeCheck(permission)\" />\n            </a-col>\n          </a-row>\n\n        </a-form-item>\n      </a-form>\n    </a-spin>\n  </a-modal>\n</template>\n\n<script>\n  import { getPermissions } from '@/api/manage'\n  import { actionToObject } from '@/utils/permissions'\n  import pick from 'lodash.pick'\n\n  export default {\n    name: \"RoleModal\",\n    data () {\n      return {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n        visible: false,\n        confirmLoading: false,\n        mdl: {},\n\n        form: this.$form.createForm(this),\n        permissions: []\n      }\n    },\n    created () {\n      this.loadPermissions()\n    },\n    methods: {\n      add () {\n        this.edit({ id: 0 })\n      },\n      edit (record) {\n        this.mdl = Object.assign({}, record)\n        this.visible = true\n\n        // 有权限表，处理勾选\n        if (this.mdl.permissions && this.permissions) {\n          // 先处理要勾选的权限结构\n          const permissionsAction = {}\n          this.mdl.permissions.forEach(permission => {\n            permissionsAction[permission.permissionId] = permission.actionEntitySet.map(entity => entity.action)\n          })\n          // 把权限表遍历一遍，设定要勾选的权限 action\n          this.permissions.forEach(permission => {\n            permission.selected = permissionsAction[permission.id]\n          })\n        }\n\n        this.$nextTick(() => {\n          this.form.setFieldsValue(pick(this.mdl, 'id', 'name', 'status', 'describe'))\n        })\n        console.log('this.mdl', this.mdl)\n\n      },\n      close () {\n        this.$emit('close')\n        this.visible = false\n      },\n      handleOk () {\n        const _this = this\n        // 触发表单验证\n        this.form.validateFields((err, values) => {\n          // 验证表单没错误\n          if (!err) {\n            console.log('form values', values)\n\n            _this.confirmLoading = true\n            // 模拟后端请求 2000 毫秒延迟\n            new Promise((resolve) => {\n              setTimeout(() => resolve(), 2000)\n            }).then(() => {\n              // Do something\n              _this.$message.success('保存成功')\n              _this.$emit('ok')\n            }).catch(() => {\n              // Do something\n            }).finally(() => {\n              _this.confirmLoading = false\n              _this.close()\n            })\n          }\n        })\n      },\n      handleCancel () {\n        this.close()\n      },\n      onChangeCheck (permission) {\n        permission.indeterminate = !!permission.selected.length && (permission.selected.length < permission.actionsOptions.length)\n        permission.checkedAll = permission.selected.length === permission.actionsOptions.length\n      },\n      onChangeCheckAll (e, permission) {\n        Object.assign(permission, {\n          selected: e.target.checked ? permission.actionsOptions.map(obj => obj.value) : [],\n          indeterminate: false,\n          checkedAll: e.target.checked\n        })\n      },\n      loadPermissions () {\n        getPermissions().then(res => {\n          let result = res.result\n          this.permissions = result.map(permission => {\n            const options = actionToObject(permission.actionData)\n            permission.checkedAll = false\n            permission.selected = []\n            permission.indeterminate = false\n            permission.actionsOptions = options.map(option => {\n              return {\n                label: option.describe,\n                value: option.action\n              }\n            })\n            return permission\n          })\n        })\n      }\n\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"]}]}