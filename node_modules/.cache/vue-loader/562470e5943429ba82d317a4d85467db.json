{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/page/GlobalLayout.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/page/GlobalLayout.vue","mtime":1571018558903},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport SideMenu from '@/components/menu/SideMenu'\nimport GlobalHeader from '@/components/page/GlobalHeader'\nimport GlobalFooter from '@/components/page/GlobalFooter'\nimport SettingDrawer from '@/components/setting/SettingDrawer'\nimport { triggerWindowResizeEvent } from '@/utils/util'\nimport { mapState, mapActions } from 'vuex'\nimport { mixin, mixinDevice } from '@/utils/mixin.js'\n\nexport default {\n  name: 'GlobalLayout',\n  components: {\n    SideMenu,\n    GlobalHeader,\n    GlobalFooter,\n    SettingDrawer\n  },\n  mixins: [mixin, mixinDevice],\n  data() {\n    return {\n      collapsed: false,\n      activeMenu:{},\n      menus: []\n    }\n  },\n  computed: {\n    ...mapState({\n      // 主路由\n      mainRouters: state => state.permission.addRouters,\n      // 后台菜单\n      permissionMenuList: state => state.user.permissionList\n    })\n  },\n  watch: {\n    sidebarOpened(val) {\n      this.collapsed = !val\n    }\n  },\n  created() {\n    //--update-begin----author:scott---date:20190320------for:根据后台菜单配置，判断是否路由菜单字段，动态选择是否生成路由（为了支持参数URL菜单）------\n    //this.menus = this.mainRouters.find((item) => item.path === '/').children;\n    this.menus = this.permissionMenuList\n    // 根据后台配置菜单，重新排序加载路由信息\n    console.log('----加载菜单逻辑----')\n    console.log(this.mainRouters)\n    console.log(this.permissionMenuList)\n    console.log('----navTheme------'+this.navTheme)\n    //--update-end----author:scott---date:20190320------for:根据后台菜单配置，判断是否路由菜单字段，动态选择是否生成路由（为了支持参数URL菜单）------\n  },\n  methods: {\n    ...mapActions(['setSidebar']),\n    toggle() {\n      this.collapsed = !this.collapsed\n      this.setSidebar(!this.collapsed)\n      triggerWindowResizeEvent()\n    },\n    menuSelect() {\n      if (!this.isDesktop()) {\n        this.collapsed = false\n      }\n    },\n    //update-begin-author:taoyan date:20190430 for:动态路由title显示配置的菜单title而不是其对应路由的title\n    myMenuSelect(value){\n      //此处触发动态路由被点击事件\n      this.findMenuBykey(this.menus,value.key)\n      this.$emit(\"dynamicRouterShow\",value.key,this.activeMenu.meta.title)\n    },\n    findMenuBykey(menus,key){\n      for(let i of menus){\n        if(i.path==key){\n          this.activeMenu = {...i}\n        }else if(i.children && i.children.length>0){\n          this.findMenuBykey(i.children,key)\n        }\n      }\n    }\n    //update-end-author:taoyan date:20190430 for:动态路由title显示配置的菜单title而不是其对应路由的title\n  }\n}\n\n",null]}