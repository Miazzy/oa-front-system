{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/tools/UserPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/tools/UserPassword.vue","mtime":1571018558907},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { putAction } from '@/api/manage'\n\nexport default {\n  name: \"UserPassword\",\n  data () {\n    return {\n      title:\"修改密码\",\n      modalWidth:800,\n      visible: false,\n      confirmLoading: false,\n      validatorRules:{\n        oldpassword:{\n          rules: [{\n            required: true, message: '请输入旧密码!',\n          }],\n        },\n        password:{\n          rules: [{\n            required: true, message: '请输入新密码!',\n          }, {\n            validator: this.validateToNextPassword,\n          }],\n        },\n        confirmpassword:{\n          rules: [{\n            required: true, message: '请确认新密码!',\n          }, {\n            validator: this.compareToFirstPassword,\n          }],\n        }\n      },\n      confirmDirty:false,\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n\n      form:this.$form.createForm(this),\n      url: \"sys/user/updatePassword\",\n      username:\"\",\n    }\n  },\n  methods: {\n    show(uname){\n      if(!uname){\n        this.$message.warning(\"当前系统无登陆用户!\");\n        return\n      }else{\n        this.username = uname\n        this.form.resetFields();\n        this.visible = true;\n      }\n    },\n    handleCancel () {\n      this.close()\n    },\n    close () {\n      this.$emit('close');\n      this.visible = false;\n      this.disableSubmit = false;\n      this.selectedRole = [];\n    },\n    handleOk () {\n      const that = this;\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          that.confirmLoading = true;\n          let params = Object.assign({username:this.username},values)\n          console.log(\"修改密码提交数据\",params)\n          putAction(this.url,params).then((res)=>{\n            if(res.success){\n              console.log(res)\n              that.$message.success(res.message);\n              that.close();\n            }else{\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n          })\n        }\n      })\n    },\n    validateToNextPassword  (rule, value, callback) {\n      const form = this.form;\n      if (value && this.confirmDirty) {\n        form.validateFields(['confirm'], { force: true })\n      }\n      callback();\n    },\n    compareToFirstPassword  (rule, value, callback) {\n      const form = this.form;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('两次输入的密码不一样！');\n      } else {\n        callback()\n      }\n    },\n    handleConfirmBlur  (e) {\n      const value = e.target.value\n      this.confirmDirty = this.confirmDirty || !!value\n    }\n\n  }\n}\n",{"version":3,"sources":["UserPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"UserPassword.vue","sourceRoot":"src/components/tools","sourcesContent":["<template>\n  <a-modal\n    :title=\"title\"\n    :width=\"modalWidth\"\n    :visible=\"visible\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleOk\"\n    @cancel=\"handleCancel\"\n    cancelText=\"关闭\"\n  >\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form :form=\"form\">\n\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"旧密码\">\n          <a-input type=\"password\" placeholder=\"请输入旧密码\" v-decorator=\"[ 'oldpassword', validatorRules.oldpassword]\" />\n        </a-form-item>\n\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"新密码\">\n          <a-input type=\"password\" placeholder=\"请输入新密码\" v-decorator=\"[ 'password', validatorRules.password]\" />\n        </a-form-item>\n\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"确认新密码\">\n          <a-input type=\"password\" @blur=\"handleConfirmBlur\" placeholder=\"请确认新密码\" v-decorator=\"[ 'confirmpassword', validatorRules.confirmpassword]\"/>\n        </a-form-item>\n\n      </a-form>\n    </a-spin>\n  </a-modal>\n</template>\n\n<script>\n\n  import { putAction } from '@/api/manage'\n\n  export default {\n    name: \"UserPassword\",\n    data () {\n      return {\n        title:\"修改密码\",\n        modalWidth:800,\n        visible: false,\n        confirmLoading: false,\n        validatorRules:{\n          oldpassword:{\n            rules: [{\n              required: true, message: '请输入旧密码!',\n            }],\n          },\n          password:{\n            rules: [{\n              required: true, message: '请输入新密码!',\n            }, {\n              validator: this.validateToNextPassword,\n            }],\n          },\n          confirmpassword:{\n            rules: [{\n              required: true, message: '请确认新密码!',\n            }, {\n              validator: this.compareToFirstPassword,\n            }],\n          }\n        },\n        confirmDirty:false,\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n\n        form:this.$form.createForm(this),\n        url: \"sys/user/updatePassword\",\n        username:\"\",\n      }\n    },\n    methods: {\n      show(uname){\n        if(!uname){\n          this.$message.warning(\"当前系统无登陆用户!\");\n          return\n        }else{\n          this.username = uname\n          this.form.resetFields();\n          this.visible = true;\n        }\n      },\n      handleCancel () {\n        this.close()\n      },\n      close () {\n        this.$emit('close');\n        this.visible = false;\n        this.disableSubmit = false;\n        this.selectedRole = [];\n      },\n      handleOk () {\n        const that = this;\n        // 触发表单验证\n        this.form.validateFields((err, values) => {\n          if (!err) {\n            that.confirmLoading = true;\n            let params = Object.assign({username:this.username},values)\n            console.log(\"修改密码提交数据\",params)\n            putAction(this.url,params).then((res)=>{\n              if(res.success){\n                console.log(res)\n                that.$message.success(res.message);\n                that.close();\n              }else{\n                that.$message.warning(res.message);\n              }\n            }).finally(() => {\n              that.confirmLoading = false;\n            })\n          }\n        })\n      },\n      validateToNextPassword  (rule, value, callback) {\n        const form = this.form;\n        if (value && this.confirmDirty) {\n          form.validateFields(['confirm'], { force: true })\n        }\n        callback();\n      },\n      compareToFirstPassword  (rule, value, callback) {\n        const form = this.form;\n        if (value && value !== form.getFieldValue('password')) {\n          callback('两次输入的密码不一样！');\n        } else {\n          callback()\n        }\n      },\n      handleConfirmBlur  (e) {\n        const value = e.target.value\n        this.confirmDirty = this.confirmDirty || !!value\n      }\n\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>\n\n"]}]}