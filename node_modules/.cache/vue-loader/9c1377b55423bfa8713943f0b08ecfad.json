{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/jeecg/JEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/jeecg/JEditor.vue","mtime":1571018558897},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport tinymce from 'tinymce/tinymce'\nimport Editor from '@tinymce/tinymce-vue'\nimport 'tinymce/themes/silver/theme'\nimport 'tinymce/plugins/image'\nimport 'tinymce/plugins/media'\nimport 'tinymce/plugins/table'\nimport 'tinymce/plugins/lists'\nimport 'tinymce/plugins/contextmenu'\nimport 'tinymce/plugins/wordcount'\nimport 'tinymce/plugins/colorpicker'\nimport 'tinymce/plugins/textcolor'\nimport 'tinymce/plugins/fullscreen'\nexport default {\n  components: {\n    Editor\n  },\n  props: {\n    value: {\n      type: String,\n      required:false\n    },\n    triggerChange:{\n      type: Boolean,\n      default: false,\n      required:false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    plugins: {\n      type: [String, Array],\n      default: 'lists image media table textcolor wordcount contextmenu fullscreen'\n    },\n    toolbar: {\n      type: [String, Array],\n      default: 'undo redo |  formatselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | lists image media table | removeformat | fullscreen'\n    }\n  },\n  data() {\n    return {\n      //初始化配置\n      init: {\n        language_url: '/tinymce/langs/zh_CN.js',\n        language: 'zh_CN',\n        skin_url: '/tinymce/skins/lightgray',\n        height: 300,\n        plugins: this.plugins,\n        toolbar: this.toolbar,\n        branding: false,\n        menubar: false,\n        images_upload_handler: (blobInfo, success) => {\n          const img = 'data:image/jpeg;base64,' + blobInfo.base64()\n          success(img)\n        }\n      },\n      myValue: this.value\n    }\n  },\n  mounted() {\n    tinymce.init({})\n  },\n  methods: {\n\n    onClick(e) {\n      this.$emit('onClick', e, tinymce)\n    },\n    //可以添加一些自己的自定义事件，如清空内容\n    clear() {\n      this.myValue = ''\n    }\n  },\n  watch: {\n    value(newValue) {\n      this.myValue = (newValue == null ? '' : newValue)\n    },\n    myValue(newValue) {\n      console.log(newValue)\n      if(this.triggerChange){\n        console.log(1)\n        this.$emit('change', newValue)\n      }else{\n        console.log(2)\n        this.$emit('input', newValue)\n      }\n    }\n  }\n}\n\n",{"version":3,"sources":["JEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JEditor.vue","sourceRoot":"src/components/jeecg","sourcesContent":["<template>\n  <div class=\"tinymce-editor\">\n    <editor\n      v-model=\"myValue\"\n      :init=\"init\"\n      :disabled=\"disabled\"\n      @onClick=\"onClick\">\n    </editor>\n  </div>\n</template>\n\n<script>\n  import tinymce from 'tinymce/tinymce'\n  import Editor from '@tinymce/tinymce-vue'\n  import 'tinymce/themes/silver/theme'\n  import 'tinymce/plugins/image'\n  import 'tinymce/plugins/media'\n  import 'tinymce/plugins/table'\n  import 'tinymce/plugins/lists'\n  import 'tinymce/plugins/contextmenu'\n  import 'tinymce/plugins/wordcount'\n  import 'tinymce/plugins/colorpicker'\n  import 'tinymce/plugins/textcolor'\n  import 'tinymce/plugins/fullscreen'\n  export default {\n    components: {\n      Editor\n    },\n    props: {\n      value: {\n        type: String,\n        required:false\n      },\n      triggerChange:{\n        type: Boolean,\n        default: false,\n        required:false\n      },\n      disabled: {\n        type: Boolean,\n        default: false\n      },\n      plugins: {\n        type: [String, Array],\n        default: 'lists image media table textcolor wordcount contextmenu fullscreen'\n      },\n      toolbar: {\n        type: [String, Array],\n        default: 'undo redo |  formatselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | lists image media table | removeformat | fullscreen'\n      }\n    },\n    data() {\n      return {\n        //初始化配置\n        init: {\n          language_url: '/tinymce/langs/zh_CN.js',\n          language: 'zh_CN',\n          skin_url: '/tinymce/skins/lightgray',\n          height: 300,\n          plugins: this.plugins,\n          toolbar: this.toolbar,\n          branding: false,\n          menubar: false,\n          images_upload_handler: (blobInfo, success) => {\n            const img = 'data:image/jpeg;base64,' + blobInfo.base64()\n            success(img)\n          }\n        },\n        myValue: this.value\n      }\n    },\n    mounted() {\n      tinymce.init({})\n    },\n    methods: {\n\n      onClick(e) {\n        this.$emit('onClick', e, tinymce)\n      },\n      //可以添加一些自己的自定义事件，如清空内容\n      clear() {\n        this.myValue = ''\n      }\n    },\n    watch: {\n      value(newValue) {\n        this.myValue = (newValue == null ? '' : newValue)\n      },\n      myValue(newValue) {\n        console.log(newValue)\n        if(this.triggerChange){\n          console.log(1)\n          this.$emit('change', newValue)\n        }else{\n          console.log(2)\n          this.$emit('input', newValue)\n        }\n      }\n    }\n  }\n\n</script>\n<style scoped>\n</style>"]}]}