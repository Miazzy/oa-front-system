{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/user/Register.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/user/Register.vue","mtime":1571018558938},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/css-loader/index.js","mtime":1571212864860},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.user-register {\n\n  &.error {\n    color: #ff0000;\n  }\n\n  &.warning {\n    color: #ff7e05;\n  }\n\n  &.success {\n    color: #52c41a;\n  }\n\n}\n\n.user-layout-register {\n  .ant-input-group-addon:first-child {\n    background-color: #fff;\n  }\n}\n",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiUA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\n  <div class=\"main user-layout-register\">\n    <h3><span>注册</span></h3>\n    <a-form ref=\"formRegister\" :autoFormCreate=\"(form)=>{this.form = form}\" id=\"formRegister\">\n      <a-form-item\n        fieldDecoratorId=\"username\"\n        :fieldDecoratorOptions=\"{rules: [{ required: true, message: '用户名不能为空'}, { validator: this.checkUsername }], validateTrigger: ['change', 'blur']}\">\n        <a-input size=\"large\" type=\"text\" autocomplete=\"false\" placeholder=\"请输入用户名\"></a-input>\n      </a-form-item>\n\n      <a-popover placement=\"rightTop\" trigger=\"click\" :visible=\"state.passwordLevelChecked\">\n        <template slot=\"content\">\n          <div :style=\"{ width: '240px' }\">\n            <div :class=\"['user-register', passwordLevelClass]\">强度：<span>{{ passwordLevelName }}</span></div>\n            <a-progress :percent=\"state.percent\" :showInfo=\"false\" :strokeColor=\" passwordLevelColor \"/>\n            <div style=\"margin-top: 10px;\">\n              <span>请至少输入 8 个字符。请不要使用容易被猜到的密码。</span>\n            </div>\n          </div>\n        </template>\n        <a-form-item\n          fieldDecoratorId=\"password\"\n          :fieldDecoratorOptions=\"{rules: [{ required: false}, { validator: this.handlePasswordLevel }], validateTrigger: ['change', 'blur']}\">\n          <a-input size=\"large\" type=\"password\" @click=\"handlePasswordInputClick\" autocomplete=\"false\" placeholder=\"至少8位密码，区分大小写\"></a-input>\n        </a-form-item>\n      </a-popover>\n\n      <a-form-item\n        fieldDecoratorId=\"password2\"\n        :fieldDecoratorOptions=\"{rules: [{ required: true, message: '至少8位密码，区分大小写' }, { validator: this.handlePasswordCheck }], validateTrigger: ['change', 'blur']}\">\n\n        <a-input size=\"large\" type=\"password\" autocomplete=\"false\" placeholder=\"确认密码\"></a-input>\n      </a-form-item>\n      <a-form-item\n        fieldDecoratorId=\"email\"\n        :fieldDecoratorOptions=\"{rules: [{ required: true, type: 'email', message: '请输入正确的邮箱地址' }, { validator: this.handleEmailCheck }], validateTrigger: ['change', 'blur']}\">\n        <a-input size=\"large\" type=\"text\" placeholder=\"邮箱\"></a-input>\n      </a-form-item>\n      <a-form-item\n        fieldDecoratorId=\"mobile\"\n        :fieldDecoratorOptions=\"{rules: [{ required: true, pattern: /^1[3456789]\\d{9}$/, message: '请输入正确的手机号' }, { validator: this.handlePhoneCheck } ], validateTrigger: ['change', 'blur'] }\">\n        <a-input size=\"large\" placeholder=\"11 位手机号\">\n          <a-select slot=\"addonBefore\" size=\"large\" defaultValue=\"+86\">\n            <a-select-option value=\"+86\">+86</a-select-option>\n            <a-select-option value=\"+87\">+87</a-select-option>\n          </a-select>\n        </a-input>\n      </a-form-item>\n      <!--<a-input-group size=\"large\" compact>\n            <a-select style=\"width: 20%\" size=\"large\" defaultValue=\"+86\">\n              <a-select-option value=\"+86\">+86</a-select-option>\n              <a-select-option value=\"+87\">+87</a-select-option>\n            </a-select>\n            <a-input style=\"width: 80%\" size=\"large\" placeholder=\"11 位手机号\"></a-input>\n          </a-input-group>-->\n\n      <a-row :gutter=\"16\">\n        <a-col class=\"gutter-row\" :span=\"16\">\n          <a-form-item\n            fieldDecoratorId=\"captcha\"\n            :fieldDecoratorOptions=\"{rules: [{ required: true, message: '请输入验证码' }], validateTrigger: 'blur'}\">\n            <a-input size=\"large\" type=\"text\" placeholder=\"验证码\">\n              <a-icon slot=\"prefix\" type=\"mail\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n            </a-input>\n          </a-form-item>\n        </a-col>\n        <a-col class=\"gutter-row\" :span=\"8\">\n          <a-button\n            class=\"getCaptcha\"\n            size=\"large\"\n            :disabled=\"state.smsSendBtn\"\n            @click.stop.prevent=\"getCaptcha\"\n            v-text=\"!state.smsSendBtn && '获取验证码'||(state.time+' s')\"></a-button>\n        </a-col>\n      </a-row>\n\n      <a-form-item>\n        <a-button\n          size=\"large\"\n          type=\"primary\"\n          htmlType=\"submit\"\n          class=\"register-button\"\n          :loading=\"registerBtn\"\n          @click.stop.prevent=\"handleSubmit\"\n          :disabled=\"registerBtn\">注册\n        </a-button>\n        <router-link class=\"login\" :to=\"{ name: 'login' }\">使用已有账户登录</router-link>\n      </a-form-item>\n\n    </a-form>\n  </div>\n</template>\n\n<script>\n  import {mixinDevice} from '@/utils/mixin.js'\n  import {getSmsCaptcha} from '@/api/login'\n  import {getAction, postAction} from '@/api/manage'\n  import {checkOnlyUser} from '@/api/api'\n\n  const levelNames = {\n    0: '低',\n    1: '低',\n    2: '中',\n    3: '强'\n  }\n  const levelClass = {\n    0: 'error',\n    1: 'error',\n    2: 'warning',\n    3: 'success'\n  }\n  const levelColor = {\n    0: '#ff0000',\n    1: '#ff0000',\n    2: '#ff7e05',\n    3: '#52c41a',\n  }\n  export default {\n    name: \"Register\",\n    components: {},\n    mixins: [mixinDevice],\n    data() {\n      return {\n        form: null,\n\n        state: {\n          time: 60,\n          smsSendBtn: false,\n          passwordLevel: 0,\n          passwordLevelChecked: false,\n          percent: 10,\n          progressColor: '#FF0000'\n        },\n        registerBtn: false\n      }\n    },\n    computed: {\n      passwordLevelClass() {\n        return levelClass[this.state.passwordLevel]\n      },\n      passwordLevelName() {\n        return levelNames[this.state.passwordLevel]\n      },\n      passwordLevelColor() {\n        return levelColor[this.state.passwordLevel]\n      }\n    },\n    methods: {\n      checkUsername(rule, value, callback) {\n        var params = {\n          username: value,\n        };\n        checkOnlyUser(params).then((res) => {\n          if (res.success) {\n            callback()\n          } else {\n            callback(\"用户名已存在!\")\n          }\n        })\n      },\n      handleEmailCheck(rule, value, callback) {\n        var params = {\n          email: value,\n        };\n        checkOnlyUser(params).then((res) => {\n          if (res.success) {\n            callback()\n          } else {\n            callback(\"邮箱已存在!\")\n          }\n        })\n      },\n      handlePasswordLevel(rule, value, callback) {\n\n        let level = 0\n        let reg = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,./]).{8,}$/;\n        if (!reg.test(value)) {\n          callback(new Error('密码由8位数字、大小写字母和特殊符号组成!'))\n        }\n        // 判断这个字符串中有没有数字\n        if (/[0-9]/.test(value)) {\n          level++\n        }\n        // 判断字符串中有没有字母\n        if (/[a-zA-Z]/.test(value)) {\n          level++\n        }\n        // 判断字符串中有没有特殊符号\n        if (/[^0-9a-zA-Z_]/.test(value)) {\n          level++\n        }\n        this.state.passwordLevel = level\n        this.state.percent = level * 30\n        if (level >= 2) {\n          if (level >= 3) {\n            this.state.percent = 100\n          }\n          callback()\n        } else {\n          if (level === 0) {\n            this.state.percent = 10\n          }\n          callback(new Error('密码强度不够'))\n        }\n      },\n\n      handlePasswordCheck(rule, value, callback) {\n        let password = this.form.getFieldValue('password')\n        //console.log('value', value)\n        if (value === undefined) {\n          callback(new Error('请输入密码'))\n        }\n        if (value && password && value.trim() !== password.trim()) {\n          callback(new Error('两次密码不一致'))\n        }\n        callback()\n      },\n\n      handlePhoneCheck(rule, value, callback) {\n        var params = {\n          phone: value,\n        };\n        checkOnlyUser(params).then((res) => {\n          if (res.success) {\n            callback()\n          } else {\n            callback(\"手机号已存在!\")\n          }\n        })\n      },\n\n      handlePasswordInputClick() {\n        if (!this.isMobile()) {\n          this.state.passwordLevelChecked = true\n          return;\n        }\n        this.state.passwordLevelChecked = false\n      },\n\n      handleSubmit() {\n        this.form.validateFields((err, values) => {\n          if (!err) {\n            var register = {\n              username: values.username,\n              password: values.password,\n              email: values.email,\n              phone: values.mobile,\n              smscode: values.captcha\n            };\n            postAction(\"/sys/user/register\", register).then((res) => {\n              if (!res.success) {\n                this.registerFailed(res.message)\n              } else {\n                this.$router.push({name: 'registerResult', params: {...values}})\n              }\n            })\n          }\n        })\n      },\n\n      getCaptcha(e) {\n        e.preventDefault()\n        let that = this\n        this.form.validateFields(['mobile'], {force: true}, (err, values) => {\n            if (!err) {\n              this.state.smsSendBtn = true;\n              let interval = window.setInterval(() => {\n                if (that.state.time-- <= 0) {\n                  that.state.time = 60;\n                  that.state.smsSendBtn = false;\n                  window.clearInterval(interval);\n                }\n              }, 1000);\n              const hide = this.$message.loading('验证码发送中..', 0);\n              const params = {\n                mobile: values.mobile,\n                smsmode: \"1\"\n              };\n              postAction(\"/sys/sms\", params).then((res) => {\n                if (!res.success) {\n                  this.registerFailed(res.message);\n                  setTimeout(hide, 0);\n                }\n                setTimeout(hide, 500);\n              }).catch(err => {\n                setTimeout(hide, 1);\n                clearInterval(interval);\n                that.state.time = 60;\n                that.state.smsSendBtn = false;\n                this.requestFailed(err);\n              });\n            }\n          }\n        );\n      },\n      registerFailed(message) {\n        this.$notification['error']({\n          message: \"注册失败\",\n          description: message,\n          duration: 2,\n        });\n\n      },\n      requestFailed(err) {\n        this.$notification['error']({\n          message: '错误',\n          description: ((err.response || {}).data || {}).message || \"请求出现错误，请稍后再试\",\n          duration: 4,\n        });\n        this.registerBtn = false;\n      },\n    },\n    watch: {\n      'state.passwordLevel'(val) {\n        console.log(val)\n\n      }\n    }\n  }\n</script>\n<style lang=\"scss\">\n  .user-register {\n\n    &.error {\n      color: #ff0000;\n    }\n\n    &.warning {\n      color: #ff7e05;\n    }\n\n    &.success {\n      color: #52c41a;\n    }\n\n  }\n\n  .user-layout-register {\n    .ant-input-group-addon:first-child {\n      background-color: #fff;\n    }\n  }\n</style>\n<style lang=\"scss\" scoped>\n  .user-layout-register {\n\n    & > h3 {\n      font-size: 16px;\n      margin-bottom: 20px;\n    }\n\n    .getCaptcha {\n      display: block;\n      width: 100%;\n      height: 40px;\n    }\n\n    .register-button {\n      width: 50%;\n    }\n\n    .login {\n      float: right;\n      line-height: 40px;\n    }\n  }\n</style>"]}]}