{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/user/Step3.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/user/Step3.vue","mtime":1571018558939},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import { putAction,getAction } from '@/api/manage'\n  export default {\n    name: \"Step3\",\n//    components: {\n//      Result\n//    },\n    props: ['userList'],\n    data () {\n      return {\n        loading: false,\n        form: this.$form.createForm(this),\n        accountName: this.userList.username,\n        validatorRules: {\n          username: {rules: [{required: true, message: '用户名不能为空!'}]},\n          password: {\n            rules: [{\n              required: true,\n              pattern: /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,.\\/]).{8,}$/,\n              message: '密码由8位数字、大小写字母和特殊符号组成!!'\n            }, {validator: this.handlePasswordLevel}]\n          },\n          confirmPassword: {rules: [{required: true, message: '密码不能为空!'}, {validator: this.handlePasswordCheck}]},\n        },\n      }\n    },\n    methods: {\n      nextStep () {\n        let that = this\n        that.loading = true\n        this.form.validateFields((err, values) => {\n          if ( !err ){\n          var params={}\n          params.username=this.userList.username;\n          params.password=values.password;\n          params.smscode=this.userList.smscode;\n          params.phone= this.userList.phone;\n          getAction(\"/sys/user/passwordChange\", params).then((res) => {\n            if(res.success){\n            var userList = {\n              username: this.userList.username\n            }\n            console.log(userList);\n            setTimeout(function () {\n              that.$emit('nextStep', userList)\n            }, 1500)\n          }else{\n            this.passwordFailed(res.message);\n            that.loading = false\n          }\n        })\n        } else{\n          that.loading = false\n        }\n      })\n\n      },\n      prevStep () {\n        this.$emit('prevStep', this.userList)\n      },\n\n      handlePasswordCheck (rule, value, callback) {\n        let password = this.form.getFieldValue('password')\n        if (value && password && value.trim() !== password.trim()) {\n          callback(new Error('两次密码不一致'))\n        }\n        callback()\n      },\n      passwordFailed(err){\n        this.$notification[ 'error' ]({\n          message: \"更改密码失败\",\n          description:err,\n          duration: 4,\n        });\n      },\n    }\n  }\n",null]}