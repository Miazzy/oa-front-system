{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/SysCategoryModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/SysCategoryModal.vue","mtime":1571018558937},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { httpAction } from '@/api/manage'\nimport pick from 'lodash.pick'\nimport JTreeSelect from '@/components/jeecg/JTreeSelect'\n\nexport default {\n  name: \"SysCategoryModal\",\n  components: { \n    JTreeSelect\n  },\n  data () {\n    return {\n      form: this.$form.createForm(this),\n      title:\"操作\",\n      width:800,\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n\n      confirmLoading: false,\n      validatorRules:{\n      pid:{},\n      name:{},\n      code:{},\n      },\n      url: {\n        add: \"/sys/category/add\",\n        edit: \"/sys/category/edit\",\n      },\n      expandedRowKeys:[],\n      pidField:\"pid\"\n   \n    }\n  },\n  created () {\n  },\n  methods: {\n    add () {\n      this.edit({});\n    },\n    edit (record) {\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.model,'pid','name','code'))\n      })\n    },\n    close () {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleOk () {\n      const that = this;\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          that.confirmLoading = true;\n          let httpurl = '';\n          let method = '';\n          if(!this.model.id){\n            httpurl+=this.url.add;\n            method = 'post';\n          }else{\n            httpurl+=this.url.edit;\n             method = 'put';\n          }\n          let formData = Object.assign(this.model, values);\n          console.log(\"表单提交数据\",formData)\n          httpAction(httpurl,formData,method).then((res)=>{\n            if(res.success){\n              that.$message.success(res.message);\n              that.submitSuccess(formData)\n            }else{\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n            that.close();\n          })\n        }\n       \n      })\n    },\n    handleCancel () {\n      this.close()\n    },\n    popupCallback(row){\n      this.form.setFieldsValue(pick(row,'pid','name','code'))\n    },\n    submitSuccess(formData){\n      if(!formData.id){\n        let treeData = this.$refs.treeSelect.getCurrTreeData()\n        this.expandedRowKeys=[]\n        this.getExpandKeysByPid(formData[this.pidField],treeData,treeData)\n        this.$emit('ok',formData,this.expandedRowKeys.reverse());\n      }else{\n        this.$emit('ok',formData);\n      }\n    },\n    getExpandKeysByPid(pid,arr,all){\n      if(pid && arr && arr.length>0){\n        for(let i=0;i<arr.length;i++){\n          if(arr[i].key==pid){\n            this.expandedRowKeys.push(arr[i].key)\n            this.getExpandKeysByPid(arr[i]['parentId'],all,all)\n          }else{\n            this.getExpandKeysByPid(pid,arr[i].children,all)\n          }\n        }\n      }\n    }\n    \n    \n  }\n}\n",{"version":3,"sources":["SysCategoryModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"SysCategoryModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\n  <a-modal\n    :title=\"title\"\n    :width=\"width\"\n    :visible=\"visible\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleOk\"\n    @cancel=\"handleCancel\"\n    :destroyOnClose=\"true\"\n    cancelText=\"关闭\">\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form :form=\"form\">\n\n        <a-form-item label=\"父级节点\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <j-tree-select\n            ref=\"treeSelect\"\n            placeholder=\"请选择父级节点\"\n            v-decorator=\"['pid', validatorRules.pid]\"\n            dict=\"sys_category,name,id\"\n            pidField=\"pid\">\n          </j-tree-select>\n        </a-form-item>\n          \n        <a-form-item label=\"类型名称\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-input v-decorator=\"[ 'name', validatorRules.name]\" placeholder=\"请输入类型名称\"></a-input>\n        </a-form-item>\n          \n        <a-form-item label=\"类型编码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-input v-decorator=\"[ 'code', validatorRules.code]\" placeholder=\"请输入类型编码\"></a-input>\n        </a-form-item>\n          \n        \n      </a-form>\n    </a-spin>\n  </a-modal>\n</template>\n\n<script>\n\n  import { httpAction } from '@/api/manage'\n  import pick from 'lodash.pick'\n  import JTreeSelect from '@/components/jeecg/JTreeSelect'\n  \n  export default {\n    name: \"SysCategoryModal\",\n    components: { \n      JTreeSelect\n    },\n    data () {\n      return {\n        form: this.$form.createForm(this),\n        title:\"操作\",\n        width:800,\n        visible: false,\n        model: {},\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n\n        confirmLoading: false,\n        validatorRules:{\n        pid:{},\n        name:{},\n        code:{},\n        },\n        url: {\n          add: \"/sys/category/add\",\n          edit: \"/sys/category/edit\",\n        },\n        expandedRowKeys:[],\n        pidField:\"pid\"\n     \n      }\n    },\n    created () {\n    },\n    methods: {\n      add () {\n        this.edit({});\n      },\n      edit (record) {\n        this.form.resetFields();\n        this.model = Object.assign({}, record);\n        this.visible = true;\n        this.$nextTick(() => {\n          this.form.setFieldsValue(pick(this.model,'pid','name','code'))\n        })\n      },\n      close () {\n        this.$emit('close');\n        this.visible = false;\n      },\n      handleOk () {\n        const that = this;\n        // 触发表单验证\n        this.form.validateFields((err, values) => {\n          if (!err) {\n            that.confirmLoading = true;\n            let httpurl = '';\n            let method = '';\n            if(!this.model.id){\n              httpurl+=this.url.add;\n              method = 'post';\n            }else{\n              httpurl+=this.url.edit;\n               method = 'put';\n            }\n            let formData = Object.assign(this.model, values);\n            console.log(\"表单提交数据\",formData)\n            httpAction(httpurl,formData,method).then((res)=>{\n              if(res.success){\n                that.$message.success(res.message);\n                that.submitSuccess(formData)\n              }else{\n                that.$message.warning(res.message);\n              }\n            }).finally(() => {\n              that.confirmLoading = false;\n              that.close();\n            })\n          }\n         \n        })\n      },\n      handleCancel () {\n        this.close()\n      },\n      popupCallback(row){\n        this.form.setFieldsValue(pick(row,'pid','name','code'))\n      },\n      submitSuccess(formData){\n        if(!formData.id){\n          let treeData = this.$refs.treeSelect.getCurrTreeData()\n          this.expandedRowKeys=[]\n          this.getExpandKeysByPid(formData[this.pidField],treeData,treeData)\n          this.$emit('ok',formData,this.expandedRowKeys.reverse());\n        }else{\n          this.$emit('ok',formData);\n        }\n      },\n      getExpandKeysByPid(pid,arr,all){\n        if(pid && arr && arr.length>0){\n          for(let i=0;i<arr.length;i++){\n            if(arr[i].key==pid){\n              this.expandedRowKeys.push(arr[i].key)\n              this.getExpandKeysByPid(arr[i]['parentId'],all,all)\n            }else{\n              this.getExpandKeysByPid(pid,arr[i].children,all)\n            }\n          }\n        }\n      }\n      \n      \n    }\n  }\n</script>"]}]}