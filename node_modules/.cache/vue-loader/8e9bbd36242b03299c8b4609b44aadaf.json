{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/SysUserAgentModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/SysUserAgentModal.vue","mtime":1571018558937},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":1565525386522},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport pick from 'lodash.pick'\nimport { httpAction, getAction } from '@/api/manage'\nimport JDate from '@/components/jeecg/JDate.vue';\nimport JSelectUserByDep from '@/components/jeecgbiz/JSelectUserByDep'\n\nexport default {\n  name: \"SysUserAgentModal\",\n  components: {\n    JDate,\n    JSelectUserByDep\n  },\n  data () {\n    return {\n      title:\"操作\",\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n      username:\"\",\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules:{\n        agentUserName:{rules: [{ required: true, message: '请输入代理人用户名!' }]},\n        startTime:{rules: [{ required: true, message: '请输入代理开始时间!' }]},\n        endTime:{rules: [{ required: true, message: '请输入代理结束时间!' }]},\n      },\n      url: {\n        add: \"/sys/sysUserAgent/add\",\n        edit: \"/sys/sysUserAgent/edit\",\n        queryByUserName:\"/sys/sysUserAgent/queryByUserName\",\n      },\n    }\n  },\n  created () {\n  },\n  methods: {\n    agentSettings(username){\n      this.username = username;\n      this.init();\n\n    },\n    init () {\n      var params = {userName:this.username};//查询条件\n      getAction(this.url.queryByUserName,params).then((res)=>{\n        if(res.success){\n          console.log(\"获取流程节点信息\",res);\n          this.edit (res.result);\n        }else{\n          this.edit({userName:this.username,status:\"0\"});\n        }\n      })\n    },\n    edit (record) {\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.model,'userName','agentUserName','status','startTime','endTime'))\n      });\n    },\n    close () {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleOk () {\n      const that = this;\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          that.confirmLoading = true;\n          let httpurl = '';\n          let method = '';\n          if(!this.model.id){\n            httpurl+=this.url.add;\n            method = 'post';\n          }else{\n            httpurl+=this.url.edit;\n             method = 'put';\n          }\n          let formData = Object.assign(this.model, values);\n          httpAction(httpurl,formData,method).then((res)=>{\n            if(res.success){\n              that.$message.success(res.message);\n              //this.init();\n            }else{\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n            that.close();\n          })\n\n\n\n        }\n      })\n    },\n    handleCancel () {\n      this.close()\n    }\n  }\n}\n",null]}