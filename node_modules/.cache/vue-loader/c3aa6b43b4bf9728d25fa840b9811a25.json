{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/UserRoleModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/UserRoleModal.vue","mtime":1571018558937},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {queryTreeListForRole,queryRolePermission,saveRolePermission} from '@/api/api'\nimport RoleDataruleModal from './RoleDataruleModal.vue'\n\nexport default {\n  name: \"RoleModal\",\n  components:{\n    RoleDataruleModal\n  },\n  data(){\n    return {\n      roleId:\"\",\n      treeData: [],\n      defaultCheckedKeys:[],\n      checkedKeys:[],\n      expandedKeysss:[],\n      allTreeKeys:[],\n      autoExpandParent: true,\n      checkStrictly: true,\n      title:\"角色权限配置\",\n      visible: false,\n      loading: false,\n    }\n  },\n  methods: {\n    onTreeNodeSelect(id){\n      this.$refs.datarule.show(id[0],this.roleId)\n    },\n    onCheck (o) {\n      if(this.checkStrictly){\n        this.checkedKeys = o.checked;\n      }else{\n        this.checkedKeys = o\n      }\n    },\n    show(roleId){\n      this.roleId=roleId\n      this.visible = true;\n    },\n    close () {\n      this.reset()\n      this.$emit('close');\n      this.visible = false;\n    },\n    onExpand(expandedKeys){\n      this.expandedKeysss = expandedKeys;\n      this.autoExpandParent = false\n    },\n    reset () {\n      this.expandedKeysss = []\n      this.checkedKeys = []\n      this.defaultCheckedKeys = []\n      this.loading = false\n    },\n    expandAll () {\n      this.expandedKeysss = this.allTreeKeys\n    },\n    closeAll () {\n      this.expandedKeysss = []\n    },\n    checkALL () {\n      this.checkedKeys = this.allTreeKeys\n    },\n    cancelCheckALL () {\n      //this.checkedKeys = this.defaultCheckedKeys\n      this.checkedKeys = []\n    },\n    switchCheckStrictly (v) {\n      if(v==1){\n        this.checkStrictly = false\n      }else if(v==2){\n        this.checkStrictly = true\n      }\n    },\n    handleCancel () {\n      this.close()\n    },\n    handleSubmit(){\n      let that = this;\n      let params =  {\n        roleId:that.roleId,\n        permissionIds:that.checkedKeys.join(\",\"),\n        lastpermissionIds:that.defaultCheckedKeys.join(\",\"),\n      };\n      that.loading = true;\n      console.log(\"请求参数：\",params);\n      saveRolePermission(params).then((res)=>{\n        if(res.success){\n          that.$message.success(res.message);\n          that.loading = false;\n          that.close();\n        }else {\n          that.$message.error(res.message);\n          that.loading = false;\n          that.close();\n        }\n      })\n    },\n  },\nwatch: {\n  visible () {\n    if (this.visible) {\n      queryTreeListForRole().then((res) => {\n        this.treeData = res.result.treeList\n        this.allTreeKeys = res.result.ids\n        queryRolePermission({roleId:this.roleId}).then((res)=>{\n            this.checkedKeys = [...res.result];\n            this.defaultCheckedKeys = [...res.result];\n            this.expandedKeysss = this.allTreeKeys;\n            //console.log(this.defaultCheckedKeys)\n        })\n      })\n    }\n  }\n}\n}\n\n",null]}