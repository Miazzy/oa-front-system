{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/chart/LineChartMultid.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/chart/LineChartMultid.vue","mtime":1571018558892},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":1565525386522},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { DataSet } from '@antv/data-set'\n\nexport default {\n  name: 'LineChartMultid',\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    dataSource: {\n      type: Array,\n      default: () => [\n        { type: 'Jan', jeecg: 7.0, jeebt: 3.9 },\n        { type: 'Feb', jeecg: 6.9, jeebt: 4.2 },\n        { type: 'Mar', jeecg: 9.5, jeebt: 5.7 },\n        { type: 'Apr', jeecg: 14.5, jeebt: 8.5 },\n        { type: 'May', jeecg: 18.4, jeebt: 11.9 },\n        { type: 'Jun', jeecg: 21.5, jeebt: 15.2 },\n        { type: 'Jul', jeecg: 25.2, jeebt: 17.0 },\n        { type: 'Aug', jeecg: 26.5, jeebt: 16.6 },\n        { type: 'Sep', jeecg: 23.3, jeebt: 14.2 },\n        { type: 'Oct', jeecg: 18.3, jeebt: 10.3 },\n        { type: 'Nov', jeecg: 13.9, jeebt: 6.6 },\n        { type: 'Dec', jeecg: 9.6, jeebt: 4.8 }\n      ]\n    },\n    fields: {\n      type: Array,\n      default: () => ['jeecg', 'jeebt']\n    },\n    height: {\n      type: Number,\n      default: 254\n    }\n  },\n  data() {\n    return {\n      scale: [{\n        dataKey: 'x',\n        min: 0,\n        max: 1\n      }],\n      style: { stroke: '#fff', lineWidth: 1 }\n    }\n  },\n  computed: {\n    data() {\n      const dv = new DataSet.View().source(this.dataSource)\n      dv.transform({\n        type: 'fold',\n        fields: this.fields,\n        key: 'x',\n        value: 'y'\n      })\n      return dv.rows\n    }\n  }\n}\n",null]}