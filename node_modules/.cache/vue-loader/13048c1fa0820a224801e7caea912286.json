{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/PasswordModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/PasswordModal.vue","mtime":1571018558935},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {changPassword} from '@/api/api'\n\nexport default {\n  name: \"PasswordModal\",\n  data () {\n    return {\n      visible: false,\n      confirmLoading: false,\n      confirmDirty: false,\n      validatorRules:{\n        password:{\n          rules: [{\n            required: true,\n            pattern:/^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,./]).{8,}$/,\n            message: '密码由8位数字、大小写字母和特殊符号组成!'\n          }, {\n            validator: this.validateToNextPassword,\n          }],\n        },\n        confirmpassword:{\n          rules: [{\n            required: true, message: '请重新输入登陆密码!',\n          }, {\n            validator: this.compareToFirstPassword,\n          }],\n        },\n      },\n\n      model: {},\n\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n      form:this.$form.createForm(this)\n    }\n  },\n  created () {\n    console.log(\"created\");\n  },\n\n  methods: {\n    show (username) {\n      this.form.resetFields();\n      this.visible = true;\n      this.model.username = username;\n      this.$nextTick(() => {\n        this.form.setFieldsValue({username:username});\n      });\n    },\n    close () {\n      this.$emit('close');\n      this.visible = false;\n      this.disableSubmit = false;\n      this.selectedRole = [];\n    },\n    handleSubmit () {\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          this.confirmLoading = true;\n          let formData = Object.assign(this.model, values);\n          changPassword(formData).then((res)=>{\n            if(res.success){\n              this.$message.success(res.message);\n              this.$emit('ok');\n            }else{\n              this.$message.warning(res.message);\n            }\n          }).finally(() => {\n            this.confirmLoading = false;\n            this.close();\n          });\n        }\n      })\n    },\n    handleCancel () {\n      this.close()\n    },\n    validateToNextPassword  (rule, value, callback) {\n      const form = this.form;\n      const confirmpassword=form.getFieldValue('confirmpassword');\n      console.log(\"confirmpassword==>\",confirmpassword);\n      if (value && confirmpassword && value !== confirmpassword) {\n        callback('两次输入的密码不一样！');\n      }\n      if (value && this.confirmDirty) {\n        form.validateFields(['confirm'], { force: true })\n      }\n      callback();\n    },\n    compareToFirstPassword  (rule, value, callback) {\n      const form = this.form;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('两次输入的密码不一样！');\n      } else {\n        callback()\n      }\n    },\n    handleConfirmBlur  (e) {\n      const value = e.target.value\n      this.confirmDirty = this.confirmDirty || !!value\n    }\n  }\n}\n",{"version":3,"sources":["PasswordModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"PasswordModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\n  <a-modal\n    title=\"重新设定密码\"\n    :width=\"800\"\n    :visible=\"visible\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleSubmit\"\n    @cancel=\"handleCancel\"\n    cancelText=\"关闭\"\n    style=\"top:20px;\"\n  >\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form :form=\"form\">\n\n        <a-form-item label=\"用户账号\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-input placeholder=\"请输入用户账号\" v-decorator=\"[ 'username', {}]\" :readOnly=\"true\"/>\n        </a-form-item>\n\n        <a-form-item label=\"登陆密码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" hasFeedback >\n          <a-input type=\"password\" placeholder=\"请输入登陆密码\" v-decorator=\"[ 'password', validatorRules.password]\" />\n        </a-form-item>\n\n        <a-form-item label=\"确认密码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" hasFeedback >\n          <a-input type=\"password\" @blur=\"handleConfirmBlur\" placeholder=\"请重新输入登陆密码\" v-decorator=\"[ 'confirmpassword', validatorRules.confirmpassword]\"/>\n        </a-form-item>\n\n      </a-form>\n    </a-spin>\n  </a-modal>\n</template>\n\n<script>\n  import {changPassword} from '@/api/api'\n\n  export default {\n    name: \"PasswordModal\",\n    data () {\n      return {\n        visible: false,\n        confirmLoading: false,\n        confirmDirty: false,\n        validatorRules:{\n          password:{\n            rules: [{\n              required: true,\n              pattern:/^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,./]).{8,}$/,\n              message: '密码由8位数字、大小写字母和特殊符号组成!'\n            }, {\n              validator: this.validateToNextPassword,\n            }],\n          },\n          confirmpassword:{\n            rules: [{\n              required: true, message: '请重新输入登陆密码!',\n            }, {\n              validator: this.compareToFirstPassword,\n            }],\n          },\n        },\n\n        model: {},\n\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n        form:this.$form.createForm(this)\n      }\n    },\n    created () {\n      console.log(\"created\");\n    },\n\n    methods: {\n      show (username) {\n        this.form.resetFields();\n        this.visible = true;\n        this.model.username = username;\n        this.$nextTick(() => {\n          this.form.setFieldsValue({username:username});\n        });\n      },\n      close () {\n        this.$emit('close');\n        this.visible = false;\n        this.disableSubmit = false;\n        this.selectedRole = [];\n      },\n      handleSubmit () {\n        // 触发表单验证\n        this.form.validateFields((err, values) => {\n          if (!err) {\n            this.confirmLoading = true;\n            let formData = Object.assign(this.model, values);\n            changPassword(formData).then((res)=>{\n              if(res.success){\n                this.$message.success(res.message);\n                this.$emit('ok');\n              }else{\n                this.$message.warning(res.message);\n              }\n            }).finally(() => {\n              this.confirmLoading = false;\n              this.close();\n            });\n          }\n        })\n      },\n      handleCancel () {\n        this.close()\n      },\n      validateToNextPassword  (rule, value, callback) {\n        const form = this.form;\n        const confirmpassword=form.getFieldValue('confirmpassword');\n        console.log(\"confirmpassword==>\",confirmpassword);\n        if (value && confirmpassword && value !== confirmpassword) {\n          callback('两次输入的密码不一样！');\n        }\n        if (value && this.confirmDirty) {\n          form.validateFields(['confirm'], { force: true })\n        }\n        callback();\n      },\n      compareToFirstPassword  (rule, value, callback) {\n        const form = this.form;\n        if (value && value !== form.getFieldValue('password')) {\n          callback('两次输入的密码不一样！');\n        } else {\n          callback()\n        }\n      },\n      handleConfirmBlur  (e) {\n        const value = e.target.value\n        this.confirmDirty = this.confirmDirty || !!value\n      }\n    }\n  }\n</script>"]}]}