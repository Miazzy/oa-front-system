{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/dashboard/Workplace.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/dashboard/Workplace.vue","mtime":1571018558916},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":1565525386522},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { timeFix } from \"@/utils/util\"\nimport {mapGetters} from \"vuex\"\n\nimport PageLayout from '@/components/page/PageLayout'\nimport HeadInfo from '@/components/tools/HeadInfo'\nimport Radar from '@/components/chart/Radar'\nimport { getRoleList, getServiceList } from \"@/api/manage\"\n\nconst DataSet = require('@antv/data-set')\n\nexport default {\n  name: \"Workplace\",\n  components: {\n    PageLayout,\n    HeadInfo,\n    Radar\n  },\n  data() {\n    return {\n      timeFix: timeFix(),\n      avatar: '',\n      user: {},\n\n      projects: [],\n      loading: true,\n      radarLoading: true,\n      activities: [],\n      teams: [],\n\n      // data\n      axis1Opts: {\n        dataKey: 'item',\n        line: null,\n        tickLine: null,\n        grid: {\n          lineStyle: {\n            lineDash: null\n          },\n          hideFirstLine: false\n        }\n      },\n      axis2Opts: {\n        dataKey: 'score',\n        line: null,\n        tickLine: null,\n        grid: {\n          type: 'polygon',\n          lineStyle: {\n            lineDash: null\n          }\n        }\n      },\n      scale: [{\n        dataKey: 'score',\n        min: 0,\n        max: 80\n      }],\n      axisData: [\n        { item: '引用', a: 70, b: 30, c: 40 },\n        { item: '口碑', a: 60, b: 70, c: 40 },\n        { item: '产量', a: 50, b: 60, c: 40 },\n        { item: '贡献', a: 40, b: 50, c: 40 },\n        { item: '热度', a: 60, b: 70, c: 40 },\n        { item: '引用', a: 70, b: 50, c: 40 }\n      ],\n      radarData: []\n    }\n  },\n  computed: {\n    userInfo() {\n      return this.$store.getters.userInfo\n    }\n  },\n  created() {\n    this.user = this.userInfo\n    this.avatar = window._CONFIG['imgDomainURL'] +\"/\"+ this.userInfo.avatar\n    console.log('this.avatar :'+ this.avatar)\n\n    getRoleList().then(res => {\n      console.log('workplace -> call getRoleList()', res)\n    })\n\n    getServiceList().then(res => {\n      console.log('workplace -> call getServiceList()', res)\n    })\n  },\n  mounted() {\n    this.getProjects()\n    this.getActivity()\n    this.getTeams()\n    this.initRadar()\n  },\n  methods: {\n    ...mapGetters([\"nickname\", \"welcome\"]),\n    getProjects() {\n      this.$http.get('/api/list/search/projects')\n        .then(res => {\n          this.projects = res.result && res.result.data\n          this.loading = false\n        })\n    },\n    getActivity() {\n      this.$http.get('/api/workplace/activity')\n        .then(res => {\n          this.activities = res.result\n        })\n    },\n    getTeams() {\n      this.$http.get('/api/workplace/teams')\n        .then(res => {\n          this.teams = res.result\n        })\n    },\n    initRadar() {\n      this.radarLoading = true\n\n      this.$http.get('/api/workplace/radar')\n        .then(res => {\n\n          const dv = new DataSet.View().source(res.result)\n          dv.transform({\n            type: 'fold',\n            fields: ['个人', '团队', '部门'],\n            key: 'user',\n            value: 'score'\n          })\n\n          this.radarData = dv.rows\n          this.radarLoading = false\n        })\n    }\n  }\n}\n",null]}