{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/user/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/user/Login.vue","mtime":1571284289648},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n//import md5 from \"md5\"\r\nimport api from '@/api'\r\nimport TwoStepCaptcha from '@/components/tools/TwoStepCaptcha'\r\nimport { mapActions } from 'vuex'\r\nimport { timeFix } from '@/utils/util'\r\nimport Vue from 'vue'\r\nimport { ACCESS_TOKEN, ENCRYPTED_STRING } from '@/store/mutation-types'\r\nimport JGraphicCode from '@/components/jeecg/JGraphicCode'\r\nimport { putAction } from '@/api/manage'\r\nimport { postAction } from '@/api/manage'\r\nimport { encryption, getEncryptedString } from '@/utils/encryption/aesEncrypt'\r\nimport store from '@/store/'\r\nimport { USER_INFO } from '@/store/mutation-types'\r\n\r\nexport default {\r\n  components: {\r\n    TwoStepCaptcha,\r\n    JGraphicCode\r\n  },\r\n  data() {\r\n    return {\r\n      customActiveKey: 'tab1',\r\n      loginBtn: false,\r\n      // login type: 0 email, 1 username, 2 telephone\r\n      loginType: 0,\r\n      requiredTwoStepCaptcha: false,\r\n      stepCaptchaVisible: false,\r\n      form: this.$form.createForm(this),\r\n      encryptedString: {\r\n        key: '',\r\n        iv: ''\r\n      },\r\n      state: {\r\n        time: 60,\r\n        smsSendBtn: false\r\n      },\r\n      formLogin: {\r\n        username: '',\r\n        password: '',\r\n        captcha: '',\r\n        mobile: '',\r\n        rememberMe: true\r\n      },\r\n      validatorRules: {\r\n        username: { rules: [{ required: true, message: '请输入用户名!', validator: 'click' }] },\r\n        password: { rules: [{ required: true, message: '请输入密码!', validator: 'click' }] },\r\n        mobile: { rules: [{ validator: this.validateMobile }] },\r\n        captcha: { rule: [{ required: true, message: '请输入验证码!' }] },\r\n        inputCode: { rules: [{ required: true, message: '请输入验证码!' }, { validator: this.validateInputCode }] }\r\n      },\r\n      verifiedCode: '',\r\n      inputCodeContent: '',\r\n      inputCodeNull: true,\r\n\r\n      departList: [],\r\n      departVisible: false,\r\n      departSelected: '',\r\n      currentUsername: '',\r\n      validate_status: ''\r\n    }\r\n  },\r\n  created() {\r\n    Vue.ls.remove(ACCESS_TOKEN)\r\n    this.getRouterData()\r\n    // update-begin- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\r\n    //this.getEncrypte();\r\n    // update-end- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\r\n  },\r\n  methods: {\r\n    ...mapActions(['Login', 'Logout', 'PhoneLogin']),\r\n    // handler\r\n    handleUsernameOrEmail(rule, value, callback) {\r\n      const regex = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/\r\n      if (regex.test(value)) {\r\n        this.loginType = 0\r\n      } else {\r\n        this.loginType = 1\r\n      }\r\n      callback()\r\n    },\r\n    handleTabClick(key) {\r\n      this.customActiveKey = key\r\n      // this.form.resetFields()\r\n    },\r\n    handleSubmit() {\r\n      let that = this\r\n      let loginParams = {\r\n        remember_me: that.formLogin.rememberMe\r\n      }\r\n      that.loginBtn = true\r\n      // 使用账户密码登陆\r\n      if (that.customActiveKey === 'tab1') {\r\n        that.form.validateFields(['username', 'password', 'inputCode'], { force: true }, (err, values) => {\r\n          if (!err) {\r\n            loginParams.username = values.username\r\n            // update-begin- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\r\n            //loginParams.password = md5(values.password)\r\n            //loginParams.password = encryption(values.password,that.encryptedString.key,that.encryptedString.iv)\r\n            loginParams.password = values.password\r\n            // update-begin- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\r\n\r\n            that\r\n              .Login(loginParams)\r\n              .then(res => {\r\n                this.departConfirm(res)\r\n              })\r\n              .catch(err => {\r\n                that.requestFailed(err)\r\n              })\r\n          } else {\r\n            that.loginBtn = false\r\n          }\r\n        })\r\n        // 使用手机号登陆\r\n      } else {\r\n        that.form.validateFields(['mobile', 'captcha'], { force: true }, (err, values) => {\r\n          if (!err) {\r\n            loginParams.mobile = values.mobile\r\n            loginParams.captcha = values.captcha\r\n            that\r\n              .PhoneLogin(loginParams)\r\n              .then(res => {\r\n                console.log(res.result)\r\n                this.departConfirm(res)\r\n              })\r\n              .catch(err => {\r\n                that.requestFailed(err)\r\n              })\r\n          }\r\n        })\r\n      }\r\n    },\r\n    getCaptcha(e) {\r\n      e.preventDefault()\r\n      let that = this\r\n      this.form.validateFields(['mobile'], { force: true }, (err, values) => {\r\n        if (!values.mobile) {\r\n          that.cmsFailed('请输入手机号')\r\n        } else if (!err) {\r\n          this.state.smsSendBtn = true\r\n          let interval = window.setInterval(() => {\r\n            if (that.state.time-- <= 0) {\r\n              that.state.time = 60\r\n              that.state.smsSendBtn = false\r\n              window.clearInterval(interval)\r\n            }\r\n          }, 1000)\r\n\r\n          const hide = this.$message.loading('验证码发送中..', 0)\r\n          let smsParams = {}\r\n          smsParams.mobile = values.mobile\r\n          smsParams.smsmode = '0'\r\n          postAction('/sys/sms', smsParams)\r\n            .then(res => {\r\n              if (!res.success) {\r\n                setTimeout(hide, 0)\r\n                this.cmsFailed(res.message)\r\n              }\r\n              console.log(res)\r\n              setTimeout(hide, 500)\r\n            })\r\n            .catch(err => {\r\n              setTimeout(hide, 1)\r\n              clearInterval(interval)\r\n              that.state.time = 60\r\n              that.state.smsSendBtn = false\r\n              this.requestFailed(err)\r\n            })\r\n        }\r\n      })\r\n    },\r\n    stepCaptchaSuccess() {\r\n      this.loginSuccess()\r\n    },\r\n    stepCaptchaCancel() {\r\n      this.Logout().then(() => {\r\n        this.loginBtn = false\r\n        this.stepCaptchaVisible = false\r\n      })\r\n    },\r\n    loginSuccess() {\r\n      // update-begin- author:sunjianlei --- date:20190812 --- for: 登录成功后不解除禁用按钮，防止多次点击\r\n      // this.loginBtn = false\r\n      // update-end- author:sunjianlei --- date:20190812 --- for: 登录成功后不解除禁用按钮，防止多次点击\r\n      this.$router.push({ name: 'dashboard' })\r\n      this.$notification.success({\r\n        message: '欢迎',\r\n        description: `${timeFix()}，欢迎回来`\r\n      })\r\n    },\r\n    cmsFailed(err) {\r\n      this.$notification['error']({\r\n        message: '登录失败',\r\n        description: err,\r\n        duration: 4\r\n      })\r\n    },\r\n    requestFailed(err) {\r\n      this.$notification['error']({\r\n        message: '登录失败',\r\n        description: ((err.response || {}).data || {}).message || err.message || '请求出现错误，请稍后再试',\r\n        duration: 4\r\n      })\r\n      this.loginBtn = false\r\n    },\r\n    validateMobile(rule, value, callback) {\r\n      if (!value || new RegExp(/^1([38][0-9]|4[579]|5[0-3,5-9]|6[6]|7[0135678]|9[89])\\d{8}$/).test(value)) {\r\n        callback()\r\n      } else {\r\n        callback('您的手机号码格式不正确!')\r\n      }\r\n    },\r\n    validateInputCode(rule, value, callback) {\r\n      if (!value || this.verifiedCode == this.inputCodeContent) {\r\n        callback()\r\n      } else {\r\n        callback('您输入的验证码不正确!')\r\n      }\r\n    },\r\n    generateCode(value) {\r\n      this.verifiedCode = value.toLowerCase()\r\n    },\r\n    inputCodeChange(e) {\r\n      this.inputCodeContent = e.target.value\r\n      if (!e.target.value || 0 == e.target.value) {\r\n        this.inputCodeNull = true\r\n      } else {\r\n        this.inputCodeContent = this.inputCodeContent.toLowerCase()\r\n        this.inputCodeNull = false\r\n      }\r\n    },\r\n    departConfirm(res) {\r\n      if (res.success) {\r\n        let multi_depart = res.result.multi_depart\r\n        //0:无部门 1:一个部门 2:多个部门\r\n        if (multi_depart == 0) {\r\n          this.loginSuccess()\r\n          this.$notification.warn({\r\n            message: '提示',\r\n            description: `您尚未归属部门,请确认账号信息`,\r\n            duration: 3\r\n          })\r\n        } else if (multi_depart == 2) {\r\n          this.departVisible = true\r\n          this.currentUsername = this.form.getFieldValue('username')\r\n          this.departList = res.result.departs\r\n        } else {\r\n          this.loginSuccess()\r\n        }\r\n      } else {\r\n        this.requestFailed(res)\r\n        this.Logout()\r\n      }\r\n    },\r\n    departOk() {\r\n      if (!this.departSelected) {\r\n        this.validate_status = 'error'\r\n        return false\r\n      }\r\n      let obj = {\r\n        orgCode: this.departSelected,\r\n        username: this.form.getFieldValue('username')\r\n      }\r\n      putAction('/sys/selectDepart', obj).then(res => {\r\n        if (res.success) {\r\n          const userInfo = res.result.userInfo\r\n          Vue.ls.set(USER_INFO, userInfo, 7 * 24 * 60 * 60 * 1000)\r\n          store.commit('SET_INFO', userInfo)\r\n          //console.log(\"---切换组织机构---userInfo-------\",store.getters.userInfo.orgCode);\r\n          this.departClear()\r\n          this.loginSuccess()\r\n        } else {\r\n          this.requestFailed(res)\r\n          this.Logout().then(() => {\r\n            this.departClear()\r\n          })\r\n        }\r\n      })\r\n    },\r\n    departClear() {\r\n      this.departList = []\r\n      this.departSelected = ''\r\n      this.currentUsername = ''\r\n      this.departVisible = false\r\n      this.validate_status = ''\r\n    },\r\n    departChange(value) {\r\n      this.validate_status = 'success'\r\n      this.departSelected = value\r\n    },\r\n    getRouterData() {\r\n      this.$nextTick(() => {\r\n        this.form.setFieldsValue({\r\n          username: this.$route.params.username\r\n        })\r\n      })\r\n    },\r\n    //获取密码加密规则\r\n    getEncrypte() {\r\n      var encryptedString = Vue.ls.get(ENCRYPTED_STRING)\r\n      if (encryptedString == null) {\r\n        getEncryptedString().then(data => {\r\n          this.encryptedString = data\r\n        })\r\n      } else {\r\n        this.encryptedString = encryptedString\r\n      }\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\r\n  <div class=\"main\">\r\n    <a-form :form=\"form\" class=\"user-layout-login\" ref=\"formLogin\" id=\"formLogin\">\r\n      <a-tabs\r\n        :activeKey=\"customActiveKey\"\r\n        :tabBarStyle=\"{ textAlign: 'center', borderBottom: 'unset' }\"\r\n        @change=\"handleTabClick\"\r\n      >\r\n        <a-tab-pane key=\"tab1\" tab=\"账号密码登陆\">\r\n          <a-form-item>\r\n            <a-input\r\n              size=\"large\"\r\n              v-decorator=\"['username',validatorRules.username,{ validator: this.handleUsernameOrEmail }]\"\r\n              type=\"text\"\r\n              placeholder=\"请输入帐户名\"\r\n            >\r\n              <a-icon slot=\"prefix\" type=\"user\" :style=\"{ color: 'rgba(0,0,0,.25)' }\" />\r\n            </a-input>\r\n          </a-form-item>\r\n\r\n          <a-form-item>\r\n            <a-input\r\n              v-decorator=\"['password',validatorRules.password]\"\r\n              size=\"large\"\r\n              type=\"password\"\r\n              autocomplete=\"false\"\r\n              placeholder=\"密码\"\r\n            >\r\n              <a-icon slot=\"prefix\" type=\"lock\" :style=\"{ color: 'rgba(0,0,0,.25)' }\" />\r\n            </a-input>\r\n          </a-form-item>\r\n\r\n          <a-row :gutter=\"0\">\r\n            <a-col :span=\"14\">\r\n              <a-form-item>\r\n                <a-input\r\n                  v-decorator=\"['inputCode',validatorRules.inputCode]\"\r\n                  size=\"large\"\r\n                  type=\"text\"\r\n                  @change=\"inputCodeChange\"\r\n                  placeholder=\"请输入验证码\"\r\n                >\r\n                  <a-icon\r\n                    slot=\"prefix\"\r\n                    v-if=\" inputCodeContent==verifiedCode \"\r\n                    type=\"smile\"\r\n                    :style=\"{ color: 'rgba(0,0,0,.25)' }\"\r\n                  />\r\n                  <a-icon slot=\"prefix\" v-else type=\"frown\" :style=\"{ color: 'rgba(0,0,0,.25)' }\" />\r\n                </a-input>\r\n              </a-form-item>\r\n            </a-col>\r\n            <a-col :span=\"10\">\r\n              <j-graphic-code @success=\"generateCode\" style=\"float: right\"></j-graphic-code>\r\n            </a-col>\r\n          </a-row>\r\n        </a-tab-pane>\r\n        <a-tab-pane key=\"tab2\" tab=\"手机号登陆\">\r\n          <a-form-item>\r\n            <a-input\r\n              v-decorator=\"['mobile',validatorRules.mobile]\"\r\n              size=\"large\"\r\n              type=\"text\"\r\n              placeholder=\"手机号\"\r\n            >\r\n              <a-icon slot=\"prefix\" type=\"mobile\" :style=\"{ color: 'rgba(0,0,0,.25)' }\" />\r\n            </a-input>\r\n          </a-form-item>\r\n\r\n          <a-row :gutter=\"16\">\r\n            <a-col class=\"gutter-row\" :span=\"16\">\r\n              <a-form-item>\r\n                <a-input\r\n                  v-decorator=\"['captcha',validatorRules.captcha]\"\r\n                  size=\"large\"\r\n                  type=\"text\"\r\n                  placeholder=\"请输入验证码\"\r\n                >\r\n                  <a-icon slot=\"prefix\" type=\"mail\" :style=\"{ color: 'rgba(0,0,0,.25)' }\" />\r\n                </a-input>\r\n              </a-form-item>\r\n            </a-col>\r\n            <a-col class=\"gutter-row\" :span=\"8\">\r\n              <a-button\r\n                class=\"getCaptcha\"\r\n                tabindex=\"-1\"\r\n                :disabled=\"state.smsSendBtn\"\r\n                @click.stop.prevent=\"getCaptcha\"\r\n                v-text=\"!state.smsSendBtn && '获取验证码' || (state.time+' s')\"\r\n              ></a-button>\r\n            </a-col>\r\n          </a-row>\r\n        </a-tab-pane>\r\n      </a-tabs>\r\n\r\n      <a-form-item>\r\n        <a-checkbox v-model=\"formLogin.rememberMe\">自动登陆</a-checkbox>\r\n        <!--      \r\n        <router-link :to=\"{ name: 'alteration'}\" class=\"forge-password\" style=\"float: right;\">\r\n          忘记密码\r\n        </router-link>\r\n        <router-link :to=\"{ name: 'register'}\" class=\"forge-password\" style=\"float: right;margin-right: 10px\" >\r\n          注册账户\r\n        </router-link>\r\n        -->\r\n      </a-form-item>\r\n\r\n      <a-form-item style=\"margin-top:24px\">\r\n        <a-button\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          class=\"login-button\"\r\n          :loading=\"loginBtn\"\r\n          @click.stop.prevent=\"handleSubmit\"\r\n          :disabled=\"loginBtn\"\r\n        >确定</a-button>\r\n      </a-form-item>\r\n\r\n      <!-- <div class=\"user-login-other\">\r\n        <span>其他登陆方式</span>\r\n        <a><a-icon class=\"item-icon\" type=\"alipay-circle\"></a-icon></a>\r\n        <a><a-icon class=\"item-icon\" type=\"taobao-circle\"></a-icon></a>\r\n        <a><a-icon class=\"item-icon\" type=\"weibo-circle\"></a-icon></a>\r\n        <router-link class=\"register\" :to=\"{ name: 'register' }\">\r\n          注册账户\r\n        </router-link>\r\n      </div>-->\r\n    </a-form>\r\n\r\n    <two-step-captcha\r\n      v-if=\"requiredTwoStepCaptcha\"\r\n      :visible=\"stepCaptchaVisible\"\r\n      @success=\"stepCaptchaSuccess\"\r\n      @cancel=\"stepCaptchaCancel\"\r\n    ></two-step-captcha>\r\n\r\n    <a-modal\r\n      title=\"登录部门选择\"\r\n      :width=\"450\"\r\n      :visible=\"departVisible\"\r\n      :closable=\"false\"\r\n      :maskClosable=\"false\"\r\n    >\r\n      <template slot=\"footer\">\r\n        <a-button type=\"primary\" @click=\"departOk\">确认</a-button>\r\n      </template>\r\n\r\n      <a-form>\r\n        <a-form-item\r\n          :labelCol=\"{span:4}\"\r\n          :wrapperCol=\"{span:20}\"\r\n          style=\"margin-bottom:10px\"\r\n          :validate-status=\"validate_status\"\r\n        >\r\n          <a-tooltip placement=\"topLeft\">\r\n            <template slot=\"title\">\r\n              <span>您隶属于多部门，请选择登录部门</span>\r\n            </template>\r\n            <a-avatar style=\"backgroundColor:#87d068\" icon=\"gold\" />\r\n          </a-tooltip>\r\n          <a-select\r\n            @change=\"departChange\"\r\n            :class=\"{'valid-error':validate_status=='error'}\"\r\n            placeholder=\"请选择登录部门\"\r\n            style=\"margin-left:10px;width: 80%\"\r\n          >\r\n            <a-icon slot=\"suffixIcon\" type=\"gold\" />\r\n            <a-select-option\r\n              v-for=\"d in departList\"\r\n              :key=\"d.id\"\r\n              :value=\"d.orgCode\"\r\n            >{{ d.departName }}</a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n//import md5 from \"md5\"\r\nimport api from '@/api'\r\nimport TwoStepCaptcha from '@/components/tools/TwoStepCaptcha'\r\nimport { mapActions } from 'vuex'\r\nimport { timeFix } from '@/utils/util'\r\nimport Vue from 'vue'\r\nimport { ACCESS_TOKEN, ENCRYPTED_STRING } from '@/store/mutation-types'\r\nimport JGraphicCode from '@/components/jeecg/JGraphicCode'\r\nimport { putAction } from '@/api/manage'\r\nimport { postAction } from '@/api/manage'\r\nimport { encryption, getEncryptedString } from '@/utils/encryption/aesEncrypt'\r\nimport store from '@/store/'\r\nimport { USER_INFO } from '@/store/mutation-types'\r\n\r\nexport default {\r\n  components: {\r\n    TwoStepCaptcha,\r\n    JGraphicCode\r\n  },\r\n  data() {\r\n    return {\r\n      customActiveKey: 'tab1',\r\n      loginBtn: false,\r\n      // login type: 0 email, 1 username, 2 telephone\r\n      loginType: 0,\r\n      requiredTwoStepCaptcha: false,\r\n      stepCaptchaVisible: false,\r\n      form: this.$form.createForm(this),\r\n      encryptedString: {\r\n        key: '',\r\n        iv: ''\r\n      },\r\n      state: {\r\n        time: 60,\r\n        smsSendBtn: false\r\n      },\r\n      formLogin: {\r\n        username: '',\r\n        password: '',\r\n        captcha: '',\r\n        mobile: '',\r\n        rememberMe: true\r\n      },\r\n      validatorRules: {\r\n        username: { rules: [{ required: true, message: '请输入用户名!', validator: 'click' }] },\r\n        password: { rules: [{ required: true, message: '请输入密码!', validator: 'click' }] },\r\n        mobile: { rules: [{ validator: this.validateMobile }] },\r\n        captcha: { rule: [{ required: true, message: '请输入验证码!' }] },\r\n        inputCode: { rules: [{ required: true, message: '请输入验证码!' }, { validator: this.validateInputCode }] }\r\n      },\r\n      verifiedCode: '',\r\n      inputCodeContent: '',\r\n      inputCodeNull: true,\r\n\r\n      departList: [],\r\n      departVisible: false,\r\n      departSelected: '',\r\n      currentUsername: '',\r\n      validate_status: ''\r\n    }\r\n  },\r\n  created() {\r\n    Vue.ls.remove(ACCESS_TOKEN)\r\n    this.getRouterData()\r\n    // update-begin- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\r\n    //this.getEncrypte();\r\n    // update-end- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\r\n  },\r\n  methods: {\r\n    ...mapActions(['Login', 'Logout', 'PhoneLogin']),\r\n    // handler\r\n    handleUsernameOrEmail(rule, value, callback) {\r\n      const regex = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/\r\n      if (regex.test(value)) {\r\n        this.loginType = 0\r\n      } else {\r\n        this.loginType = 1\r\n      }\r\n      callback()\r\n    },\r\n    handleTabClick(key) {\r\n      this.customActiveKey = key\r\n      // this.form.resetFields()\r\n    },\r\n    handleSubmit() {\r\n      let that = this\r\n      let loginParams = {\r\n        remember_me: that.formLogin.rememberMe\r\n      }\r\n      that.loginBtn = true\r\n      // 使用账户密码登陆\r\n      if (that.customActiveKey === 'tab1') {\r\n        that.form.validateFields(['username', 'password', 'inputCode'], { force: true }, (err, values) => {\r\n          if (!err) {\r\n            loginParams.username = values.username\r\n            // update-begin- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\r\n            //loginParams.password = md5(values.password)\r\n            //loginParams.password = encryption(values.password,that.encryptedString.key,that.encryptedString.iv)\r\n            loginParams.password = values.password\r\n            // update-begin- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\r\n\r\n            that\r\n              .Login(loginParams)\r\n              .then(res => {\r\n                this.departConfirm(res)\r\n              })\r\n              .catch(err => {\r\n                that.requestFailed(err)\r\n              })\r\n          } else {\r\n            that.loginBtn = false\r\n          }\r\n        })\r\n        // 使用手机号登陆\r\n      } else {\r\n        that.form.validateFields(['mobile', 'captcha'], { force: true }, (err, values) => {\r\n          if (!err) {\r\n            loginParams.mobile = values.mobile\r\n            loginParams.captcha = values.captcha\r\n            that\r\n              .PhoneLogin(loginParams)\r\n              .then(res => {\r\n                console.log(res.result)\r\n                this.departConfirm(res)\r\n              })\r\n              .catch(err => {\r\n                that.requestFailed(err)\r\n              })\r\n          }\r\n        })\r\n      }\r\n    },\r\n    getCaptcha(e) {\r\n      e.preventDefault()\r\n      let that = this\r\n      this.form.validateFields(['mobile'], { force: true }, (err, values) => {\r\n        if (!values.mobile) {\r\n          that.cmsFailed('请输入手机号')\r\n        } else if (!err) {\r\n          this.state.smsSendBtn = true\r\n          let interval = window.setInterval(() => {\r\n            if (that.state.time-- <= 0) {\r\n              that.state.time = 60\r\n              that.state.smsSendBtn = false\r\n              window.clearInterval(interval)\r\n            }\r\n          }, 1000)\r\n\r\n          const hide = this.$message.loading('验证码发送中..', 0)\r\n          let smsParams = {}\r\n          smsParams.mobile = values.mobile\r\n          smsParams.smsmode = '0'\r\n          postAction('/sys/sms', smsParams)\r\n            .then(res => {\r\n              if (!res.success) {\r\n                setTimeout(hide, 0)\r\n                this.cmsFailed(res.message)\r\n              }\r\n              console.log(res)\r\n              setTimeout(hide, 500)\r\n            })\r\n            .catch(err => {\r\n              setTimeout(hide, 1)\r\n              clearInterval(interval)\r\n              that.state.time = 60\r\n              that.state.smsSendBtn = false\r\n              this.requestFailed(err)\r\n            })\r\n        }\r\n      })\r\n    },\r\n    stepCaptchaSuccess() {\r\n      this.loginSuccess()\r\n    },\r\n    stepCaptchaCancel() {\r\n      this.Logout().then(() => {\r\n        this.loginBtn = false\r\n        this.stepCaptchaVisible = false\r\n      })\r\n    },\r\n    loginSuccess() {\r\n      // update-begin- author:sunjianlei --- date:20190812 --- for: 登录成功后不解除禁用按钮，防止多次点击\r\n      // this.loginBtn = false\r\n      // update-end- author:sunjianlei --- date:20190812 --- for: 登录成功后不解除禁用按钮，防止多次点击\r\n      this.$router.push({ name: 'dashboard' })\r\n      this.$notification.success({\r\n        message: '欢迎',\r\n        description: `${timeFix()}，欢迎回来`\r\n      })\r\n    },\r\n    cmsFailed(err) {\r\n      this.$notification['error']({\r\n        message: '登录失败',\r\n        description: err,\r\n        duration: 4\r\n      })\r\n    },\r\n    requestFailed(err) {\r\n      this.$notification['error']({\r\n        message: '登录失败',\r\n        description: ((err.response || {}).data || {}).message || err.message || '请求出现错误，请稍后再试',\r\n        duration: 4\r\n      })\r\n      this.loginBtn = false\r\n    },\r\n    validateMobile(rule, value, callback) {\r\n      if (!value || new RegExp(/^1([38][0-9]|4[579]|5[0-3,5-9]|6[6]|7[0135678]|9[89])\\d{8}$/).test(value)) {\r\n        callback()\r\n      } else {\r\n        callback('您的手机号码格式不正确!')\r\n      }\r\n    },\r\n    validateInputCode(rule, value, callback) {\r\n      if (!value || this.verifiedCode == this.inputCodeContent) {\r\n        callback()\r\n      } else {\r\n        callback('您输入的验证码不正确!')\r\n      }\r\n    },\r\n    generateCode(value) {\r\n      this.verifiedCode = value.toLowerCase()\r\n    },\r\n    inputCodeChange(e) {\r\n      this.inputCodeContent = e.target.value\r\n      if (!e.target.value || 0 == e.target.value) {\r\n        this.inputCodeNull = true\r\n      } else {\r\n        this.inputCodeContent = this.inputCodeContent.toLowerCase()\r\n        this.inputCodeNull = false\r\n      }\r\n    },\r\n    departConfirm(res) {\r\n      if (res.success) {\r\n        let multi_depart = res.result.multi_depart\r\n        //0:无部门 1:一个部门 2:多个部门\r\n        if (multi_depart == 0) {\r\n          this.loginSuccess()\r\n          this.$notification.warn({\r\n            message: '提示',\r\n            description: `您尚未归属部门,请确认账号信息`,\r\n            duration: 3\r\n          })\r\n        } else if (multi_depart == 2) {\r\n          this.departVisible = true\r\n          this.currentUsername = this.form.getFieldValue('username')\r\n          this.departList = res.result.departs\r\n        } else {\r\n          this.loginSuccess()\r\n        }\r\n      } else {\r\n        this.requestFailed(res)\r\n        this.Logout()\r\n      }\r\n    },\r\n    departOk() {\r\n      if (!this.departSelected) {\r\n        this.validate_status = 'error'\r\n        return false\r\n      }\r\n      let obj = {\r\n        orgCode: this.departSelected,\r\n        username: this.form.getFieldValue('username')\r\n      }\r\n      putAction('/sys/selectDepart', obj).then(res => {\r\n        if (res.success) {\r\n          const userInfo = res.result.userInfo\r\n          Vue.ls.set(USER_INFO, userInfo, 7 * 24 * 60 * 60 * 1000)\r\n          store.commit('SET_INFO', userInfo)\r\n          //console.log(\"---切换组织机构---userInfo-------\",store.getters.userInfo.orgCode);\r\n          this.departClear()\r\n          this.loginSuccess()\r\n        } else {\r\n          this.requestFailed(res)\r\n          this.Logout().then(() => {\r\n            this.departClear()\r\n          })\r\n        }\r\n      })\r\n    },\r\n    departClear() {\r\n      this.departList = []\r\n      this.departSelected = ''\r\n      this.currentUsername = ''\r\n      this.departVisible = false\r\n      this.validate_status = ''\r\n    },\r\n    departChange(value) {\r\n      this.validate_status = 'success'\r\n      this.departSelected = value\r\n    },\r\n    getRouterData() {\r\n      this.$nextTick(() => {\r\n        this.form.setFieldsValue({\r\n          username: this.$route.params.username\r\n        })\r\n      })\r\n    },\r\n    //获取密码加密规则\r\n    getEncrypte() {\r\n      var encryptedString = Vue.ls.get(ENCRYPTED_STRING)\r\n      if (encryptedString == null) {\r\n        getEncryptedString().then(data => {\r\n          this.encryptedString = data\r\n        })\r\n      } else {\r\n        this.encryptedString = encryptedString\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.user-layout-login {\r\n  label {\r\n    font-size: 14px;\r\n  }\r\n\r\n  .getCaptcha {\r\n    display: block;\r\n    width: 100%;\r\n    height: 40px;\r\n  }\r\n\r\n  .forge-password {\r\n    font-size: 14px;\r\n  }\r\n\r\n  button.login-button {\r\n    padding: 0 15px;\r\n    font-size: 16px;\r\n    height: 40px;\r\n    width: 100%;\r\n  }\r\n\r\n  .user-login-other {\r\n    text-align: left;\r\n    margin-top: 24px;\r\n    line-height: 22px;\r\n\r\n    .item-icon {\r\n      font-size: 24px;\r\n      color: rgba(0, 0, 0, 0.2);\r\n      margin-left: 16px;\r\n      vertical-align: middle;\r\n      cursor: pointer;\r\n      transition: color 0.3s;\r\n\r\n      &:hover {\r\n        color: #1890ff;\r\n      }\r\n    }\r\n\r\n    .register {\r\n      float: right;\r\n    }\r\n  }\r\n}\r\n</style>\r\n<style>\r\n.valid-error .ant-select-selection__placeholder {\r\n  color: #f5222d;\r\n}\r\n</style>"]}]}