{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/jeecg/JImportModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/jeecg/JImportModal.vue","mtime":1571018558897},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { postAction } from '@/api/manage'\nexport default {\n  name: 'JImportModal',\n  props:{\n    url:{\n      type: String,\n      default: '',\n      required: false\n    }\n  },\n  data(){\n    return {\n      visible:false,\n      uploading:false,\n      fileList:[],\n      uploadAction:''\n    }\n  },\n  watch: {\n    url (val) {\n      if(val){\n       this.uploadAction = window._CONFIG['domianURL']+val\n      }\n    }\n  },\n  created () {\n    this.uploadAction = window._CONFIG['domianURL']+this.url\n  },\n\n  methods:{\n    handleClose(){\n      this.visible=false\n    },\n    show(){\n      this.fileList = []\n      this.uploading = false\n      this.visible = true\n    },\n    handleRemove(file) {\n      const index = this.fileList.indexOf(file);\n      const newFileList = this.fileList.slice();\n      newFileList.splice(index, 1);\n      this.fileList = newFileList\n    },\n    beforeUpload(file) {\n      this.fileList = [...this.fileList, file]\n      return false;\n    },\n    handleImport() {\n      const { fileList } = this;\n      const formData = new FormData();\n      fileList.forEach((file) => {\n        formData.append('files[]', file);\n      });\n      this.uploading = true\n      postAction(this.uploadAction, formData).then((res) => {\n        this.uploading = false\n        if(res.success){\n          this.$message.success(res.message)\n          this.visible=false\n          this.$emit('ok')\n        }else{\n          this.$message.warning(res.message)\n        }\n      })\n    }\n\n  }\n}\n",{"version":3,"sources":["JImportModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"JImportModal.vue","sourceRoot":"src/components/jeecg","sourcesContent":["<template>\n  <a-modal\n    title=\"导入EXCEL\"\n    :width=\"600\"\n    :visible=\"visible\"\n    :confirmLoading=\"uploading\"\n    @cancel=\"handleClose\">\n\n    <a-upload\n      name=\"file\"\n      :multiple=\"true\"\n      accept=\".xls,.xlsx\"\n      :fileList=\"fileList\"\n      :remove=\"handleRemove\"\n      :beforeUpload=\"beforeUpload\">\n      <a-button>\n        <a-icon type=\"upload\" />\n        选择导入文件\n      </a-button>\n    </a-upload>\n\n    <template slot=\"footer\">\n      <a-button @click=\"handleClose\">关闭</a-button>\n      <a-button\n        type=\"primary\"\n        @click=\"handleImport\"\n        :disabled=\"fileList.length === 0\"\n        :loading=\"uploading\">\n        {{ uploading ? '上传中...' : '开始上传' }}\n      </a-button>\n    </template>\n\n  </a-modal>\n</template>\n\n<script>\n  import { postAction } from '@/api/manage'\n  export default {\n    name: 'JImportModal',\n    props:{\n      url:{\n        type: String,\n        default: '',\n        required: false\n      }\n    },\n    data(){\n      return {\n        visible:false,\n        uploading:false,\n        fileList:[],\n        uploadAction:''\n      }\n    },\n    watch: {\n      url (val) {\n        if(val){\n         this.uploadAction = window._CONFIG['domianURL']+val\n        }\n      }\n    },\n    created () {\n      this.uploadAction = window._CONFIG['domianURL']+this.url\n    },\n\n    methods:{\n      handleClose(){\n        this.visible=false\n      },\n      show(){\n        this.fileList = []\n        this.uploading = false\n        this.visible = true\n      },\n      handleRemove(file) {\n        const index = this.fileList.indexOf(file);\n        const newFileList = this.fileList.slice();\n        newFileList.splice(index, 1);\n        this.fileList = newFileList\n      },\n      beforeUpload(file) {\n        this.fileList = [...this.fileList, file]\n        return false;\n      },\n      handleImport() {\n        const { fileList } = this;\n        const formData = new FormData();\n        fileList.forEach((file) => {\n          formData.append('files[]', file);\n        });\n        this.uploading = true\n        postAction(this.uploadAction, formData).then((res) => {\n          this.uploading = false\n          if(res.success){\n            this.$message.success(res.message)\n            this.visible=false\n            this.$emit('ok')\n          }else{\n            this.$message.warning(res.message)\n          }\n        })\n      }\n\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"]}]}