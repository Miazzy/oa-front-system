{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/SysAnnouncementModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/SysAnnouncementModal.vue","mtime":1571018558937},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":1565525386522},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { httpAction } from '@/api/manage'\nimport pick from 'lodash.pick'\nimport { getAction } from '@/api/manage'\nimport JDate from '@/components/jeecg/JDate'\nimport JEditor from '@/components/jeecg/JEditor'\nimport SelectUserListModal from \"./SelectUserListModal\";\nimport moment from 'moment'\n\nexport default {\n  components: { JEditor, JDate, SelectUserListModal},\n  name: \"SysAnnouncementModal\",\n  data () {\n    return {\n      title:\"操作\",\n      visible: false,\n      disableSubmit:false,\n      model: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules:{\n        title:{rules: [{ required: true, message: '请输入标题!' }]},\n        msgCategory:{rules: [{ required: true, message: '请选择消息类型!' }]},\n        msgType:{rules: [{ required: true, message: '请选择通告对象类型!' }]},\n        endTime:{rules:[{validator: this.endTimeValidate}]},\n        startTime:{rules:[{validator: this.startTimeValidate}]}\n      },\n      url: {\n        queryByIds: \"/sys/user/queryByIds\",\n        add: \"/sys/annountCement/add\",\n        edit: \"/sys/annountCement/edit\",\n      },\n      userType:false,\n      userIds:[],\n      selectedUser:[],\n      disabled:false,\n      msgContent:\"\",\n    }\n  },\n  created () {\n  },\n  methods: {\n    add () {\n      this.edit({});\n    },\n    edit (record) {\n      this.form.resetFields();\n      this.model = {}\n      this.disable = false;\n      this.visible = true;\n      this.getUser(record);\n    },\n    getUser(record){\n      this.model = Object.assign({}, record);\n      // 指定用户\n      if(record&&record.msgType === \"USER\"){\n        this.userType =  true;\n        this.userIds = record.userIds;\n        getAction(this.url.queryByIds,{userIds:this.userIds}).then((res)=>{\n          if(res.success){\n            for(var i=0;i<res.result.length;i++){\n              this.selectedUser.push(res.result[i].realname);\n            }\n            this.$refs.UserListModal.edit(res.result,this.userIds);\n          }\n        });\n      }\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.model,'endTime','startTime','titile','msgContent','sender','priority','msgCategory','msgType','sendStatus','delFlag'))\n      });\n    },\n    close () {\n      this.$emit('close');\n      this.selectedUser = [];\n      this.visible = false;\n    },\n    handleOk () {\n      const that = this;\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          that.confirmLoading = true;\n          let httpurl = '';\n          let method = '';\n          if(!this.model.id){\n            httpurl+=this.url.add;\n            method = 'post';\n          }else{\n            httpurl+=this.url.edit;\n             method = 'put';\n          }\n          let formData = Object.assign(this.model, values);\n          if(this.userType){\n            formData.userIds =  this.userIds;\n          }\n          console.log(formData)\n          httpAction(httpurl,formData,method).then((res)=>{\n            if(res.success){\n              that.$message.success(res.message);\n              that.$emit('ok');\n            }else{\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n            that.close();\n          })\n\n\n\n        }\n      })\n    },\n    handleCancel () {\n      this.visible = false;\n      this.$emit('close');\n      this.resetUser();\n    },\n    resetUser (){\n      this.userType =  false;\n      this.userIds = [];\n      this.selectedUser = [];\n      this.disabled = false;\n      this.$refs.UserListModal.edit(null,null);\n    },\n    selectUserIds() {\n      this.$refs.UserListModal.add(this.selectedUser,this.userIds);\n    },\n    chooseMsgType(value) {\n      if(\"USER\" == value) {\n        this.userType = true;\n      } else {\n        this.userType = false;\n        this.selectedUser = [];\n        this.userIds = [];\n      }\n    },\n    // 子modal回调\n    choseUser:function(userList){\n      this.selectedUser = [];\n      this.userIds = [];\n      for(var i=0;i<userList.length;i++){\n        this.selectedUser.push(userList[i].realname);\n        this.userIds += userList[i].id+\",\"\n      }\n    },\n    startTimeValidate(rule,value,callback){\n      let endTime = this.form.getFieldValue(\"endTime\")\n      if(!value || !endTime){\n        callback()\n      }else if(moment(value).isBefore(endTime)){\n        callback()\n      }else{\n        callback(\"开始时间需小于结束时间\")\n      }\n    },\n    endTimeValidate(rule,value,callback){\n      let startTime = this.form.getFieldValue(\"startTime\")\n      if(!value || !startTime){\n        callback()\n      }else if(moment(startTime).isBefore(value)){\n        callback()\n      }else{\n        callback(\"结束时间需大于开始时间\")\n      }\n    }\n\n  }\n}\n",null]}