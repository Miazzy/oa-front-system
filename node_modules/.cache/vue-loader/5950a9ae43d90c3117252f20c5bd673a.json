{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/LogList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/LogList.vue","mtime":1571018558932},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { filterObj } from '@/utils/util';\nimport { JeecgListMixin } from '@/mixins/JeecgListMixin'\nimport JEllipsis from '@/components/jeecg/JEllipsis'\n\nexport default {\n  name: \"LogList\",\n  mixins:[JeecgListMixin],\n  components: {\n    JEllipsis\n  },\n  data () {\n    return {\n      description: '这是日志管理页面',\n      // 查询条件\n      queryParam: {\n        ipInfo:'',\n        createTimeRange:[],\n        logType:'1',\n        keyWord:'',\n      },\n      tabKey: \"1\",\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: '',\n          key:'rowIndex',\n          align:\"center\",\n          customRender:function (t,r,index) {\n            return parseInt(index)+1;\n          }\n        },\n        {\n          title: '日志内容',\n          align:\"left\",\n          dataIndex: 'logContent',\n          scopedSlots: { customRender: 'logContent' },\n          sorter: true\n        },\n        {\n          title: '操作人ID',\n          dataIndex: 'userid',\n          align:\"center\",\n          sorter: true\n        },\n        {\n          title: '操作人名称',\n          dataIndex: 'username',\n          align:\"center\",\n          sorter: true\n        },\n        {\n          title: 'IP',\n          dataIndex: 'ip',\n          align:\"center\",\n          sorter: true\n        },\n        {\n          title: '耗时(毫秒)',\n          dataIndex: 'costTime',\n          align:\"center\",\n          sorter: true\n        },\n        {\n          title: '日志类型',\n          dataIndex: 'logType_dictText',\n          /*customRender:function (text) {\n            if(text==1){\n              return \"登录日志\";\n            }else if(text==2){\n              return \"操作日志\";\n            }else{\n              return text;\n            }\n          },*/\n          align:\"center\",\n        },\n        {\n          title: '创建时间',\n          dataIndex: 'createTime',\n          align:\"center\",\n          sorter: true\n        }\n      ],\n      operateColumn:\n      {\n        title: '操作类型',\n        dataIndex: 'operateType_dictText',\n        align:\"center\",\n      },\n      labelCol: {\n        xs: { span: 1 },\n        sm: { span: 2 },\n      },\n      wrapperCol: {\n        xs: { span: 10 },\n        sm: { span: 16 },\n      },\n      url: {\n        list: \"/sys/log/list\",\n      },\n    }\n  },\n  methods: {\n    getQueryParams(){\n      console.log(this.queryParam.createTimeRange)\n      var param = Object.assign({}, this.queryParam,this.isorter);\n      param.field = this.getQueryField();\n      param.pageNo = this.ipagination.current;\n      param.pageSize = this.ipagination.pageSize;\n      delete param.createTimeRange; // 时间参数不传递后台\n      return filterObj(param);\n    },\n\n    // 重置\n    searchReset(){\n      var that = this;\n      var logType = that.queryParam.logType;\n      that.queryParam = {}; //清空查询区域参数\n      that.queryParam.logType = logType;\n      that.loadData(this.ipagination.current);\n    },\n    // 日志类型\n    callback(key){\n\n      // 动态添加操作类型列\n      if (key == 2) {\n        this.tabKey = '2';\n        this.columns.splice(7, 0, this.operateColumn);\n      }else if(this.columns.length == 9)\n      {\n        this.tabKey = '1';\n        this.columns.splice(7,1);\n      }\n\n      let that=this;\n      that.queryParam.logType=key;\n      that.loadData();\n    },\n    onDateChange: function (value, dateString) {\n      console.log(dateString[0],dateString[1]);\n      this.queryParam.createTime_begin=dateString[0];\n      this.queryParam.createTime_end=dateString[1];\n    },\n    onDateOk(value) {\n      console.log(value);\n    },\n  }\n}\n",{"version":3,"sources":["LogList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LogList.vue","sourceRoot":"src/views/system","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <!--导航区域-->\n    <div>\n      <a-tabs defaultActiveKey=\"1\" @change=\"callback\">\n        <a-tab-pane tab=\"登录日志\" key=\"1\"></a-tab-pane>\n        <a-tab-pane tab=\"操作日志\" key=\"2\"></a-tab-pane>\n      </a-tabs>\n    </div>\n\n    <!-- 查询区域 -->\n    <div class=\"table-page-search-wrapper\">\n      <a-form layout=\"inline\">\n        <a-row :gutter=\"24\">\n\n          <a-col :md=\"6\" :sm=\"8\">\n            <a-form-item label=\"搜索日志\">\n              <a-input placeholder=\"请输入搜索关键词\" v-model=\"queryParam.keyWord\"></a-input>\n            </a-form-item>\n          </a-col>\n\n          <a-col :md=\"6\" :sm=\"10\">\n            <a-form-item label=\"创建时间\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n              <a-range-picker\n                style=\"width: 210px\"\n                v-model=\"queryParam.createTimeRange\"\n                format=\"YYYY-MM-DD\"\n                :placeholder=\"['开始时间', '结束时间']\"\n                @change=\"onDateChange\"\n                @ok=\"onDateOk\"\n              />\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"5\" :sm=\"8\" v-if=\"tabKey === '2'\">\n            <a-form-item label=\"操作类型\" style=\"left: 10px\">\n              <j-dict-select-tag v-model=\"queryParam.operateType\" placeholder=\"请选择操作类型\" dictCode=\"operate_type\"/>\n            </a-form-item>\n          </a-col>\n\n          <span style=\"float: left;overflow: hidden;\" class=\"table-page-search-submitButtons\">\n            <a-col :md=\"6\" :sm=\"24\" >\n                <a-button type=\"primary\"  style=\"left: 10px\" @click=\"searchQuery\" icon=\"search\">查询</a-button>\n                <a-button type=\"primary\"  @click=\"searchReset\" icon=\"reload\" style=\"margin-left: 8px;left: 10px\">重置</a-button>\n            </a-col>\n          </span>\n\n        </a-row>\n      </a-form>\n    </div>\n\n    <!-- table区域-begin -->\n    <a-table\n      ref=\"table\"\n      size=\"middle\"\n      rowKey=\"id\"\n      :columns=\"columns\"\n      :dataSource=\"dataSource\"\n      :pagination=\"ipagination\"\n      :loading=\"loading\"\n      @change=\"handleTableChange\">\n\n      <div v-show=\"queryParam.logType==2\" slot=\"expandedRowRender\" slot-scope=\"record\" style=\"margin: 0\">\n        <div style=\"margin-bottom: 5px\"><a-badge status=\"success\" style=\"vertical-align: middle;\"/><span style=\"vertical-align: middle;\">请求方法:{{ record.method }}</span></div>\n        <div><a-badge status=\"processing\" style=\"vertical-align: middle;\"/><span style=\"vertical-align: middle;\">请求参数:{{ record.requestParam }}</span></div>\n      </div>\n      <!-- 字符串超长截取省略号显示-->\n      <span slot=\"logContent\" slot-scope=\"text, record\">\n          <j-ellipsis :value=\"text\" :length=\"40\"/>\n        </span>\n    </a-table>\n    <!-- table区域-end -->\n  </a-card>\n</template>\n\n<script>\n  import { filterObj } from '@/utils/util';\n  import { JeecgListMixin } from '@/mixins/JeecgListMixin'\n  import JEllipsis from '@/components/jeecg/JEllipsis'\n\n  export default {\n    name: \"LogList\",\n    mixins:[JeecgListMixin],\n    components: {\n      JEllipsis\n    },\n    data () {\n      return {\n        description: '这是日志管理页面',\n        // 查询条件\n        queryParam: {\n          ipInfo:'',\n          createTimeRange:[],\n          logType:'1',\n          keyWord:'',\n        },\n        tabKey: \"1\",\n        // 表头\n        columns: [\n          {\n            title: '#',\n            dataIndex: '',\n            key:'rowIndex',\n            align:\"center\",\n            customRender:function (t,r,index) {\n              return parseInt(index)+1;\n            }\n          },\n          {\n            title: '日志内容',\n            align:\"left\",\n            dataIndex: 'logContent',\n            scopedSlots: { customRender: 'logContent' },\n            sorter: true\n          },\n          {\n            title: '操作人ID',\n            dataIndex: 'userid',\n            align:\"center\",\n            sorter: true\n          },\n          {\n            title: '操作人名称',\n            dataIndex: 'username',\n            align:\"center\",\n            sorter: true\n          },\n          {\n            title: 'IP',\n            dataIndex: 'ip',\n            align:\"center\",\n            sorter: true\n          },\n          {\n            title: '耗时(毫秒)',\n            dataIndex: 'costTime',\n            align:\"center\",\n            sorter: true\n          },\n          {\n            title: '日志类型',\n            dataIndex: 'logType_dictText',\n            /*customRender:function (text) {\n              if(text==1){\n                return \"登录日志\";\n              }else if(text==2){\n                return \"操作日志\";\n              }else{\n                return text;\n              }\n            },*/\n            align:\"center\",\n          },\n          {\n            title: '创建时间',\n            dataIndex: 'createTime',\n            align:\"center\",\n            sorter: true\n          }\n        ],\n        operateColumn:\n        {\n          title: '操作类型',\n          dataIndex: 'operateType_dictText',\n          align:\"center\",\n        },\n        labelCol: {\n          xs: { span: 1 },\n          sm: { span: 2 },\n        },\n        wrapperCol: {\n          xs: { span: 10 },\n          sm: { span: 16 },\n        },\n        url: {\n          list: \"/sys/log/list\",\n        },\n      }\n    },\n    methods: {\n      getQueryParams(){\n        console.log(this.queryParam.createTimeRange)\n        var param = Object.assign({}, this.queryParam,this.isorter);\n        param.field = this.getQueryField();\n        param.pageNo = this.ipagination.current;\n        param.pageSize = this.ipagination.pageSize;\n        delete param.createTimeRange; // 时间参数不传递后台\n        return filterObj(param);\n      },\n\n      // 重置\n      searchReset(){\n        var that = this;\n        var logType = that.queryParam.logType;\n        that.queryParam = {}; //清空查询区域参数\n        that.queryParam.logType = logType;\n        that.loadData(this.ipagination.current);\n      },\n      // 日志类型\n      callback(key){\n\n        // 动态添加操作类型列\n        if (key == 2) {\n          this.tabKey = '2';\n          this.columns.splice(7, 0, this.operateColumn);\n        }else if(this.columns.length == 9)\n        {\n          this.tabKey = '1';\n          this.columns.splice(7,1);\n        }\n\n        let that=this;\n        that.queryParam.logType=key;\n        that.loadData();\n      },\n      onDateChange: function (value, dateString) {\n        console.log(dateString[0],dateString[1]);\n        this.queryParam.createTime_begin=dateString[0];\n        this.queryParam.createTime_end=dateString[1];\n      },\n      onDateOk(value) {\n        console.log(value);\n      },\n    }\n  }\n</script>\n<style scoped>\n  @import '~@assets/less/common.less'\n</style>"]}]}