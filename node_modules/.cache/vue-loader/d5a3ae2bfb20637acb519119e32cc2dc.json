{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/RoleModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/RoleModal.vue","mtime":1571018558936},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport pick from 'lodash.pick'\nimport {addRole,editRole,duplicateCheck } from '@/api/api'\n\nexport default {\n  name: \"RoleModal\",\n  data () {\n    return {\n      title:\"操作\",\n      visible: false,\n      roleDisabled: false,\n      model: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules:{\n        roleName:{\n          rules: [\n            { required: true, message: '请输入角色名称!' },\n            { min: 2, max: 30, message: '长度在 2 到 30 个字符', trigger: 'blur' }\n          ]},\n        roleCode:{\n          rules: [\n            { required: true, message: '请输入角色名称!'},\n            { min: 0, max: 64, message: '长度不超过 64 个字符', trigger: 'blur' },\n            { validator: this.validateRoleCode}\n          ]},\n        description:{\n          rules: [\n            { min: 0, max: 126, message: '长度不超过 126 个字符', trigger: 'blur' }\n          ]}\n      },\n    }\n  },\n  created () {\n  },\n  methods: {\n    add () {\n      this.edit({});\n    },\n    edit (record) {\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.visible = true;\n\n      //编辑页面禁止修改角色编码\n      if(this.model.id){\n        this.roleDisabled = true;\n      }else{\n        this.roleDisabled = false;\n      }\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.model,'roleName', 'description','roleCode'))\n      });\n\n    },\n    close () {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleOk () {\n      const that = this;\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          that.confirmLoading = true;\n          let formData = Object.assign(this.model, values);\n          let obj;\n          console.log(formData)\n          if(!this.model.id){\n            obj=addRole(formData);\n          }else{\n            obj=editRole(formData);\n          }\n          obj.then((res)=>{\n            if(res.success){\n              that.$message.success(res.message);\n              that.$emit('ok');\n            }else{\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n            that.close();\n          })\n        }\n      })\n    },\n    handleCancel () {\n      this.close()\n    },\n    validateRoleCode(rule, value, callback){\n      if(/[\\u4E00-\\u9FA5]/g.test(value)){\n        callback(\"角色编码不可输入汉字!\");\n      }else{\n        var params = {\n          tableName: \"sys_role\",\n          fieldName: \"role_code\",\n          fieldVal: value,\n          dataId: this.model.id,\n        };\n        duplicateCheck(params).then((res)=>{\n          if(res.success){\n            callback();\n          }else{\n            callback(res.message);\n          }\n        });\n      }\n    }\n\n  }\n}\n",null]}