{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/PermissionModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/PermissionModal.vue","mtime":1571018558936},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":1565525386522},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {addPermission,editPermission,queryTreeList} from '@/api/api'\nimport Icons from './icon/Icons'\nimport pick from 'lodash.pick'\n\n\nexport default {\n  name: \"PermissionModal\",\n  components: {Icons},\n  data () {\n    return {\n      drawerWidth:700,\n      treeData:[],\n      treeValue: '0-0-4',\n      title:\"操作\",\n      visible: false,\n      disableSubmit:false,\n      model: {},\n      localMenuType:0,\n      alwaysShow:false,//表单元素-聚合路由\n      menuHidden:false,//表单元素-隐藏路由\n      routeSwitch:true, //是否路由菜单\n      isKeepalive:true, //是否缓存路由\n      show:true,//根据菜单类型，动态显示隐藏表单元素\n      menuLabel:'菜单名称',\n      isRequrie:true,  // 是否需要验证\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n\n      iconChooseVisible: false,\n      validateStatus:\"\"\n    }\n  },\n  computed:{\n    validatorRules:function() {\n      return {\n        name:{rules: [{ required: true, message: '请输入菜单标题!' }]},\n        component:{rules: [{ required: this.show, message: '请输入前端组件!' }]},\n        url:{rules: [{ required: this.show, message: '请输入菜单路径!' }]},\n        permsType:{rules: [{ required: true, message: '请输入授权策略!' }]},\n        sortNo:{initialValue:1.0,rules: [{validator: this.validateNumber}]},\n      }\n    }\n  },\n  created () {\n    this.initDictConfig();\n  },\n  methods: {\n    loadTree(){\n      var that = this;\n      queryTreeList().then((res)=>{\n        if(res.success){\n          console.log('----queryTreeList---')\n          console.log(res)\n          that.treeData = [];\n          let treeList = res.result.treeList\n          for(let a=0;a<treeList.length;a++){\n            let temp = treeList[a];\n            temp.isLeaf = temp.leaf;\n            that.treeData.push(temp);\n          }\n        }\n      });\n    },\n    add () {\n      // 默认值\n      this.edit({status:'1',permsType:'1',route:true});\n    },\n    edit (record) {\n      this.resetScreenSize(); // 调用此方法,根据屏幕宽度自适应调整抽屉的宽度\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      //--------------------------------------------------------------------------------------------------\n      //根据菜单类型，动态展示页面字段\n      console.log(record)\n      this.alwaysShow = !record.alwaysShow?false:true;\n      this.menuHidden = !record.hidden?false:true;\n\n      if(record.route!=null){\n        this.routeSwitch = record.route?true:false;\n      }\n      \n      if(record.keepAlive!=null){\n        this.isKeepalive = record.keepAlive?true:false;\n      }else{\n        this.isKeepalive = false; // 升级兼容 如果没有（后台没有传过来、或者是新建）默认为false\n      }\n\n\n\n      //console.log('record.menuType', record.menuType);\n      this.show = record.menuType==2?false:true;\n      this.menuLabel = record.menuType==2?'按钮/权限':'菜单名称';\n\n      if(this.model.parentId){\n        this.localMenuType = 1;\n      }else{\n        this.localMenuType = 0;\n      }\n      //----------------------------------------------------------------------------------------------\n\n      this.visible = true;\n      this.loadTree();\n      let fieldsVal = pick(this.model,'name','perms','permsType','component','url','sortNo','menuType','status');\n      this.$nextTick(() => {\n        this.form.setFieldsValue(fieldsVal)\n      });\n    },\n    close () {\n      this.$emit('close');\n      this.disableSubmit = false;\n      this.visible = false;\n    },\n    handleOk () {\n      const that = this;\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          this.model.alwaysShow = this.alwaysShow;\n          this.model.hidden = this.menuHidden;\n          this.model.route = this.routeSwitch;\n          this.model.keepAlive = this.isKeepalive;\n          let formData = Object.assign(this.model, values);\n          if ((formData.menuType == 1 || formData.menuType == 2) && !formData.parentId) {\n            that.validateStatus = 'error';\n            that.$message.error(\"请检查你填的类型以及信息是否正确！\");\n            return;\n          } else {\n            that.validateStatus = 'success';\n          }\n          that.confirmLoading = true;\n          console.log(formData);\n          let obj;\n          if (!this.model.id) {\n            obj = addPermission(formData);\n          } else {\n            obj = editPermission(formData);\n          }\n          obj.then((res) => {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n            that.close();\n          });\n        }\n      })\n    },\n    handleCancel () {\n      this.close()\n    },\n    validateNumber(rule, value, callback){\n      if(!value || new RegExp(/^[0-9]*[1-9][0-9]*$/).test(value)){\n        callback();\n      }else{\n        callback(\"请输入正整数!\");\n      }\n    },\n    onChangeMenuType(e) {\n      //console.log('localMenuType checked', e.target.value)\n      this.localMenuType=e.target.value\n      if(e.target.value == 2){\n        this.show = false;\n        this.menuLabel = '按钮/权限';\n      }else{\n        this.show = true;\n        this.menuLabel = '菜单名称';\n      }\n      this.$nextTick(() => {\n        this.form.validateFields(['url','component'], { force: true });\n      });\n    },\n    selectIcons(){\n      this.iconChooseVisible = true\n    },\n    handleIconCancel () {\n      this.iconChooseVisible = false\n    },\n    handleIconChoose (value) {\n      console.log(value)\n      this.model.icon = value\n      this.form.icon = value\n      this.iconChooseVisible = false\n    },\n    // 根据屏幕变化,设置抽屉尺寸\n    resetScreenSize(){\n      let screenWidth = document.body.clientWidth;\n      if(screenWidth < 500){\n        this.drawerWidth = screenWidth;\n      }else{\n        this.drawerWidth = 700;\n      }\n    },\n    initDictConfig() {\n    },\n    handleParentIdChange(value){\n      if(!value){\n        this.validateStatus=\"error\"\n      }else{\n        this.validateStatus=\"success\"\n      }\n    }\n  }\n}\n",null]}