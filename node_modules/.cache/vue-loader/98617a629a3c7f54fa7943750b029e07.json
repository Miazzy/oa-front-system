{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/modules/online/cgform/auto/OnlCgformAutoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/modules/online/cgform/auto/OnlCgformAutoList.vue","mtime":1572577185012},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { postAction, getAction, deleteAction, downFile } from '@/api/manage'\r\nimport { filterMultiDictText } from '@/components/dict/JDictSelectUtil'\r\nimport { filterObj } from '@/utils/util'\r\nimport JImportModal from '@/components/jeecg/JImportModal'\r\n\r\nexport default {\r\n  name: 'OnlCgFormAutoList',\r\n  components: {\r\n    JImportModal\r\n  },\r\n  data() {\r\n    return {\r\n      code: '',\r\n      description: '在线报表',\r\n      currentTableName: '',\r\n      url: {\r\n        getQueryInfo: '/online/cgform/api/getQueryInfo/',\r\n        getColumns: '/online/cgform/api/getColumns/',\r\n        getData: '/online/cgform/api/getData/',\r\n        optPre: '/online/cgform/api/form/',\r\n        exportXls: '/online/cgform/api/exportXls/',\r\n        buttonAction: '/online/cgform/api/doButton'\r\n      },\r\n      flowCodePre: 'onl_',\r\n      isorter: {\r\n        column: 'createTime',\r\n        order: 'desc'\r\n      },\r\n      //dictOptions:{fieldName:[]}\r\n      dictOptions: {},\r\n      cgButtonLinkList: [],\r\n      cgButtonList: [],\r\n      queryInfo: [],\r\n      queryParam: {},\r\n      toggleSearchStatus: false,\r\n      table: {\r\n        loading: true,\r\n        // 表头\r\n        columns: [],\r\n        //列设置\r\n        settingColumns: [],\r\n        //defColumns: columns,\r\n        //数据集\r\n        dataSource: [],\r\n        // 选择器\r\n        selectedRowKeys: [],\r\n        selectionRows: [],\r\n        // 分页参数\r\n        pagination: {\r\n          current: 1,\r\n          pageSize: 20,\r\n          pageSizeOptions: ['10', '20', '30'],\r\n          showTotal: (total, range) => {\r\n            return range[0] + '-' + range[1] + ' 共' + total + '条'\r\n          },\r\n          showQuickJumper: true,\r\n          showSizeChanger: true,\r\n          total: 0\r\n        }\r\n      },\r\n      actionColumn: {\r\n        title: '操作',\r\n        dataIndex: 'action',\r\n        scopedSlots: {\r\n          //filterDropdown: 'filterDropdown',\r\n          //filterIcon: 'filterIcon',\r\n          customRender: 'action'\r\n        },\r\n        fixed: 'right',\r\n        align: 'center',\r\n        width: 150\r\n      },\r\n      formTemplate: '99',\r\n      EnhanceJS: '',\r\n      hideColumns: [],\r\n      buttonSwitch: {\r\n        add: true,\r\n        update: true,\r\n        delete: true,\r\n        batch_delete: true,\r\n        import: true,\r\n        export: true\r\n      },\r\n      hasBpmStatus: false\r\n    }\r\n  },\r\n  created() {\r\n    this.initAutoList()\r\n  },\r\n  mounted() {\r\n    this.cgButtonJsHandler('mounted')\r\n  },\r\n  watch: {\r\n    $route() {\r\n      // 刷新参数放到这里去触发，就可以刷新相同界面了\r\n      this.initAutoList()\r\n    }\r\n  },\r\n  methods: {\r\n    hasBpmStatusFilter() {\r\n      var columnObjs = this.table.columns\r\n      let columns = []\r\n      for (var item of columnObjs) {\r\n        columns.push(item.dataIndex)\r\n      }\r\n      if (columns.includes('bpm_status') || columns.includes('BPM_STATUS')) {\r\n        this.hasBpmStatus = true\r\n      } else {\r\n        this.hasBpmStatus = false\r\n      }\r\n    },\r\n    initQueryInfo() {\r\n      getAction(`${this.url.getQueryInfo}${this.code}`).then(res => {\r\n        console.log('--onlineList-获取查询条件配置', res)\r\n        if (res.success) {\r\n          this.queryInfo = res.result\r\n        } else {\r\n          this.$message.warning(res.message)\r\n        }\r\n      })\r\n    },\r\n    initAutoList() {\r\n      if (!this.$route.params.code) {\r\n        return false\r\n      }\r\n      this.table.loading = true\r\n      this.code = this.$route.params.code\r\n      getAction(`${this.url.getColumns}${this.code}`).then(res => {\r\n        console.log('--onlineList-加载动态列>>', res)\r\n        if (res.success) {\r\n          this.dictOptions = res.result.dictOptions\r\n          this.formTemplate = res.result.formTemplate\r\n          this.description = res.result.description\r\n          this.currentTableName = res.result.currentTableName\r\n          this.initCgButtonList(res.result.cgButtonList)\r\n          this.initCgEnhanceJs(res.result.enhanceJs)\r\n          this.initButtonSwitch(res.result.hideColumns)\r\n          let currColumns = res.result.columns\r\n          for (let a = 0; a < currColumns.length; a++) {\r\n            if (currColumns[a].customRender) {\r\n              let dictCode = currColumns[a].customRender\r\n              currColumns[a].customRender = text => {\r\n                return filterMultiDictText(this.dictOptions[dictCode], text)\r\n              }\r\n            }\r\n          }\r\n          currColumns.push(this.actionColumn)\r\n          this.table.columns = [...currColumns]\r\n          this.hasBpmStatusFilter()\r\n          this.loadData()\r\n          this.initQueryInfo()\r\n        } else {\r\n          this.$message.warning(res.message)\r\n        }\r\n      })\r\n    },\r\n    loadData(arg) {\r\n      if (arg == 1) {\r\n        this.table.pagination.current = 1\r\n      }\r\n      let params = this.getQueryParams() //查询条件\r\n      console.log('--onlineList-查询条件-->', params)\r\n      getAction(`${this.url.getData}${this.code}`, params).then(res => {\r\n        console.log('--onlineList-列表数据', res)\r\n        if (res.success) {\r\n          let result = res.result\r\n          if (Number(result.total) > 0) {\r\n            this.table.pagination.total = Number(result.total)\r\n            this.table.dataSource = result.records\r\n          } else {\r\n            this.table.pagination.total = 0\r\n            this.table.dataSource = []\r\n            //this.$message.warning(\"查无数据\")\r\n          }\r\n        } else {\r\n          this.$message.warning(res.message)\r\n        }\r\n        this.table.loading = false\r\n      })\r\n    },\r\n    getQueryParams() {\r\n      let param = Object.assign({}, this.queryParam, this.isorter)\r\n      param.pageNo = this.table.pagination.current\r\n      param.pageSize = this.table.pagination.pageSize\r\n      return filterObj(param)\r\n    },\r\n    handleChangeInTableSelect(selectedRowKeys, selectionRows) {\r\n      this.table.selectedRowKeys = selectedRowKeys\r\n      this.table.selectionRows = selectionRows\r\n    },\r\n    handleTableChange(pagination, filters, sorter) {\r\n      //TODO 筛选\r\n      if (Object.keys(sorter).length > 0) {\r\n        this.isorter.column = sorter.field\r\n        this.isorter.order = 'ascend' == sorter.order ? 'asc' : 'desc'\r\n      }\r\n      this.table.pagination = pagination\r\n      this.loadData()\r\n    },\r\n    handleAdd() {\r\n      this.cgButtonJsHandler('beforeAdd')\r\n      this.$refs.modal.add(this.formTemplate)\r\n    },\r\n    handleImportXls() {\r\n      this.$refs.importModal.show()\r\n    },\r\n    importOk() {\r\n      this.loadData(1)\r\n    },\r\n    handleExportXls2() {\r\n      let param = this.queryParam\r\n      if (this.table.selectedRowKeys && this.table.selectedRowKeys.length > 0) {\r\n        param['selections'] = this.table.selectedRowKeys.join(',')\r\n      }\r\n      let paramsStr = encodeURI(JSON.stringify(param))\r\n      console.log('paramsStr: ' + paramsStr)\r\n      let url = window._CONFIG['domianURL'] + this.url.exportXls + this.code + '?paramsStr=' + paramsStr\r\n      window.location.href = url\r\n    },\r\n    handleExportXls() {\r\n      let param = this.queryParam\r\n      if (this.table.selectedRowKeys && this.table.selectedRowKeys.length > 0) {\r\n        param['selections'] = this.table.selectedRowKeys.join(',')\r\n      }\r\n      console.log('导出参数', param)\r\n      let paramsStr = JSON.stringify(filterObj(param))\r\n      downFile(this.url.exportXls + this.code, { paramsStr: paramsStr }).then(data => {\r\n        if (!data) {\r\n          this.$message.warning('文件下载失败')\r\n          return\r\n        }\r\n        if (typeof window.navigator.msSaveBlob !== 'undefined') {\r\n          window.navigator.msSaveBlob(new Blob([data]), this.description + '.xls')\r\n        } else {\r\n          let url = window.URL.createObjectURL(new Blob([data]))\r\n          let link = document.createElement('a')\r\n          link.style.display = 'none'\r\n          link.href = url\r\n          link.setAttribute('download', this.description + '.xls')\r\n          document.body.appendChild(link)\r\n          link.click()\r\n          document.body.removeChild(link) //下载完成移除元素\r\n          window.URL.revokeObjectURL(url) //释放掉blob对象\r\n        }\r\n      })\r\n    },\r\n    handleEdit(record) {\r\n      this.cgButtonLinkHandler(record, 'beforeEdit', 'js')\r\n      this.$refs.modal.edit(this.formTemplate, record.id)\r\n    },\r\n    handleDetail(record) {\r\n      this.$refs.modal.detail(this.formTemplate, record.id)\r\n    },\r\n    handleDeleteOne(record) {\r\n      this.cgButtonLinkHandler(record, 'beforeDelete', 'js')\r\n      this.handleDelete(record.id)\r\n    },\r\n    handleDelete(id) {\r\n      deleteAction(this.url.optPre + this.code + '/' + id).then(res => {\r\n        if (res.success) {\r\n          this.$message.success(res.message)\r\n          this.loadData()\r\n        } else {\r\n          this.$message.warning(res.message)\r\n        }\r\n      })\r\n    },\r\n\r\n    handleFormSuccess() {\r\n      this.loadData()\r\n    },\r\n\r\n    onClearSelected() {\r\n      this.table.selectedRowKeys = []\r\n      this.table.selectionRows = []\r\n    },\r\n\r\n    getImgView(text) {\r\n      if (text && text.indexOf(',') > 0) {\r\n        text = text.substring(0, text.indexOf(','))\r\n      }\r\n      return window._CONFIG['downloadURL'] + '/' + text\r\n    },\r\n\r\n    uploadFile(text) {\r\n      if (!text) {\r\n        this.$message.warning('未知的文件')\r\n        return\r\n      }\r\n      if (text.indexOf(',') > 0) {\r\n        text = text.substring(0, text.indexOf(','))\r\n      }\r\n      console.log(text)\r\n      window.open(window._CONFIG['downloadURL'] + '/' + text) //TODO 下载的方法\r\n    },\r\n\r\n    viewFile(text) {\r\n      if (!text) {\r\n        this.$message.warning('未知的文件')\r\n        return\r\n      }\r\n      if (text.indexOf(',') > 0) {\r\n        text = text.substring(0, text.indexOf(','))\r\n      }\r\n      let officeURL = 'https://view.officeapps.live.com/op/view.aspx?src='\r\n      let idocvURL = ''\r\n      let url = window._CONFIG['downloadURL'] + '/' + text\r\n      let suffix = text.substring(text.lastIndexOf('.'), text.length).toLowerCase()\r\n      //如果word文档，则使用微软API打开\r\n      url = suffix.includes('doc') || suffix.includes('ppt') || suffix.includes('xls') ? officeURL + url : url\r\n      //如果pdf文档，则浏览器上直接打开\r\n      url = suffix.includes('pdf') ? idocvURL + url : url\r\n      //浏览器打开预览\r\n      window.open(url)\r\n    },\r\n\r\n    handleDelBatch() {\r\n      if (this.table.selectedRowKeys.length <= 0) {\r\n        this.$message.warning('请选择一条记录！')\r\n        return false\r\n      } else {\r\n        let ids = ''\r\n        let that = this\r\n        that.table.selectedRowKeys.forEach(function(val) {\r\n          ids += val + ','\r\n        })\r\n        that.$confirm({\r\n          title: '确认删除',\r\n          content: '是否删除选中数据?',\r\n          onOk: function() {\r\n            that.handleDelete(ids)\r\n            that.onClearSelected()\r\n          }\r\n        })\r\n      }\r\n    },\r\n\r\n    searchByquery() {\r\n      this.loadData(1)\r\n    },\r\n\r\n    searchReset() {\r\n      this.queryParam = {}\r\n      this.loadData(1)\r\n    },\r\n\r\n    handleToggleSearch() {\r\n      this.toggleSearchStatus = !this.toggleSearchStatus\r\n    },\r\n    getFormatDate(text) {\r\n      if (!text) {\r\n        return ''\r\n      }\r\n      let a = text\r\n      if (a.length > 10) {\r\n        a = a.substring(0, 10)\r\n      }\r\n      return a\r\n    },\r\n    getImportUrl() {\r\n      return '/online/cgform/api/importXls/' + this.code\r\n    },\r\n    initCgEnhanceJs(enhanceJs) {\r\n      //console.log(\"--onlineList-js增强\",enhanceJs)\r\n      if (enhanceJs) {\r\n        let Obj = eval('(' + enhanceJs + ')')\r\n        this.EnhanceJS = new Obj(getAction, postAction, deleteAction)\r\n        this.cgButtonJsHandler('created')\r\n      } else {\r\n        this.EnhanceJS = ''\r\n      }\r\n    },\r\n    initCgButtonList(btnList) {\r\n      let linkArr = []\r\n      let buttonArr = []\r\n      if (btnList && btnList.length > 0) {\r\n        for (let i = 0; i < btnList.length; i++) {\r\n          let temp = btnList[i]\r\n          if (temp.buttonStyle == 'button') {\r\n            buttonArr.push(temp)\r\n          } else if (temp.buttonStyle == 'link') {\r\n            linkArr.push(temp)\r\n          }\r\n        }\r\n      }\r\n      this.cgButtonLinkList = [...linkArr]\r\n      this.cgButtonList = [...buttonArr]\r\n    },\r\n    cgButtonJsHandler(buttonCode) {\r\n      if (this.EnhanceJS[buttonCode]) {\r\n        this.EnhanceJS[buttonCode](this)\r\n      }\r\n    },\r\n    cgButtonActionHandler(buttonCode) {\r\n      //处理自定义button的 需要配置该button自定义sql\r\n      if (!this.table.selectedRowKeys || this.table.selectedRowKeys.length == 0) {\r\n        this.$message.warning('请先选中一条记录')\r\n        return false\r\n      }\r\n      if (this.table.selectedRowKeys.length > 1) {\r\n        this.$message.warning('请只选中一条记录')\r\n        return false\r\n      }\r\n      let params = {\r\n        formId: this.code,\r\n        buttonCode: buttonCode,\r\n        dataId: this.table.selectedRowKeys[0]\r\n      }\r\n      console.log('自定义按钮请求后台参数：', params)\r\n      postAction(this.url.buttonAction, params).then(res => {\r\n        if (res.success) {\r\n          this.loadData()\r\n          this.$message.success('处理完成!')\r\n        } else {\r\n          this.$message.warning('处理失败!')\r\n        }\r\n      })\r\n    },\r\n    cgButtonLinkHandler(record, buttonCode, optType) {\r\n      if (optType == 'js') {\r\n        if (this.EnhanceJS[buttonCode]) {\r\n          this.EnhanceJS[buttonCode](this, record)\r\n        }\r\n      } else if (optType == 'action') {\r\n        let params = {\r\n          formId: this.code,\r\n          buttonCode: buttonCode,\r\n          dataId: record.id\r\n        }\r\n        console.log('自定义按钮link请求后台参数：', params)\r\n        postAction(this.url.buttonAction, params).then(res => {\r\n          if (res.success) {\r\n            this.loadData()\r\n            this.$message.success('处理完成!')\r\n          } else {\r\n            this.$message.warning('处理失败!')\r\n          }\r\n        })\r\n      }\r\n    },\r\n    initButtonSwitch(hideColumns) {\r\n      if (hideColumns && hideColumns.length > 0) {\r\n        Object.keys(this.buttonSwitch).forEach(key => {\r\n          if (hideColumns.indexOf(key) >= 0) {\r\n            this.buttonSwitch[key] = false\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["OnlCgformAutoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8QA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"OnlCgformAutoList.vue","sourceRoot":"src/views/modules/online/cgform/auto","sourcesContent":["<template>\r\n  <a-card :bordered=\"false\" style=\"height: 100%\">\r\n    <div class=\"table-page-search-wrapper\">\r\n      <a-form layout=\"inline\">\r\n        <a-row :gutter=\"24\" v-if=\"queryInfo && queryInfo.length>0\">\r\n          <template v-for=\"(item,index) in queryInfo\">\r\n            <template v-if=\" item.hidden==='1' \">\r\n              <a-col\r\n                v-if=\"item.view=='datetime'\"\r\n                :md=\"12\"\r\n                :sm=\"16\"\r\n                :key=\" 'query'+index \"\r\n                v-show=\"toggleSearchStatus\"\r\n              >\r\n                <online-query-form-item\r\n                  :queryParam=\"queryParam\"\r\n                  :item=\"item\"\r\n                  :dictOptions=\"dictOptions\"\r\n                ></online-query-form-item>\r\n              </a-col>\r\n              <a-col v-else :md=\"6\" :sm=\"8\" :key=\" 'query'+index \" v-show=\"toggleSearchStatus\">\r\n                <online-query-form-item\r\n                  :queryParam=\"queryParam\"\r\n                  :item=\"item\"\r\n                  :dictOptions=\"dictOptions\"\r\n                ></online-query-form-item>\r\n              </a-col>\r\n            </template>\r\n            <template v-else>\r\n              <a-col v-if=\"item.view=='datetime'\" :md=\"12\" :sm=\"16\" :key=\" 'query'+index \">\r\n                <online-query-form-item\r\n                  :queryParam=\"queryParam\"\r\n                  :item=\"item\"\r\n                  :dictOptions=\"dictOptions\"\r\n                ></online-query-form-item>\r\n              </a-col>\r\n              <a-col v-else :md=\"6\" :sm=\"8\" :key=\" 'query'+index \">\r\n                <online-query-form-item\r\n                  :queryParam=\"queryParam\"\r\n                  :item=\"item\"\r\n                  :dictOptions=\"dictOptions\"\r\n                ></online-query-form-item>\r\n              </a-col>\r\n            </template>\r\n          </template>\r\n\r\n          <a-col :md=\"6\" :sm=\"8\">\r\n            <span style=\"float: left;overflow: hidden;\" class=\"table-page-search-submitButtons\">\r\n              <a-button type=\"primary\" @click=\"searchByquery\" icon=\"search\">查询</a-button>\r\n              <a-button\r\n                type=\"primary\"\r\n                @click=\"searchReset\"\r\n                icon=\"reload\"\r\n                style=\"margin-left: 8px\"\r\n              >重置</a-button>\r\n              <a @click=\"handleToggleSearch\" style=\"margin-left: 8px\">\r\n                {{ toggleSearchStatus ? '收起' : '展开' }}\r\n                <a-icon :type=\"toggleSearchStatus ? 'up' : 'down'\" />\r\n              </a>\r\n            </span>\r\n          </a-col>\r\n        </a-row>\r\n      </a-form>\r\n    </div>\r\n\r\n    <!-- 操作按钮区域 -->\r\n    <div class=\"table-operator\">\r\n      <a-button v-if=\"buttonSwitch.add\" @click=\"handleAdd\" type=\"primary\" icon=\"plus\">新增</a-button>\r\n      <a-button\r\n        v-if=\"buttonSwitch.import\"\r\n        @click=\"handleImportXls\"\r\n        type=\"primary\"\r\n        icon=\"upload\"\r\n        style=\"margin-left:8px\"\r\n      >导入</a-button>\r\n      <a-button\r\n        v-if=\"buttonSwitch.export\"\r\n        @click=\"handleExportXls\"\r\n        type=\"primary\"\r\n        icon=\"download\"\r\n        style=\"margin-left:8px\"\r\n      >导出</a-button>\r\n      <template v-if=\"hasBpmStatus\">\r\n        <a-button @click=\"handleSubmitWF\" type=\"primary\" icon style=\"margin-left:8px\">提交审批</a-button>\r\n        <a-button @click=\"handleCancelWF\" type=\"primary\" icon style=\"margin-left:8px\">撤销审批</a-button>\r\n      </template>\r\n      <template v-if=\"cgButtonList && cgButtonList.length>0\" v-for=\"(item,index) in cgButtonList\">\r\n        <a-button\r\n          v-if=\" item.optType=='js' \"\r\n          :key=\" 'cgbtn'+index \"\r\n          @click=\"cgButtonJsHandler(item.buttonCode)\"\r\n          type=\"primary\"\r\n          :icon=\"item.buttonIcon\"\r\n          style=\"margin-left:8px\"\r\n        >{{ item.buttonName }}</a-button>\r\n        <a-button\r\n          v-else-if=\" item.optType=='action' \"\r\n          :key=\" 'cgbtn'+index \"\r\n          @click=\"cgButtonActionHandler(item.buttonCode)\"\r\n          type=\"primary\"\r\n          :icon=\"item.buttonIcon\"\r\n          style=\"margin-left:8px\"\r\n        >{{ item.buttonName }}</a-button>\r\n      </template>\r\n\r\n      <a-button\r\n        v-if=\"buttonSwitch.batch_delete\"\r\n        @click=\"handleDelBatch\"\r\n        style=\"margin-left:8px\"\r\n        v-show=\"table.selectedRowKeys.length > 0\"\r\n        ghost\r\n        type=\"primary\"\r\n        icon=\"delete\"\r\n      >删除</a-button>\r\n    </div>\r\n\r\n    <div>\r\n      <div class=\"ant-alert ant-alert-info\" style=\"margin-bottom: 16px;\">\r\n        <i class=\"anticon anticon-info-circle ant-alert-icon\"></i>\r\n        已选择&nbsp;\r\n        <a style=\"font-weight: 600\">{{ table.selectedRowKeys.length }}</a>项&nbsp;&nbsp;\r\n        <a style=\"margin-left: 24px\" @click=\"onClearSelected\">清空</a>\r\n      </div>\r\n\r\n      <a-table\r\n        ref=\"cgformAutoList\"\r\n        bordered\r\n        size=\"middle\"\r\n        rowKey=\"id\"\r\n        :columns=\"table.columns\"\r\n        :dataSource=\"table.dataSource\"\r\n        :pagination=\"table.pagination\"\r\n        :loading=\"table.loading\"\r\n        :rowSelection=\"{selectedRowKeys:table.selectedRowKeys, onChange: handleChangeInTableSelect}\"\r\n        @change=\"handleTableChange\"\r\n        style=\"min-height: 300px\"\r\n      >\r\n        <template slot=\"dateSlot\" slot-scope=\"text\">\r\n          <span>{{ getFormatDate(text) }}</span>\r\n        </template>\r\n\r\n        <template slot=\"htmlSlot\" slot-scope=\"text\">\r\n          <div v-html=\"text\"></div>\r\n        </template>\r\n\r\n        <template slot=\"imgSlot\" slot-scope=\"text\">\r\n          <span v-if=\"!text\" style=\"font-size: 12px;font-style: italic;\">无此图片</span>\r\n          <img\r\n            v-else\r\n            :src=\"getImgView(text)\"\r\n            height=\"25px\"\r\n            alt=\"图片不存在\"\r\n            style=\"max-width:80px;font-size: 12px;font-style: italic;\"\r\n          />\r\n        </template>\r\n\r\n        <template slot=\"fileSlot\" slot-scope=\"text\">\r\n          <span v-if=\"!text\" style=\"font-size: 12px;font-style: italic;\">无此文件</span>\r\n          <span v-else>\r\n            <a-button\r\n              type=\"primary\"\r\n              size=\"small\"\r\n              @click=\"uploadFile(text)\"\r\n              style=\"transform: scale(0.65,0.65);margin-left: -5px;margin-right: -5px;\"\r\n            >下载</a-button>\r\n            <a-button\r\n              type=\"primary\"\r\n              size=\"small\"\r\n              @click=\"viewFile(text)\"\r\n              style=\"transform: scale(0.65,0.65);margin-left: -5px;margin-right: -5px;\"\r\n            >预览</a-button>\r\n          </span>\r\n        </template>\r\n\r\n        <div slot=\"filterDropdown\">\r\n          <a-card>\r\n            <a-checkbox-group\r\n              @change=\"onColSettingsChange\"\r\n              v-model=\"columns\"\r\n              :defaultValue=\"columns\"\r\n            >\r\n              <a-row>\r\n                <template v-for=\"(item,index) in columns\">\r\n                  <template v-if=\"item.key!='rowIndex'&& item.dataIndex!='action'\">\r\n                    <a-col :span=\"12\">\r\n                      <a-checkbox :value=\"item.dataIndex\">{{ item.title }}</a-checkbox>\r\n                    </a-col>\r\n                  </template>\r\n                </template>\r\n              </a-row>\r\n            </a-checkbox-group>\r\n          </a-card>\r\n        </div>\r\n        <a-icon slot=\"filterIcon\" type=\"setting\" :style=\"{ fontSize:'16px',color:  '#108ee9' }\" />\r\n\r\n        <span slot=\"action\" slot-scope=\"text, record\">\r\n          <a-dropdown>\r\n            <a class=\"ant-dropdown-link\">\r\n              操作\r\n              <a-icon type=\"down\" />\r\n            </a>\r\n            <a-menu slot=\"overlay\">\r\n              <template v-if=\"hasBpmStatus\">\r\n                <template\r\n                  v-if=\"record.bpm_status == '1'||record.bpm_status == ''|| record.bpm_status == null\"\r\n                >\r\n                  <template v-if=\"buttonSwitch.update\">\r\n                    <a-menu-item>\r\n                      <a href=\"javascript:;\" @click=\"handleEdit(record)\">编辑</a>\r\n                    </a-menu-item>\r\n                  </template>\r\n                </template>\r\n                <a-menu-item>\r\n                  <a href=\"javascript:;\" @click=\"handleEdit(record)\">同意</a>\r\n                </a-menu-item>\r\n                <a-menu-item>\r\n                  <a href=\"javascript:;\" @click=\"handleEdit(record)\">驳回</a>\r\n                </a-menu-item>\r\n                <a-menu-item>\r\n                  <a href=\"javascript:;\" @click=\"handleEdit(record)\">撤销</a>\r\n                </a-menu-item>\r\n                <a-menu-item>\r\n                  <a href=\"javascript:;\" @click=\"handleEdit(record)\">终止</a>\r\n                </a-menu-item>\r\n              </template>\r\n              <template v-else>\r\n                <template v-if=\"buttonSwitch.update\">\r\n                  <a-menu-item>\r\n                    <a href=\"javascript:;\" @click=\"handleEdit(record)\">编辑</a>\r\n                  </a-menu-item>\r\n                </template>\r\n              </template>\r\n              <a-menu-item>\r\n                <a href=\"javascript:;\" @click=\"handleDetail(record)\">详情</a>\r\n              </a-menu-item>\r\n              <template v-if=\"hasBpmStatus\"></template>\r\n              <template v-else>\r\n                <a-menu-item v-if=\"buttonSwitch.delete\">\r\n                  <a-popconfirm title=\"确定删除吗?\" @confirm=\"() => handleDeleteOne(record)\">\r\n                    <a>删除</a>\r\n                  </a-popconfirm>\r\n                </a-menu-item>\r\n              </template>\r\n              <template\r\n                v-if=\"cgButtonLinkList && cgButtonLinkList.length>0\"\r\n                v-for=\"(btnItem,btnIndex) in cgButtonLinkList\"\r\n              >\r\n                <a-menu-item :key=\" 'cgbtnLink'+btnIndex \">\r\n                  <a\r\n                    href=\"javascript:void(0);\"\r\n                    @click=\"cgButtonLinkHandler(record,btnItem.buttonCode,btnItem.optType)\"\r\n                  >\r\n                    <a-icon v-if=\"btnItem.buttonIcon\" :type=\"btnItem.buttonIcon\" />\r\n                    {{ btnItem.buttonName }}\r\n                  </a>\r\n                </a-menu-item>\r\n              </template>\r\n            </a-menu>\r\n          </a-dropdown>\r\n        </span>\r\n      </a-table>\r\n\r\n      <OnlCgformAutoModal @success=\"handleFormSuccess\" ref=\"modal\" :code=\"code\"></OnlCgformAutoModal>\r\n\r\n      <j-import-modal ref=\"importModal\" :url=\"getImportUrl()\" @ok=\"importOk\"></j-import-modal>\r\n    </div>\r\n  </a-card>\r\n</template>\r\n\r\n<script>\r\nimport { postAction, getAction, deleteAction, downFile } from '@/api/manage'\r\nimport { filterMultiDictText } from '@/components/dict/JDictSelectUtil'\r\nimport { filterObj } from '@/utils/util'\r\nimport JImportModal from '@/components/jeecg/JImportModal'\r\n\r\nexport default {\r\n  name: 'OnlCgFormAutoList',\r\n  components: {\r\n    JImportModal\r\n  },\r\n  data() {\r\n    return {\r\n      code: '',\r\n      description: '在线报表',\r\n      currentTableName: '',\r\n      url: {\r\n        getQueryInfo: '/online/cgform/api/getQueryInfo/',\r\n        getColumns: '/online/cgform/api/getColumns/',\r\n        getData: '/online/cgform/api/getData/',\r\n        optPre: '/online/cgform/api/form/',\r\n        exportXls: '/online/cgform/api/exportXls/',\r\n        buttonAction: '/online/cgform/api/doButton'\r\n      },\r\n      flowCodePre: 'onl_',\r\n      isorter: {\r\n        column: 'createTime',\r\n        order: 'desc'\r\n      },\r\n      //dictOptions:{fieldName:[]}\r\n      dictOptions: {},\r\n      cgButtonLinkList: [],\r\n      cgButtonList: [],\r\n      queryInfo: [],\r\n      queryParam: {},\r\n      toggleSearchStatus: false,\r\n      table: {\r\n        loading: true,\r\n        // 表头\r\n        columns: [],\r\n        //列设置\r\n        settingColumns: [],\r\n        //defColumns: columns,\r\n        //数据集\r\n        dataSource: [],\r\n        // 选择器\r\n        selectedRowKeys: [],\r\n        selectionRows: [],\r\n        // 分页参数\r\n        pagination: {\r\n          current: 1,\r\n          pageSize: 20,\r\n          pageSizeOptions: ['10', '20', '30'],\r\n          showTotal: (total, range) => {\r\n            return range[0] + '-' + range[1] + ' 共' + total + '条'\r\n          },\r\n          showQuickJumper: true,\r\n          showSizeChanger: true,\r\n          total: 0\r\n        }\r\n      },\r\n      actionColumn: {\r\n        title: '操作',\r\n        dataIndex: 'action',\r\n        scopedSlots: {\r\n          //filterDropdown: 'filterDropdown',\r\n          //filterIcon: 'filterIcon',\r\n          customRender: 'action'\r\n        },\r\n        fixed: 'right',\r\n        align: 'center',\r\n        width: 150\r\n      },\r\n      formTemplate: '99',\r\n      EnhanceJS: '',\r\n      hideColumns: [],\r\n      buttonSwitch: {\r\n        add: true,\r\n        update: true,\r\n        delete: true,\r\n        batch_delete: true,\r\n        import: true,\r\n        export: true\r\n      },\r\n      hasBpmStatus: false\r\n    }\r\n  },\r\n  created() {\r\n    this.initAutoList()\r\n  },\r\n  mounted() {\r\n    this.cgButtonJsHandler('mounted')\r\n  },\r\n  watch: {\r\n    $route() {\r\n      // 刷新参数放到这里去触发，就可以刷新相同界面了\r\n      this.initAutoList()\r\n    }\r\n  },\r\n  methods: {\r\n    hasBpmStatusFilter() {\r\n      var columnObjs = this.table.columns\r\n      let columns = []\r\n      for (var item of columnObjs) {\r\n        columns.push(item.dataIndex)\r\n      }\r\n      if (columns.includes('bpm_status') || columns.includes('BPM_STATUS')) {\r\n        this.hasBpmStatus = true\r\n      } else {\r\n        this.hasBpmStatus = false\r\n      }\r\n    },\r\n    initQueryInfo() {\r\n      getAction(`${this.url.getQueryInfo}${this.code}`).then(res => {\r\n        console.log('--onlineList-获取查询条件配置', res)\r\n        if (res.success) {\r\n          this.queryInfo = res.result\r\n        } else {\r\n          this.$message.warning(res.message)\r\n        }\r\n      })\r\n    },\r\n    initAutoList() {\r\n      if (!this.$route.params.code) {\r\n        return false\r\n      }\r\n      this.table.loading = true\r\n      this.code = this.$route.params.code\r\n      getAction(`${this.url.getColumns}${this.code}`).then(res => {\r\n        console.log('--onlineList-加载动态列>>', res)\r\n        if (res.success) {\r\n          this.dictOptions = res.result.dictOptions\r\n          this.formTemplate = res.result.formTemplate\r\n          this.description = res.result.description\r\n          this.currentTableName = res.result.currentTableName\r\n          this.initCgButtonList(res.result.cgButtonList)\r\n          this.initCgEnhanceJs(res.result.enhanceJs)\r\n          this.initButtonSwitch(res.result.hideColumns)\r\n          let currColumns = res.result.columns\r\n          for (let a = 0; a < currColumns.length; a++) {\r\n            if (currColumns[a].customRender) {\r\n              let dictCode = currColumns[a].customRender\r\n              currColumns[a].customRender = text => {\r\n                return filterMultiDictText(this.dictOptions[dictCode], text)\r\n              }\r\n            }\r\n          }\r\n          currColumns.push(this.actionColumn)\r\n          this.table.columns = [...currColumns]\r\n          this.hasBpmStatusFilter()\r\n          this.loadData()\r\n          this.initQueryInfo()\r\n        } else {\r\n          this.$message.warning(res.message)\r\n        }\r\n      })\r\n    },\r\n    loadData(arg) {\r\n      if (arg == 1) {\r\n        this.table.pagination.current = 1\r\n      }\r\n      let params = this.getQueryParams() //查询条件\r\n      console.log('--onlineList-查询条件-->', params)\r\n      getAction(`${this.url.getData}${this.code}`, params).then(res => {\r\n        console.log('--onlineList-列表数据', res)\r\n        if (res.success) {\r\n          let result = res.result\r\n          if (Number(result.total) > 0) {\r\n            this.table.pagination.total = Number(result.total)\r\n            this.table.dataSource = result.records\r\n          } else {\r\n            this.table.pagination.total = 0\r\n            this.table.dataSource = []\r\n            //this.$message.warning(\"查无数据\")\r\n          }\r\n        } else {\r\n          this.$message.warning(res.message)\r\n        }\r\n        this.table.loading = false\r\n      })\r\n    },\r\n    getQueryParams() {\r\n      let param = Object.assign({}, this.queryParam, this.isorter)\r\n      param.pageNo = this.table.pagination.current\r\n      param.pageSize = this.table.pagination.pageSize\r\n      return filterObj(param)\r\n    },\r\n    handleChangeInTableSelect(selectedRowKeys, selectionRows) {\r\n      this.table.selectedRowKeys = selectedRowKeys\r\n      this.table.selectionRows = selectionRows\r\n    },\r\n    handleTableChange(pagination, filters, sorter) {\r\n      //TODO 筛选\r\n      if (Object.keys(sorter).length > 0) {\r\n        this.isorter.column = sorter.field\r\n        this.isorter.order = 'ascend' == sorter.order ? 'asc' : 'desc'\r\n      }\r\n      this.table.pagination = pagination\r\n      this.loadData()\r\n    },\r\n    handleAdd() {\r\n      this.cgButtonJsHandler('beforeAdd')\r\n      this.$refs.modal.add(this.formTemplate)\r\n    },\r\n    handleImportXls() {\r\n      this.$refs.importModal.show()\r\n    },\r\n    importOk() {\r\n      this.loadData(1)\r\n    },\r\n    handleExportXls2() {\r\n      let param = this.queryParam\r\n      if (this.table.selectedRowKeys && this.table.selectedRowKeys.length > 0) {\r\n        param['selections'] = this.table.selectedRowKeys.join(',')\r\n      }\r\n      let paramsStr = encodeURI(JSON.stringify(param))\r\n      console.log('paramsStr: ' + paramsStr)\r\n      let url = window._CONFIG['domianURL'] + this.url.exportXls + this.code + '?paramsStr=' + paramsStr\r\n      window.location.href = url\r\n    },\r\n    handleExportXls() {\r\n      let param = this.queryParam\r\n      if (this.table.selectedRowKeys && this.table.selectedRowKeys.length > 0) {\r\n        param['selections'] = this.table.selectedRowKeys.join(',')\r\n      }\r\n      console.log('导出参数', param)\r\n      let paramsStr = JSON.stringify(filterObj(param))\r\n      downFile(this.url.exportXls + this.code, { paramsStr: paramsStr }).then(data => {\r\n        if (!data) {\r\n          this.$message.warning('文件下载失败')\r\n          return\r\n        }\r\n        if (typeof window.navigator.msSaveBlob !== 'undefined') {\r\n          window.navigator.msSaveBlob(new Blob([data]), this.description + '.xls')\r\n        } else {\r\n          let url = window.URL.createObjectURL(new Blob([data]))\r\n          let link = document.createElement('a')\r\n          link.style.display = 'none'\r\n          link.href = url\r\n          link.setAttribute('download', this.description + '.xls')\r\n          document.body.appendChild(link)\r\n          link.click()\r\n          document.body.removeChild(link) //下载完成移除元素\r\n          window.URL.revokeObjectURL(url) //释放掉blob对象\r\n        }\r\n      })\r\n    },\r\n    handleEdit(record) {\r\n      this.cgButtonLinkHandler(record, 'beforeEdit', 'js')\r\n      this.$refs.modal.edit(this.formTemplate, record.id)\r\n    },\r\n    handleDetail(record) {\r\n      this.$refs.modal.detail(this.formTemplate, record.id)\r\n    },\r\n    handleDeleteOne(record) {\r\n      this.cgButtonLinkHandler(record, 'beforeDelete', 'js')\r\n      this.handleDelete(record.id)\r\n    },\r\n    handleDelete(id) {\r\n      deleteAction(this.url.optPre + this.code + '/' + id).then(res => {\r\n        if (res.success) {\r\n          this.$message.success(res.message)\r\n          this.loadData()\r\n        } else {\r\n          this.$message.warning(res.message)\r\n        }\r\n      })\r\n    },\r\n\r\n    handleFormSuccess() {\r\n      this.loadData()\r\n    },\r\n\r\n    onClearSelected() {\r\n      this.table.selectedRowKeys = []\r\n      this.table.selectionRows = []\r\n    },\r\n\r\n    getImgView(text) {\r\n      if (text && text.indexOf(',') > 0) {\r\n        text = text.substring(0, text.indexOf(','))\r\n      }\r\n      return window._CONFIG['downloadURL'] + '/' + text\r\n    },\r\n\r\n    uploadFile(text) {\r\n      if (!text) {\r\n        this.$message.warning('未知的文件')\r\n        return\r\n      }\r\n      if (text.indexOf(',') > 0) {\r\n        text = text.substring(0, text.indexOf(','))\r\n      }\r\n      console.log(text)\r\n      window.open(window._CONFIG['downloadURL'] + '/' + text) //TODO 下载的方法\r\n    },\r\n\r\n    viewFile(text) {\r\n      if (!text) {\r\n        this.$message.warning('未知的文件')\r\n        return\r\n      }\r\n      if (text.indexOf(',') > 0) {\r\n        text = text.substring(0, text.indexOf(','))\r\n      }\r\n      let officeURL = 'https://view.officeapps.live.com/op/view.aspx?src='\r\n      let idocvURL = ''\r\n      let url = window._CONFIG['downloadURL'] + '/' + text\r\n      let suffix = text.substring(text.lastIndexOf('.'), text.length).toLowerCase()\r\n      //如果word文档，则使用微软API打开\r\n      url = suffix.includes('doc') || suffix.includes('ppt') || suffix.includes('xls') ? officeURL + url : url\r\n      //如果pdf文档，则浏览器上直接打开\r\n      url = suffix.includes('pdf') ? idocvURL + url : url\r\n      //浏览器打开预览\r\n      window.open(url)\r\n    },\r\n\r\n    handleDelBatch() {\r\n      if (this.table.selectedRowKeys.length <= 0) {\r\n        this.$message.warning('请选择一条记录！')\r\n        return false\r\n      } else {\r\n        let ids = ''\r\n        let that = this\r\n        that.table.selectedRowKeys.forEach(function(val) {\r\n          ids += val + ','\r\n        })\r\n        that.$confirm({\r\n          title: '确认删除',\r\n          content: '是否删除选中数据?',\r\n          onOk: function() {\r\n            that.handleDelete(ids)\r\n            that.onClearSelected()\r\n          }\r\n        })\r\n      }\r\n    },\r\n\r\n    searchByquery() {\r\n      this.loadData(1)\r\n    },\r\n\r\n    searchReset() {\r\n      this.queryParam = {}\r\n      this.loadData(1)\r\n    },\r\n\r\n    handleToggleSearch() {\r\n      this.toggleSearchStatus = !this.toggleSearchStatus\r\n    },\r\n    getFormatDate(text) {\r\n      if (!text) {\r\n        return ''\r\n      }\r\n      let a = text\r\n      if (a.length > 10) {\r\n        a = a.substring(0, 10)\r\n      }\r\n      return a\r\n    },\r\n    getImportUrl() {\r\n      return '/online/cgform/api/importXls/' + this.code\r\n    },\r\n    initCgEnhanceJs(enhanceJs) {\r\n      //console.log(\"--onlineList-js增强\",enhanceJs)\r\n      if (enhanceJs) {\r\n        let Obj = eval('(' + enhanceJs + ')')\r\n        this.EnhanceJS = new Obj(getAction, postAction, deleteAction)\r\n        this.cgButtonJsHandler('created')\r\n      } else {\r\n        this.EnhanceJS = ''\r\n      }\r\n    },\r\n    initCgButtonList(btnList) {\r\n      let linkArr = []\r\n      let buttonArr = []\r\n      if (btnList && btnList.length > 0) {\r\n        for (let i = 0; i < btnList.length; i++) {\r\n          let temp = btnList[i]\r\n          if (temp.buttonStyle == 'button') {\r\n            buttonArr.push(temp)\r\n          } else if (temp.buttonStyle == 'link') {\r\n            linkArr.push(temp)\r\n          }\r\n        }\r\n      }\r\n      this.cgButtonLinkList = [...linkArr]\r\n      this.cgButtonList = [...buttonArr]\r\n    },\r\n    cgButtonJsHandler(buttonCode) {\r\n      if (this.EnhanceJS[buttonCode]) {\r\n        this.EnhanceJS[buttonCode](this)\r\n      }\r\n    },\r\n    cgButtonActionHandler(buttonCode) {\r\n      //处理自定义button的 需要配置该button自定义sql\r\n      if (!this.table.selectedRowKeys || this.table.selectedRowKeys.length == 0) {\r\n        this.$message.warning('请先选中一条记录')\r\n        return false\r\n      }\r\n      if (this.table.selectedRowKeys.length > 1) {\r\n        this.$message.warning('请只选中一条记录')\r\n        return false\r\n      }\r\n      let params = {\r\n        formId: this.code,\r\n        buttonCode: buttonCode,\r\n        dataId: this.table.selectedRowKeys[0]\r\n      }\r\n      console.log('自定义按钮请求后台参数：', params)\r\n      postAction(this.url.buttonAction, params).then(res => {\r\n        if (res.success) {\r\n          this.loadData()\r\n          this.$message.success('处理完成!')\r\n        } else {\r\n          this.$message.warning('处理失败!')\r\n        }\r\n      })\r\n    },\r\n    cgButtonLinkHandler(record, buttonCode, optType) {\r\n      if (optType == 'js') {\r\n        if (this.EnhanceJS[buttonCode]) {\r\n          this.EnhanceJS[buttonCode](this, record)\r\n        }\r\n      } else if (optType == 'action') {\r\n        let params = {\r\n          formId: this.code,\r\n          buttonCode: buttonCode,\r\n          dataId: record.id\r\n        }\r\n        console.log('自定义按钮link请求后台参数：', params)\r\n        postAction(this.url.buttonAction, params).then(res => {\r\n          if (res.success) {\r\n            this.loadData()\r\n            this.$message.success('处理完成!')\r\n          } else {\r\n            this.$message.warning('处理失败!')\r\n          }\r\n        })\r\n      }\r\n    },\r\n    initButtonSwitch(hideColumns) {\r\n      if (hideColumns && hideColumns.length > 0) {\r\n        Object.keys(this.buttonSwitch).forEach(key => {\r\n          if (hideColumns.indexOf(key) >= 0) {\r\n            this.buttonSwitch[key] = false\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style>\r\n.ant-card-body .table-operator {\r\n  margin-bottom: 18px;\r\n}\r\n.ant-table-tbody .ant-table-row td {\r\n  padding-top: 15px;\r\n  padding-bottom: 15px;\r\n}\r\n.anty-row-operator button {\r\n  margin: 0 5px;\r\n}\r\n.ant-btn-danger {\r\n  background-color: #ffffff;\r\n}\r\n\r\n.anty-img-wrap {\r\n  height: 25px;\r\n  position: relative;\r\n}\r\n.anty-img-wrap > img {\r\n  max-height: 100%;\r\n}\r\n.ant-modal-cust-warp {\r\n  height: 100%;\r\n}\r\n.ant-modal-cust-warp .ant-modal-body {\r\n  height: calc(100% - 110px) !important;\r\n  overflow-y: auto;\r\n}\r\n.ant-modal-cust-warp .ant-modal-content {\r\n  height: 90% !important;\r\n  overflow-y: hidden;\r\n}\r\n</style>"]}]}