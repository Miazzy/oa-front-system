{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/jeecg/SelectDemo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/jeecg/SelectDemo.vue","mtime":1571018558920},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n  import JDictSelectTag from '../../components/dict/JDictSelectTag.vue'\n  import JSelectDepart from '@/components/jeecgbiz/JSelectDepart'\n  import JSelectUserByDep from '@/components/jeecgbiz/JSelectUserByDep'\n  import JSelectMultiUser from '@/components/jeecgbiz/JSelectMultiUser'\n  import JCheckbox from '@/components/jeecg/JCheckbox'\n  import JCodeEditor from '@/components/jeecg/JCodeEditor'\n  import JDate from '@/components/jeecg/JDate'\n  import JEditor from '@/components/jeecg/JEditor'\n  import JEllipsis from '@/components/jeecg/JEllipsis'\n  import JGraphicCode from '@/components/jeecg/JGraphicCode'\n  import JSlider from '@/components/jeecg/JSlider'\n  import JSelectMultiple from '@/components/jeecg/JSelectMultiple'\n  import JTreeDict from \"../../components/jeecg/JTreeDict.vue\";\n  import JCron from \"@/components/jeecg/JCron.vue\";\n  export default {\n    name: 'SelectDemo',\n    components: {\n      JTreeDict,\n      JDictSelectTag,\n      JSelectDepart,\n      JSelectUserByDep,\n      JSelectMultiUser,\n      JCheckbox,\n      JCodeEditor,\n      JDate, JEditor, JEllipsis, JGraphicCode, JSlider, JSelectMultiple,\n      JCron\n    },\n    data() {\n      return {\n        selectList: [],\n        selectedDepUsers: '',\n        formData:{},\n        form: this.$form.createForm(this),\n        departId: '4f1765520d6346f9bd9c79e2479e5b12,57197590443c44f083d42ae24ef26a2c',\n        userRealName: '',\n        multiUser: '',\n        jcheckbox: {\n          values: 'spring,jeecgboot',\n          options: [\n            { label: 'Jeecg', value: 'jeecg' },\n            { label: 'Jeecg-Boot', value: 'jeecgboot' },\n            { label: 'Spring', value: 'spring', disabled: true },\n            { label: 'MyBaits', value: 'mybatis' }\n          ]\n        },\n        jcodedditor: {\n          value: `function sayHi(word) {\n  alert(word)\n}\nsayHi('hello, world!')`\n        },\n        jdate: {\n          value: '2019-5-10 15:33:06'\n        },\n        jeditor: {\n          value: '<h2 style=\"text-align: center;\">富文本编辑器</h2> <p>这里是富文本编辑器。</p>'\n        },\n        jellipsis: {\n          value: '这是一串很长很长的文字段落。这是一串很长很长的文字段落。这是一串很长很长的文字段落。这是一串很长很长的文字段落。'\n        },\n        jgraphicCode: {\n          value: ''\n        },\n        jslider: {\n          value: false\n        },\n        jselectMultiple: {\n          options: [\n            { text: '字符串', value: 'String' },\n            { text: '整数型', value: 'Integer' },\n            { text: '浮点型', value: 'Double' },\n            { text: '布尔型', value: 'Boolean' }\n          ],\n          value: 'Integer,Boolean'\n        },\n        modal: {\n          title: '这里是标题',\n          visible: false,\n          width: '100%',\n          style: { top: '20px' },\n          fullScreen: true\n        },\n        cron: '',\n      }\n    },\n    computed: {\n      nameList: function() {\n\n        var names = []\n        for (var a = 0; a < this.selectList.length; a++) {\n          names.push(this.selectList[a].name)\n        }\n        return names\n      }\n    },\n    methods: {\n      handleChange() {\n      },\n      getDepartIdValue() {\n        return this.form.getFieldValue('departId')\n      },\n      selectOK: function(data) {\n        this.selectList = data\n      },\n      handleSelect: function() {\n        this.$refs.selectDemoModal.add()\n      },\n      selectReset() {\n        this.selectList = []\n      },\n      //通过组织机构筛选选择用户\n      onSearchDepUser() {\n        this.$refs.JSearchUserByDep.showModal()\n        this.selectedDepUsers = ''\n        this.$refs.JSearchUserByDep.title = '根据部门查询用户'\n      },\n      onSearchDepUserCallBack(selectedDepUsers) {\n        this.selectedDepUsers = selectedDepUsers\n      },\n      generateCode(value) {\n        this.jgraphicCode.value = value.toLowerCase()\n      },\n      handleJSliderSuccess(value) {\n        this.jslider.value = value\n      },\n      /** 切换全屏显示 */\n      handleClickToggleFullScreen() {\n        let mode = !this.modal.fullScreen\n        if (mode) {\n          this.modal.width = '100%'\n          this.modal.style.top = '20px'\n        } else {\n          this.modal.width = '1200px'\n          this.modal.style.top = '50px'\n        }\n        this.modal.fullScreen = mode\n      },\n      setCorn(data){\n\n        this.$nextTick(() => {\n          this.form.cronExpression = data;\n        })\n      }\n    }\n  }\n",null]}