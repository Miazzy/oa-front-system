{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/jeecg/JUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/jeecg/JUpload.vue","mtime":1572486784814},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Vue from 'vue'\r\nimport { ACCESS_TOKEN } from '@/store/mutation-types'\r\n\r\nconst FILE_TYPE_ALL = 'all'\r\nconst FILE_TYPE_IMG = 'image'\r\nconst FILE_TYPE_TXT = 'file'\r\nconst uidGenerator = () => {\r\n  return '-' + parseInt(Math.random() * 10000 + 1, 10)\r\n}\r\nconst getFileName = path => {\r\n  if (path.lastIndexOf('\\\\') >= 0) {\r\n    let reg = new RegExp('\\\\\\\\', 'g')\r\n    path = path.replace(reg, '/')\r\n  }\r\n  return path.substring(path.lastIndexOf('/') + 1)\r\n}\r\nexport default {\r\n  name: 'JUpload',\r\n  data() {\r\n    return {\r\n      uploadAction: window._CONFIG['domianURL'] + '/sys/common/upload',\r\n      urlDownload: window._CONFIG['downloadURL'] + '/',\r\n      headers: {},\r\n      fileList: []\r\n    }\r\n  },\r\n  props: {\r\n    text: {\r\n      type: String,\r\n      required: false,\r\n      default: '点击上传'\r\n    },\r\n    fileType: {\r\n      type: String,\r\n      required: false,\r\n      default: FILE_TYPE_ALL\r\n    },\r\n    /*这个属性用于控制文件上传的业务路径*/\r\n    bizPath: {\r\n      type: String,\r\n      required: false,\r\n      default: 'temp'\r\n    },\r\n    value: {\r\n      type: String,\r\n      required: false\r\n    },\r\n    //此属性被废弃了\r\n    triggerChange: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false\r\n    }\r\n  },\r\n  watch: {\r\n    value(val) {\r\n      console.log(' fileList : ' + val)\r\n      this.initFileList(val)\r\n    }\r\n  },\r\n  created() {\r\n    const token = Vue.ls.get(ACCESS_TOKEN)\r\n    this.headers = { 'X-Access-Token': token }\r\n  },\r\n\r\n  methods: {\r\n    initFileList(paths) {\r\n      if (!paths || paths.length == 0) {\r\n        //return [];\r\n        // update-begin- --- author:os_chengtgen ------ date:20190729 ---- for:issues:326,Jupload组件初始化bug\r\n        this.fileList = []\r\n        return\r\n        // update-end- --- author:os_chengtgen ------ date:20190729 ---- for:issues:326,Jupload组件初始化bug\r\n      }\r\n      let fileList = []\r\n      let arr = paths.split(',')\r\n      for (var a = 0; a < arr.length; a++) {\r\n        fileList.push({\r\n          uid: uidGenerator(),\r\n          name: getFileName(arr[a]),\r\n          status: 'done',\r\n          url: this.urlDownload + arr[a],\r\n          response: {\r\n            status: 'history',\r\n            message: arr[a]\r\n          }\r\n        })\r\n      }\r\n      this.fileList = fileList\r\n    },\r\n    handlePathChange() {\r\n      let uploadFiles = this.fileList\r\n      let path = ''\r\n      if (!uploadFiles || uploadFiles.length == 0) {\r\n        path = ''\r\n      }\r\n      let arr = []\r\n\r\n      for (var a = 0; a < uploadFiles.length; a++) {\r\n        arr.push(uploadFiles[a].response.message)\r\n      }\r\n      if (arr.length > 0) {\r\n        path = arr.join(',')\r\n      }\r\n      this.$emit('change', path)\r\n    },\r\n    beforeUpload(file) {\r\n      var fileType = file.type\r\n      if (fileType === FILE_TYPE_IMG) {\r\n        if (fileType.indexOf('image') < 0) {\r\n          this.$message.warning('请上传图片')\r\n          return false\r\n        }\r\n      } else if (fileType === FILE_TYPE_TXT) {\r\n        if (fileType.indexOf('image') >= 0) {\r\n          this.$message.warning('请上传文件')\r\n          return false\r\n        }\r\n      }\r\n      //TODO 扩展功能验证文件大小\r\n      return true\r\n    },\r\n    handleChange(info) {\r\n      console.log('--文件列表改变--')\r\n      let fileList = info.fileList\r\n      if (info.file.status === 'done') {\r\n        if (info.file.response.success) {\r\n          fileList = fileList.map(file => {\r\n            if (file.response) {\r\n              file.url = this.urlDownload + file.response.message\r\n            }\r\n            return file\r\n          })\r\n        }\r\n        this.$message.success(`${info.file.name} 上传成功!`)\r\n      } else if (info.file.status === 'error') {\r\n        this.$message.error(`${info.file.name} 上传失败.`)\r\n      } else if (info.file.status === 'removed') {\r\n        this.handleDelete(info.file)\r\n      }\r\n      this.fileList = fileList\r\n      if (info.file.status === 'done' || info.file.status === 'removed') {\r\n        this.handlePathChange()\r\n      }\r\n    },\r\n    handleDelete(file) {\r\n      //如有需要新增 删除逻辑\r\n      console.log(file)\r\n    }\r\n  },\r\n  model: {\r\n    prop: 'value',\r\n    event: 'change'\r\n  }\r\n}\r\n",null]}