{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/jeecg/modules/VueCronModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/jeecg/modules/VueCronModal.vue","mtime":1571018558923},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport pick from 'lodash.pick'\nexport default {\n    name:'VueCron',\n    props:['data','i18n'],\n    data(){\n        return {\n            visible: false,\n            confirmLoading:false,\n            size:'large',\n            weekDays:['天','一','二','三','四','五','六'].map(val=>'星期'+val),\n            result: {\n              second:{\n                cronEvery:'',\n                incrementStart:3,\n                incrementIncrement:5,\n                rangeStart:1,\n                rangeEnd:0,\n                specificSpecific:[],\n              },\n              minute:{\n                cronEvery:'',\n                incrementStart:3,\n                incrementIncrement:5,\n                rangeStart:1,\n                rangeEnd:'0',\n                specificSpecific:[],\n              },\n              hour:{\n                cronEvery:'',\n                incrementStart:3,\n                incrementIncrement:5,\n                rangeStart:'0',\n                rangeEnd:'0',\n                specificSpecific:[],\n              },\n              day:{\n                cronEvery:'',\n                incrementStart:1,\n                incrementIncrement:'1',\n                rangeStart:'',\n                rangeEnd:'',\n                specificSpecific:[],\n                cronLastSpecificDomDay:1,\n                cronDaysBeforeEomMinus:'',\n                cronDaysNearestWeekday:'',\n              },\n              week:{\n                cronEvery:'',\n                incrementStart:1,\n                incrementIncrement:'1',\n                specificSpecific:[],\n                cronNthDayDay:1,\n                cronNthDayNth:'1',\n              },\n              month:{\n                cronEvery:'',\n                incrementStart:3,\n                incrementIncrement:5,\n                rangeStart:1,\n                rangeEnd:1,\n                specificSpecific:[],\n              },\n              year:{\n                cronEvery:'',\n                incrementStart:2017,\n                incrementIncrement:1,\n                rangeStart:2019,\n                rangeEnd: 2019,\n                specificSpecific:[],\n              },\n              label:''\n            },\n            output:{\n              second:{\n                cronEvery:'',\n                incrementStart:'',\n                incrementIncrement:'',\n                rangeStart:'',\n                rangeEnd:'',\n                specificSpecific:[],\n              },\n              minute:{\n                cronEvery:'',\n                incrementStart:'',\n                incrementIncrement:'',\n                rangeStart:'',\n                rangeEnd:'',\n                specificSpecific:[],\n              },\n              hour:{\n                cronEvery:'',\n                incrementStart:'',\n                incrementIncrement:'',\n                rangeStart:'',\n                rangeEnd:'',\n                specificSpecific:[],\n              },\n              day:{\n                cronEvery:'',\n                incrementStart:'',\n                incrementIncrement:'',\n                rangeStart:'',\n                rangeEnd:'',\n                specificSpecific:[],\n                cronLastSpecificDomDay:'',\n                cronDaysBeforeEomMinus:'',\n                cronDaysNearestWeekday:'',\n              },\n              week:{\n                cronEvery:'',\n                incrementStart:'',\n                incrementIncrement:'',\n                specificSpecific:[],\n                cronNthDayDay:'',\n                cronNthDayNth:'',\n              },\n              month:{\n                cronEvery:'',\n                incrementStart:'',\n                incrementIncrement:'',\n                rangeStart:'',\n                rangeEnd:'',\n                specificSpecific:[],\n              },\n              year:{\n                cronEvery:'',\n                incrementStart:'',\n                incrementIncrement:'',\n                rangeStart:'',\n                rangeEnd:'',\n                specificSpecific:[],\n              }\n            }\n        }\n    },\n    computed: {\n        modalWidth(){\n            return 608;\n        },\n        text(){\n            return Language['cn']\n        },\n        secondsText() {\n            let seconds = '';\n            let cronEvery=this.result.second.cronEvery;\n            switch (cronEvery.toString()){\n                case '1':\n                    seconds = '*';\n                    break;\n                case '2':\n                    seconds = this.result.second.incrementStart+'/'+this.result.second.incrementIncrement;\n                    break;\n                case '3':\n                    this.result.second.specificSpecific.map(val=> {seconds += val+','});\n                    seconds = seconds.slice(0, -1);\n                    break;\n                case '4':\n                    seconds = this.result.second.rangeStart+'-'+this.result.second.rangeEnd;\n                    break;\n            }\n            return seconds;\n        },\n        minutesText() {\n            let minutes = '';\n            let cronEvery=this.result.minute.cronEvery;\n            switch (cronEvery.toString()){\n                case '1':\n                    minutes = '*';\n                    break;\n                case '2':\n                    minutes = this.result.minute.incrementStart+'/'+this.result.minute.incrementIncrement;\n                    break;\n                case '3':\n                    this.result.minute.specificSpecific.map(val=> {\n                        minutes += val+','\n                    });\n                    minutes = minutes.slice(0, -1);\n                    break;\n                case '4':\n                    minutes = this.result.minute.rangeStart+'-'+this.result.minute.rangeEnd;\n                    break;\n            }\n            return minutes;\n        },\n        hoursText() {\n            let hours = '';\n            let cronEvery=this.result.hour.cronEvery;\n            switch (cronEvery.toString()){\n                case '1':\n                    hours = '*';\n                    break;\n                case '2':\n                    hours = this.result.hour.incrementStart+'/'+this.result.hour.incrementIncrement;\n                    break;\n                case '3':\n                    this.result.hour.specificSpecific.map(val=> {\n                        hours += val+','\n                    });\n                    hours = hours.slice(0, -1);\n                    break;\n                case '4':\n                    hours = this.result.hour.rangeStart+'-'+this.result.hour.rangeEnd;\n                    break;\n            }\n            return hours;\n        },\n        daysText() {\n            let days='';\n            let cronEvery=this.result.day.cronEvery;\n            switch (cronEvery.toString()){\n                case '1':\n                    break;\n                case '2':\n                case '4':\n                case '11':\n                    days = '?';\n                    break;\n                case '3':\n                    days = this.result.day.incrementStart+'/'+this.result.day.incrementIncrement;\n                    break;\n                case '5':\n                    this.result.day.specificSpecific.map(val=> {\n                        days += val+','\n                    });\n                    days = days.slice(0, -1);\n                    break;\n                case '6':\n                    days = \"L\";\n                    break;\n                case '7':\n                    days = \"LW\";\n                    break;\n                case '8':\n                    days = this.result.day.cronLastSpecificDomDay + 'L';\n                    break;\n                case '9':\n                    days = 'L-' + this.result.day.cronDaysBeforeEomMinus;\n                    break;\n                case '10':\n                    days = this.result.day.cronDaysNearestWeekday+\"W\";\n                    break\n            }\n            return days;\n        },\n        weeksText() {\n            let weeks = '';\n            let cronEvery=this.result.day.cronEvery;\n            switch (cronEvery.toString()){\n                case '1':\n                case '3':\n                case '5':\n                    weeks = '?';\n                    break;\n                case '2':\n                    weeks = this.result.week.incrementStart+'/'+this.result.week.incrementIncrement;\n                    break;\n                case '4':\n                    this.result.week.specificSpecific.map(val=> {\n                        weeks += val+','\n                    });\n                    weeks = weeks.slice(0, -1);\n                    break;\n                case '6':\n                case '7':\n                case '8':\n                case '9':\n                case '10':\n                    weeks = \"?\";\n                    break;\n                case '11':\n                    weeks = this.result.week.cronNthDayDay+\"#\"+this.result.week.cronNthDayNth;\n                    break;\n            }\n            return weeks;\n        },\n        monthsText() {\n            let months = '';\n            let cronEvery=this.result.month.cronEvery;\n            switch (cronEvery.toString()){\n                case '1':\n                    months = '*';\n                    break;\n                case '2':\n                    months = this.result.month.incrementStart+'/'+this.result.month.incrementIncrement;\n                    break;\n                case '3':\n                    this.result.month.specificSpecific.map(val=> {\n                        months += val+','\n                    });\n                    months = months.slice(0, -1);\n                    break;\n                case '4':\n                    months = this.result.month.rangeStart+'-'+this.result.month.rangeEnd;\n                    break;\n            }\n            return months;\n        },\n        yearsText() {\n            let years = '';\n            let cronEvery=this.result.year.cronEvery;\n            switch (cronEvery.toString()){\n                case '1':\n                    years = '*';\n                    break;\n                case '2':\n                    years = this.result.year.incrementStart+'/'+this.result.year.incrementIncrement;\n                    break;\n                case '3':\n                    this.result.year.specificSpecific.map(val=> {\n                        years += val+','\n                    });\n                    years = years.slice(0, -1);\n                    break;\n                case '4':\n                    years = this.result.year.rangeStart+'-'+this.result.year.rangeEnd;\n                    break;\n            }\n            return years;\n        },\n        cron(){\n            return {\n              value: this.result,\n              label:`${this.secondsText||'*'} ${this.minutesText||'*'} ${this.hoursText||'*'} ${this.daysText||'*'} ${this.monthsText||'*'} ${this.weeksText||'*'} ${this.yearsText||'*'}`\n            }\n        },\n    },\n    watch:{\n      data(){\n        //this.rest(this.data);\n      }\n    },\n    methods: {\n        show(){\n          //this.rest(pick(this.data.value,'second','minute','hour','day','week','month','year'));\n          //this.rest(this.data.value);\n          Object.assign(this.data.value,this.result);\n          console.log('data初始化',this.data);\n          //this.result = this.data.value;\n          this.visible=true;\n        },\n        getValue(){\n            return this.cron;\n        },\n        change(){\n            console.log('返回前',this.cron);\n            this.$emit('change',this.cron);\n            this.close();\n            this.visible = false;\n        },\n        close(){\n            this.visible = false;\n            //this.$emit('close')\n        },\n        rest(data){\n            for(let i in data){\n              console.log(data[i]);\n                if(data[i] instanceof Object){\n                    this.rest(data[i])\n                }else {\n                  switch(typeof data[i]) {\n                    case 'object':\n                      data[i] = [];\n                      break;\n                    case 'string':\n                      data[i] = '';\n                      break;\n                    case 'number':\n                      data[i] = null;\n                      break;\n                  }\n                }\n            }\n        },\n        callback (key) {\n            console.log(key)\n        }\n    }\n}\n",null]}