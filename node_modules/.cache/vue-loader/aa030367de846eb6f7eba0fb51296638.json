{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/modules/online/cgform/auto/OnlCgformTreeList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/modules/online/cgform/auto/OnlCgformTreeList.vue","mtime":1571018558930},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":1565525386522},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { getAction,postAction,deleteAction,downFile } from '@/api/manage'\nimport { filterMultiDictText } from '@/components/dict/JDictSelectUtil'\nimport { filterObj } from '@/utils/util';\nimport JImportModal from '@/components/jeecg/JImportModal'\n\nexport default {\n  name: 'OnlCgformTreeList',\n  components: {\n    JImportModal\n  },\n  data() {\n    return {\n      code: '87b55a515d3441b6b98e48e5b35474a6',\n      description: '在线报表功能测试页面',\n      currentTableName:\"\",\n      pidField:\"\",\n      hasChildrenField:\"\",\n      textField:'',\n      loading: false,\n      // 表头\n      columns: [],\n      //数据集\n      dataSource: [],\n      // 选择器\n      selectedRowKeys: [],\n      selectionRows: [],\n      // 分页参数\n      pagination: {\n        current: 1,\n        pageSize: 10,\n        pageSizeOptions: ['10', '20', '30'],\n        showTotal: (total, range) => {\n          return range[0] + '-' + range[1] + ' 共' + total + '条'\n        },\n        showQuickJumper: true,\n        showSizeChanger: true,\n        total: 0\n      },\n\n      url: {\n        getColumns: '/online/cgform/api/getColumns/',\n        getTreeData: '/online/cgform/api/getTreeData/',\n        optPre:\"/online/cgform/api/form/\",\n        exportXls:'/online/cgform/api/exportXls/',\n        buttonAction:'/online/cgform/api/doButton',\n        startProcess: \"/process/extActProcess/startMutilProcess\",\n      },\n      isorter:{\n        column: 'create_time',\n        order: 'desc',\n      },\n      dictOptions:{\n\n      },\n\n      queryParam:{\n\n      },\n      actionColumn:{\n        title: '操作',\n        dataIndex: 'action',\n        scopedSlots: { customRender: 'action' },\n        fixed:\"right\",\n        align:\"center\",\n        width:150\n      },\n      formTemplate:\"99\",\n\n      /*自定义按钮-link*/\n      cgButtonLinkList:[],\n      /*自定义按钮-button*/\n      cgButtonList:[],\n      /*JS增强*/\n      EnhanceJS:'',\n      /*操作按钮权限*/\n      buttonSwitch:{\n        add:true,\n        update:true,\n        delete:true,\n        batch_delete:true,\n        import:true,\n        export:true\n      },\n      expandedRowKeys:[]\n\n    }\n  },\n  created() {\n    this.initAutoListConfig().then(()=>{\n      this.loadData(1)\n    }).catch(msg=>{\n      console.log(msg)\n    })\n  },\n  mounted(){\n    //this.cgButtonJsHandler('mounted')\n  },\n  watch: {\n    '$route'() {\n      // 刷新参数放到这里去触发，就可以刷新相同界面了\n      this.initAutoListConfig().then(()=>{\n        this.loadData(1)\n      }).catch(msg=>{\n        console.log(msg)\n      })\n    }\n  },\n  computed: {\n    tableProps() {\n      let _this = this\n      return {\n        // 列表项是否可选择\n        // https://vue.ant.design/components/table-cn/#rowSelection\n        rowSelection: {\n          selectedRowKeys: _this.selectedRowKeys,\n          onChange: (selectedRowKeys) => _this.selectedRowKeys = selectedRowKeys\n        }\n      }\n    }\n  },\n  methods: {\n    resetData(){\n      this.description=''\n      this.currentTableName=''\n      this.pidField=''\n      this.hasChildrenField=''\n      this.textField=''\n      this.columns = []\n      this.dataSource = []\n      this.selectedRowKeys=[]\n      this.selectionRows=[]\n    },\n    initAutoListConfig() {\n      return new Promise((resolve, reject) => {\n        if (!this.$route.params.code) {\n          reject(\"列表加载需要参数CODE为空!\")\n        } else {\n          this.resetData()\n          this.loading = true\n          this.code = this.$route.params.code\n          getAction(`${this.url.getColumns}${this.code}`)\n            .then(res => {\n              console.log(\"--onlineList-加载动态列>>\", res);\n              if(res.success){\n                this.configInfohandler(res)\n                resolve();\n              }else{\n                reject(\"onlineList-加载表配置信息失败\")\n              }\n              this.loading = false\n            })\n            .catch(err => {\n              reject(err)\n            })\n        }\n      })\n    },\n    configInfohandler(res){\n      this.dictOptions = res.result.dictOptions\n      this.formTemplate = res.result.formTemplate\n      this.description = res.result.description\n      this.currentTableName = res.result.currentTableName\n      this.pidField = res.result.pidField\n      this.hasChildrenField = res.result.hasChildrenField\n      this.textField = res.result.textField\n      //自定义按钮\n      this.initCgButtonList(res.result.cgButtonList)\n      //JS增强\n      this.initCgEnhanceJs(res.result.enhanceJs)\n      //操作按钮权限\n      this.initButtonSwitch(res.result.hideColumns)\n      let currColumns = res.result.columns\n      let textFieldIndex = -1\n      for(let a=0;a<currColumns.length;a++){\n        currColumns[a].align = 'left'\n        if(this.textField==currColumns[a].dataIndex){\n          textFieldIndex = a\n        }\n        if(currColumns[a].customRender){\n          let dictCode = currColumns[a].customRender;\n          currColumns[a].customRender=(text)=>{\n            return filterMultiDictText(this.dictOptions[dictCode], text);\n          }\n        }\n      }\n      if(textFieldIndex!=-1){\n        let textFieldColumn = currColumns.splice(textFieldIndex,1)\n        currColumns.unshift(textFieldColumn[0])\n      }\n      currColumns.push(this.actionColumn);\n      this.columns = [...currColumns]\n    },\n    //加载根节点\n    loadData(arg){\n      if(arg==1){\n        this.pagination.current=1\n      }\n      this.loading = true\n      this.expandedRowKeys=[]\n      let params = this.getQueryParams();//查询条件\n      params[this.pidField]='0'\n      console.log(\"--onlineList-查询条件-->\",params)\n      getAction(`${this.url.getTreeData}${this.code}`,params).then((res)=>{\n        console.log(\"--onlineList-列表数据\",res)\n        if(res.success){\n          let result = res.result;\n          if(Number(result.total)>0){\n            this.pagination.total = Number(result.total)\n            let dataSource = res.result.records.map(item => {\n              // 判断是否标记了带有子级\n              if (item[this.hasChildrenField] === true || item[this.hasChildrenField]=='1') {\n                let loadChild = { id: `${item.id}_loadChild`, name: 'loading...', isLoading: true }\n                item.children = [loadChild]\n              }\n              return item\n            })\n            this.dataSource = dataSource\n          }else{\n            this.pagination.total=0;\n            this.dataSource=[]\n          }\n        }else{\n          this.$message.warning(res.message)\n        }\n        this.loading = false\n      })\n    },\n    //加载叶子节点\n    handleExpand(expanded, record) {\n      // 判断是否是展开状态\n      if (expanded) {\n        this.expandedRowKeys.push(record.id)\n        if (record.children.length>0 && record.children[0].isLoading === true) {\n          let params = this.getQueryParams();//查询条件\n          params[this.pidField] = record.id\n          getAction(`${this.url.getTreeData}${this.code}`,params).then((res)=>{\n            if(res.success){\n              if(Number(res.result.total)>0){\n                let dataSource = res.result.records.map(item => {\n                  // 判断是否标记了带有子级\n                  if (item[this.hasChildrenField] === true || item[this.hasChildrenField]=='1') {\n                    let loadChild = { id: `${item.id}_loadChild`, name: 'loading...', isLoading: true }\n                    item.children = [loadChild]\n                  }\n                  return item\n                })\n                record.children = dataSource\n              }else{\n                record.children=''\n                record.hasChildrenField='0'\n              }\n            }else{\n              this.$message.warning(res.message)\n            }\n          })\n        }\n      }else{\n        let keyIndex = this.expandedRowKeys.indexOf(record.id)\n        if(keyIndex>=0){\n          this.expandedRowKeys.splice(keyIndex, 1);\n        }\n      }\n    },\n    getQueryParams() {\n      let param = Object.assign({}, this.queryParam,this.isorter);\n      param.pageNo = this.pagination.current;\n      param.pageSize = this.pagination.pageSize;\n      return filterObj(param);\n    },\n    initCgButtonList(btnList){\n      let linkArr = []\n      let buttonArr = []\n      if(btnList && btnList.length>0){\n        for(let i=0;i<btnList.length;i++){\n          let temp = btnList[i]\n          if(temp.buttonStyle=='button'){\n            buttonArr.push(temp)\n          }else if(temp.buttonStyle=='link'){\n            linkArr.push(temp)\n          }\n        }\n      }\n      this.cgButtonLinkList = [...linkArr]\n      this.cgButtonList=[...buttonArr]\n    },\n    initCgEnhanceJs(enhanceJs){\n      //console.log(\"--onlineList-js增强\",enhanceJs)\n      if(enhanceJs){\n        let Obj = eval (\"(\" + enhanceJs + \")\");\n        this.EnhanceJS = new Obj(getAction,postAction,deleteAction);\n        this.cgButtonJsHandler('created')\n      }else{\n        this.EnhanceJS = ''\n      }\n    },\n    initButtonSwitch(hideColumns){\n      if(hideColumns && hideColumns.length>0){\n        Object.keys(this.buttonSwitch).forEach(key=>{\n          if(hideColumns.indexOf(key)>=0){\n            this.buttonSwitch[key]=false\n          }\n        })\n\n      }\n    },\n    onClearSelected(){\n      this.selectedRowKeys = []\n      this.selectionRows = []\n    },\n    handleTableChange(pagination, filters, sorter){\n      //TODO 筛选\n      if (Object.keys(sorter).length>0){\n        this.isorter.column = sorter.field;\n        this.isorter.order = \"ascend\"==sorter.order?\"asc\":\"desc\"\n      }\n      this.pagination = pagination;\n      this.loadData();\n    },\n    /*-------数据格式化-begin----------*/\n    getDateNoTime(text){\n      if(!text){\n        return ''\n      }\n      let a = text;\n      if(a.length>10){\n        a = a.substring(0,10);\n      }\n      return a;\n    },\n    getImgView(text){\n      if(text && text.indexOf(\",\")>0){\n        text = text.substring(0,text.indexOf(\",\"))\n      }\n      return window._CONFIG['imgDomainURL']+\"/\"+text\n    },\n    uploadFile(text){\n      if(!text){\n        this.$message.warning(\"未知的文件\")\n        return;\n      }\n      if(text.indexOf(\",\")>0){\n        text = text.substring(0,text.indexOf(\",\"))\n      }\n      window.open(window._CONFIG['domianURL'] + \"/sys/common/download/\"+text);\n    },\n    /*-------数据格式化-end----------*/\n\n    /*-------功能按钮触发事件-begin----------*/\n    handleEdit(record){\n      this.cgButtonLinkHandler(record,\"beforeEdit\",\"js\")\n      this.$refs.modal.edit(this.formTemplate,record.id);\n    },\n    handleDetail(record){\n      this.$refs.modal.detail(this.formTemplate,record.id);\n    },\n    handleDeleteOne(record){\n      this.cgButtonLinkHandler(record,\"beforeDelete\",\"js\")\n      this.handleDelete(record.id)\n    },\n    handleDelete(id){\n      deleteAction(this.url.optPre+this.code+\"/\"+id).then((res)=>{\n        if(res.success){\n          this.$message.success(res.message)\n          this.loadData()\n        }else{\n          this.$message.warning(res.message)\n        }\n      })\n    },\n    handleAdd(){\n      this.cgButtonJsHandler('beforeAdd')\n      this.$refs.modal.add(this.formTemplate);\n    },\n    handleFormSuccess(){\n      this.loadData()\n    },\n    handleImportXls(){\n      this.$refs.importModal.show()\n    },\n    importOk(){\n      this.loadData(1)\n    },\n    getImportUrl(){\n      return '/online/cgform/api/importXls/'+this.code\n    },\n    handleExportXls(){\n      let param = this.queryParam;\n      if(this.selectedRowKeys && this.selectedRowKeys.length>0){\n        param['selections'] = this.selectedRowKeys.join(\",\")\n      }\n      console.log(\"导出参数\",param)\n      let paramsStr = JSON.stringify(filterObj(param));\n      downFile(this.url.exportXls+this.code,{paramsStr:paramsStr}).then((data)=>{\n        if (!data) {\n          this.$message.warning(\"文件下载失败\")\n          return\n        }\n        if (typeof window.navigator.msSaveBlob !== 'undefined') {\n          window.navigator.msSaveBlob(new Blob([data]), this.description+'.xls')\n        }else{\n          let url = window.URL.createObjectURL(new Blob([data]))\n          let link = document.createElement('a')\n          link.style.display = 'none'\n          link.href = url\n          link.setAttribute('download', this.description+'.xls')\n          document.body.appendChild(link)\n          link.click()\n          document.body.removeChild(link); //下载完成移除元素\n          window.URL.revokeObjectURL(url); //释放掉blob对象\n        }\n      })\n    },\n    handleDelBatch(){\n      if(this.selectedRowKeys.length<=0){\n        this.$message.warning('请选择一条记录！');\n        return false;\n      }else{\n        let ids = \"\";\n        let that = this;\n        that.selectedRowKeys.forEach(function(val) {\n          ids+=val+\",\";\n        });\n        that.$confirm({\n          title:\"确认删除\",\n          content:\"是否删除选中数据?\",\n          onOk: function(){\n            that.handleDelete(ids)\n            that.onClearSelected();\n          }\n        });\n      }\n    },\n    /*-------功能按钮触发事件-begin----------*/\n\n    /*-------JS增强-begin----------*/\n    cgButtonLinkHandler(record,buttonCode,optType){\n      if(optType==\"js\"){\n        if(this.EnhanceJS[buttonCode]){\n          this.EnhanceJS[buttonCode](this,record)\n        }\n      }else if(optType==\"action\"){\n        let params = {\n          formId:this.code,\n          buttonCode:buttonCode,\n          dataId:record.id\n        }\n        console.log(\"自定义按钮link请求后台参数：\",params)\n        postAction(this.url.buttonAction,params).then(res=>{\n          if(res.success){\n            this.loadData()\n            this.$message.success(\"处理完成!\")\n          }else{\n            this.$message.warning(\"处理失败!\")\n          }\n        })\n      }\n    },\n    cgButtonJsHandler(buttonCode){\n      if(this.EnhanceJS[buttonCode]){\n        this.EnhanceJS[buttonCode](this)\n      }\n    },\n    cgButtonActionHandler(buttonCode){\n      //处理自定义button的 需要配置该button自定义sql\n      if(!this.selectedRowKeys || this.selectedRowKeys.length==0){\n        this.$message.warning(\"请先选中一条记录\")\n        return false\n      }\n      if(this.selectedRowKeys.length>1){\n        this.$message.warning(\"请只选中一条记录\")\n        return false\n      }\n      let params = {\n        formId:this.code,\n        buttonCode:buttonCode,\n        dataId:this.selectedRowKeys[0]\n      }\n      console.log(\"自定义按钮请求后台参数：\",params)\n      postAction(this.url.buttonAction,params).then(res=>{\n        if(res.success){\n          this.loadData()\n          this.$message.success(\"处理完成!\")\n        }else{\n          this.$message.warning(\"处理失败!\")\n        }\n      })\n\n    },\n    /*-------JS增强-end----------*/\n\n  }\n}\n",null]}