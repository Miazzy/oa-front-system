{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/QuartzJobModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/QuartzJobModal.vue","mtime":1571018558936},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { httpAction } from '@/api/manage'\nimport JCron from \"@/components/jeecg/JCron.vue\";\nimport pick from 'lodash.pick'\nimport moment from \"moment\"\n\nexport default {\n  name: \"QuartzJobModal\",\n  components: {\n    JCron\n  },\n  data () {\n    return {\n      title:\"操作\",\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n      cron: {\n        label: '',\n        value: ''\n      },\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules: {\n        cron: {\n          rules: [{\n            required: true, message: '请输入cron表达式!'\n          }]\n        }\n      },\n      url: {\n        add: \"/sys/quartzJob/add\",\n        edit: \"/sys/quartzJob/edit\",\n      },\n    }\n  },\n  created () {\n  },\n  methods: {\n    add () {\n      this.edit({});\n    },\n    edit (record) {\n      this.model = Object.assign({},record);\n      console.log(this.model)\n      this.visible = true;\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.model,'jobClassName','cronExpression','parameter','description','status'));\n      });\n\n    },\n    close () {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleOk () {\n      const that = this;\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        console.log('values',values)\n        if (!err) {\n          // if (typeof values.cronExpression == \"undefined\" || Object.keys(values.cronExpression).length==0 ) {\n          //   this.$message.warning('请输入cron表达式!');\n          //   return false;\n          // }\n\n          that.confirmLoading = true;\n          let httpurl = '';\n          let method = '';\n          if(!this.model.id){\n            httpurl+=this.url.add;\n            method = 'post';\n          }else{\n            httpurl+=this.url.edit;\n            method = 'put';\n          }\n          let formData = Object.assign(this.model, values);\n          //时间格式化\n\n          console.log('提交参数',formData)\n          httpAction(httpurl,formData,method).then((res)=>{\n            if(res.success){\n              that.$message.success(res.message);\n              that.$emit('ok');\n            }else{\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n            that.close();\n          })\n\n        }\n      })\n    },\n    handleCancel () {\n      this.close()\n    },\n    setCorn(data){\n      console.log('data)',data);\n      this.$nextTick(() => {\n        this.model.cronExpression = data;\n      })\n\n      // console.log(Object.keys(data).length==0);\n      // if (Object.keys(data).length==0) {\n      //   this.$message.warning('请输入cron表达式!');\n      // }\n    },\n    validateCron(rule, value, callback){\n      if(!value){\n        callback()\n      }else if (Object.keys(value).length==0) {\n        callback(\"请输入cron表达式!\");\n      }\n    },\n\n  }\n}\n",{"version":3,"sources":["QuartzJobModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"QuartzJobModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\n  <a-modal\n    :title=\"title\"\n    :width=\"800\"\n    :visible=\"visible\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleOk\"\n    @cancel=\"handleCancel\"\n    okText=\"保存并安排任务\"\n    cancelText=\"关闭\">\n\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form :form=\"form\">\n\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"任务类名\"\n          hasFeedback >\n          <a-input placeholder=\"请输入任务类名\" v-decorator=\"['jobClassName', {rules: [{ required: true, message: '请输入任务类名!' }]}]\" />\n        </a-form-item>\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"cron表达式\">\n<!--                    <a-input placeholder=\"请输入cron表达式\" v-decorator=\"['cronExpression', {'initialValue':'0/1 * * * * ?',rules: [{ required: true, message: '请输入任务类名!' }]}]\" />-->\n<!--                    <a target=\"_blank\" href=\"http://cron.qqe2.com/\">-->\n<!--                      <a-icon type=\"share-alt\" />-->\n<!--                      在线cron表达式生成-->\n<!--                    </a>-->\n          <j-cron ref=\"innerVueCron\" v-decorator=\"['cronExpression', {'initialValue':'0/1 * * * * ?',rules: [{ required: true, message: '请输入cron表达式!' }]}]\"  @change=\"setCorn\"></j-cron>\n        </a-form-item>\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"参数\"\n          hasFeedback >\n          <a-input placeholder=\"请输入参数\" v-decorator=\"['parameter', {}]\" />\n        </a-form-item>\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"描述\"\n          hasFeedback >\n          <a-input placeholder=\"请输入描述\" v-decorator=\"['description', {}]\" />\n        </a-form-item>\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"状态\">\n          <a-radio-group buttonStyle=\"solid\" v-decorator=\"[ 'status', {'initialValue':0}]\">\n            <a-radio-button :value=\"0\">正常</a-radio-button>\n            <a-radio-button :value=\"-1\">停止</a-radio-button>\n          </a-radio-group>\n        </a-form-item>\n\n      </a-form>\n    </a-spin>\n  </a-modal>\n</template>\n\n<script>\n  import { httpAction } from '@/api/manage'\n  import JCron from \"@/components/jeecg/JCron.vue\";\n  import pick from 'lodash.pick'\n  import moment from \"moment\"\n\n  export default {\n    name: \"QuartzJobModal\",\n    components: {\n      JCron\n    },\n    data () {\n      return {\n        title:\"操作\",\n        visible: false,\n        model: {},\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n        cron: {\n          label: '',\n          value: ''\n        },\n        confirmLoading: false,\n        form: this.$form.createForm(this),\n        validatorRules: {\n          cron: {\n            rules: [{\n              required: true, message: '请输入cron表达式!'\n            }]\n          }\n        },\n        url: {\n          add: \"/sys/quartzJob/add\",\n          edit: \"/sys/quartzJob/edit\",\n        },\n      }\n    },\n    created () {\n    },\n    methods: {\n      add () {\n        this.edit({});\n      },\n      edit (record) {\n        this.model = Object.assign({},record);\n        console.log(this.model)\n        this.visible = true;\n        this.$nextTick(() => {\n          this.form.setFieldsValue(pick(this.model,'jobClassName','cronExpression','parameter','description','status'));\n        });\n\n      },\n      close () {\n        this.$emit('close');\n        this.visible = false;\n      },\n      handleOk () {\n        const that = this;\n        // 触发表单验证\n        this.form.validateFields((err, values) => {\n          console.log('values',values)\n          if (!err) {\n            // if (typeof values.cronExpression == \"undefined\" || Object.keys(values.cronExpression).length==0 ) {\n            //   this.$message.warning('请输入cron表达式!');\n            //   return false;\n            // }\n\n            that.confirmLoading = true;\n            let httpurl = '';\n            let method = '';\n            if(!this.model.id){\n              httpurl+=this.url.add;\n              method = 'post';\n            }else{\n              httpurl+=this.url.edit;\n              method = 'put';\n            }\n            let formData = Object.assign(this.model, values);\n            //时间格式化\n\n            console.log('提交参数',formData)\n            httpAction(httpurl,formData,method).then((res)=>{\n              if(res.success){\n                that.$message.success(res.message);\n                that.$emit('ok');\n              }else{\n                that.$message.warning(res.message);\n              }\n            }).finally(() => {\n              that.confirmLoading = false;\n              that.close();\n            })\n\n          }\n        })\n      },\n      handleCancel () {\n        this.close()\n      },\n      setCorn(data){\n        console.log('data)',data);\n        this.$nextTick(() => {\n          this.model.cronExpression = data;\n        })\n\n        // console.log(Object.keys(data).length==0);\n        // if (Object.keys(data).length==0) {\n        //   this.$message.warning('请输入cron表达式!');\n        // }\n      },\n      validateCron(rule, value, callback){\n        if(!value){\n          callback()\n        }else if (Object.keys(value).length==0) {\n          callback(\"请输入cron表达式!\");\n        }\n      },\n\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"]}]}