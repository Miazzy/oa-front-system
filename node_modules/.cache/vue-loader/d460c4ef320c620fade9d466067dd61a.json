{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/DictModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/DictModal.vue","mtime":1571018558935},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport pick from 'lodash.pick'\nimport { addDict, editDict, duplicateCheck } from '@/api/api'\n\nexport default {\n  name: 'DictModal',\n  data() {\n    return {\n      value: 1,\n      title: '操作',\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      },\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules: {\n        dictName: { rules: [{ required: true, message: '请输入字典名称!' }] },\n        dictCode: {\n          rules: [{ required: true, message: '请输入字典编码!' },\n            { validator: this.validateDictCode }]\n        }\n      }\n    }\n  },\n  created() {\n  },\n  methods: {\n    validateDictCode(rule, value, callback) {\n      // 重复校验\n      var params = {\n        tableName: 'sys_dict',\n        fieldName: 'dict_code',\n        fieldVal: value,\n        dataId: this.model.id\n      }\n      duplicateCheck(params).then((res) => {\n        if (res.success) {\n          callback()\n        } else {\n          callback(res.message)\n        }\n      })\n    },\n    handleChange(value) {\n      this.model.status = value\n    },\n    add() {\n      this.edit({})\n    },\n    edit(record) {\n      if (record.id) {\n        this.visiblekey = true\n      } else {\n        this.visiblekey = false\n      }\n      this.form.resetFields()\n      this.model = Object.assign({}, record)\n      this.visible = true\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.model, 'dictName', 'dictCode', 'description'))\n      })\n    },\n    // 确定\n    handleOk() {\n      const that = this\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          that.confirmLoading = true\n          values.dictName = (values.dictName || '').trim()\n          values.dictCode = (values.dictCode || '').trim()\n          values.description = (values.description || '').trim()\n          let formData = Object.assign(this.model, values)\n          let obj\n          console.log(formData)\n          if (!this.model.id) {\n            obj = addDict(formData)\n          } else {\n            obj = editDict(formData)\n          }\n          obj.then((res) => {\n            if (res.success) {\n              that.$message.success(res.message)\n              that.$emit('ok')\n            } else {\n              that.$message.warning(res.message)\n            }\n          }).finally(() => {\n            that.confirmLoading = false\n            that.close()\n          })\n        }\n      })\n    },\n    // 关闭\n    handleCancel() {\n      this.close()\n    },\n    close() {\n      this.$emit('close')\n      this.visible = false\n    }\n  }\n}\n",null]}