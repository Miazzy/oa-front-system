{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/jeecg/JUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/jeecg/JUpload.vue","mtime":1571018558898},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport Vue from 'vue'\nimport { ACCESS_TOKEN } from \"@/store/mutation-types\"\n\nconst FILE_TYPE_ALL = \"all\"\nconst FILE_TYPE_IMG = \"image\"\nconst FILE_TYPE_TXT = \"file\"\nconst uidGenerator=()=>{\n  return '-'+parseInt(Math.random()*10000+1,10);\n}\nconst getFileName=(path)=>{\n  if(path.lastIndexOf(\"\\\\\")>=0){\n    let reg=new RegExp(\"\\\\\\\\\",\"g\");\n    path = path.replace(reg,\"/\");\n  }\n  return path.substring(path.lastIndexOf(\"/\")+1);\n}\nexport default {\n  name: 'JUpload',\n  data(){\n    return {\n      uploadAction:window._CONFIG['domianURL']+\"/sys/common/upload\",\n      urlDownload:window._CONFIG['domianURL'] + \"/sys/common/download/\",\n      headers:{},\n      fileList: []\n    }\n  },\n  props:{\n    text:{\n      type:String,\n      required:false,\n      default:\"点击上传\"\n    },\n    fileType:{\n      type:String,\n      required:false,\n      default:FILE_TYPE_ALL\n    },\n    /*这个属性用于控制文件上传的业务路径*/\n    bizPath:{\n      type:String,\n      required:false,\n      default:\"temp\"\n    },\n    value:{\n      type:String,\n      required:false\n    },\n    //此属性被废弃了\n    triggerChange:{\n      type: Boolean,\n      required: false,\n      default: false\n    },\n  },\n  watch:{\n    value(val){\n      this.initFileList(val)\n    }\n  },\n  created(){\n    const token = Vue.ls.get(ACCESS_TOKEN);\n    this.headers = {\"X-Access-Token\":token}\n  },\n\n  methods:{\n    initFileList(paths){\n      if(!paths || paths.length==0){\n        //return [];\n        // update-begin- --- author:os_chengtgen ------ date:20190729 ---- for:issues:326,Jupload组件初始化bug\n        this.fileList = [];\n        return;\n        // update-end- --- author:os_chengtgen ------ date:20190729 ---- for:issues:326,Jupload组件初始化bug\n      }\n      let fileList = [];\n      let arr = paths.split(\",\")\n      for(var a=0;a<arr.length;a++){\n        fileList.push({\n          uid:uidGenerator(),\n          name:getFileName(arr[a]),\n          status: 'done',\n          url: this.urlDownload+arr[a],\n          response:{\n            status:\"history\",\n            message:arr[a]\n          }\n        })\n      }\n      this.fileList = fileList\n    },\n    handlePathChange(){\n      let uploadFiles = this.fileList\n      let path = ''\n      if(!uploadFiles || uploadFiles.length==0){\n        path = ''\n      }\n      let arr = [];\n\n      for(var a=0;a<uploadFiles.length;a++){\n        arr.push(uploadFiles[a].response.message)\n      }\n      if(arr.length>0){\n        path = arr.join(\",\")\n      }\n      this.$emit('change', path);\n    },\n    beforeUpload(file){\n      var fileType = file.type;\n      if(fileType===FILE_TYPE_IMG){\n        if(fileType.indexOf('image')<0){\n          this.$message.warning('请上传图片');\n          return false;\n        }\n      }else if(fileType===FILE_TYPE_TXT){\n        if(fileType.indexOf('image')>=0){\n          this.$message.warning('请上传文件');\n          return false;\n        }\n      }\n      //TODO 扩展功能验证文件大小\n      return true\n    },\n    handleChange(info) {\n      console.log(\"--文件列表改变--\")\n      let fileList = info.fileList\n      if(info.file.status==='done'){\n        if(info.file.response.success){\n          fileList = fileList.map((file) => {\n            if (file.response) {\n              file.url = this.urlDownload+file.response.message;\n            }\n            return file;\n          });\n        }\n        this.$message.success(`${info.file.name} 上传成功!`);\n      }else if (info.file.status === 'error') {\n        this.$message.error(`${info.file.name} 上传失败.`);\n      }else if(info.file.status === 'removed'){\n        this.handleDelete(info.file)\n      }\n      this.fileList = fileList\n      if(info.file.status==='done' || info.file.status === 'removed'){\n        this.handlePathChange()\n      }\n    },\n    handleDelete(file){\n      //如有需要新增 删除逻辑\n      console.log(file)\n    },\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  }\n}\n",{"version":3,"sources":["JUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkfile":"JUpload.vue","sourceRoot":"src/components/jeecg","sourcesContent":["<template>\n  <a-upload\n    name=\"file\"\n    :multiple=\"true\"\n    :action=\"uploadAction\"\n    :headers=\"headers\"\n    :data=\"{'isup':1,'bizPath':bizPath}\"\n    :fileList=\"fileList\"\n    :beforeUpload=\"beforeUpload\"\n    @change=\"handleChange\">\n    <a-button>\n      <a-icon type=\"upload\" />{{ text }}\n    </a-button>\n  </a-upload>\n</template>\n\n<script>\n\n  import Vue from 'vue'\n  import { ACCESS_TOKEN } from \"@/store/mutation-types\"\n\n  const FILE_TYPE_ALL = \"all\"\n  const FILE_TYPE_IMG = \"image\"\n  const FILE_TYPE_TXT = \"file\"\n  const uidGenerator=()=>{\n    return '-'+parseInt(Math.random()*10000+1,10);\n  }\n  const getFileName=(path)=>{\n    if(path.lastIndexOf(\"\\\\\")>=0){\n      let reg=new RegExp(\"\\\\\\\\\",\"g\");\n      path = path.replace(reg,\"/\");\n    }\n    return path.substring(path.lastIndexOf(\"/\")+1);\n  }\n  export default {\n    name: 'JUpload',\n    data(){\n      return {\n        uploadAction:window._CONFIG['domianURL']+\"/sys/common/upload\",\n        urlDownload:window._CONFIG['domianURL'] + \"/sys/common/download/\",\n        headers:{},\n        fileList: []\n      }\n    },\n    props:{\n      text:{\n        type:String,\n        required:false,\n        default:\"点击上传\"\n      },\n      fileType:{\n        type:String,\n        required:false,\n        default:FILE_TYPE_ALL\n      },\n      /*这个属性用于控制文件上传的业务路径*/\n      bizPath:{\n        type:String,\n        required:false,\n        default:\"temp\"\n      },\n      value:{\n        type:String,\n        required:false\n      },\n      //此属性被废弃了\n      triggerChange:{\n        type: Boolean,\n        required: false,\n        default: false\n      },\n    },\n    watch:{\n      value(val){\n        this.initFileList(val)\n      }\n    },\n    created(){\n      const token = Vue.ls.get(ACCESS_TOKEN);\n      this.headers = {\"X-Access-Token\":token}\n    },\n\n    methods:{\n      initFileList(paths){\n        if(!paths || paths.length==0){\n          //return [];\n          // update-begin- --- author:os_chengtgen ------ date:20190729 ---- for:issues:326,Jupload组件初始化bug\n          this.fileList = [];\n          return;\n          // update-end- --- author:os_chengtgen ------ date:20190729 ---- for:issues:326,Jupload组件初始化bug\n        }\n        let fileList = [];\n        let arr = paths.split(\",\")\n        for(var a=0;a<arr.length;a++){\n          fileList.push({\n            uid:uidGenerator(),\n            name:getFileName(arr[a]),\n            status: 'done',\n            url: this.urlDownload+arr[a],\n            response:{\n              status:\"history\",\n              message:arr[a]\n            }\n          })\n        }\n        this.fileList = fileList\n      },\n      handlePathChange(){\n        let uploadFiles = this.fileList\n        let path = ''\n        if(!uploadFiles || uploadFiles.length==0){\n          path = ''\n        }\n        let arr = [];\n\n        for(var a=0;a<uploadFiles.length;a++){\n          arr.push(uploadFiles[a].response.message)\n        }\n        if(arr.length>0){\n          path = arr.join(\",\")\n        }\n        this.$emit('change', path);\n      },\n      beforeUpload(file){\n        var fileType = file.type;\n        if(fileType===FILE_TYPE_IMG){\n          if(fileType.indexOf('image')<0){\n            this.$message.warning('请上传图片');\n            return false;\n          }\n        }else if(fileType===FILE_TYPE_TXT){\n          if(fileType.indexOf('image')>=0){\n            this.$message.warning('请上传文件');\n            return false;\n          }\n        }\n        //TODO 扩展功能验证文件大小\n        return true\n      },\n      handleChange(info) {\n        console.log(\"--文件列表改变--\")\n        let fileList = info.fileList\n        if(info.file.status==='done'){\n          if(info.file.response.success){\n            fileList = fileList.map((file) => {\n              if (file.response) {\n                file.url = this.urlDownload+file.response.message;\n              }\n              return file;\n            });\n          }\n          this.$message.success(`${info.file.name} 上传成功!`);\n        }else if (info.file.status === 'error') {\n          this.$message.error(`${info.file.name} 上传失败.`);\n        }else if(info.file.status === 'removed'){\n          this.handleDelete(info.file)\n        }\n        this.fileList = fileList\n        if(info.file.status==='done' || info.file.status === 'removed'){\n          this.handlePathChange()\n        }\n      },\n      handleDelete(file){\n        //如有需要新增 删除逻辑\n        console.log(file)\n      },\n    },\n    model: {\n      prop: 'value',\n      event: 'change'\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"]}]}