{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/DictItemList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/DictItemList.vue","mtime":1571018558932},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport pick from 'lodash.pick'\nimport {filterObj} from '@/utils/util';\nimport DictItemModal from './modules/DictItemModal'\nimport {JeecgListMixin} from '@/mixins/JeecgListMixin'\n\nexport default {\n  name: \"DictItemList\",\n  mixins: [JeecgListMixin],\n  components: {DictItemModal},\n  data() {\n    return {\n      columns: [\n        {\n          title: '名称',\n          align: \"center\",\n          dataIndex: 'itemText',\n        },\n        {\n          title: '数据值',\n          align: \"center\",\n          dataIndex: 'itemValue',\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          align: \"center\",\n          scopedSlots: {customRender: 'action'},\n        }\n      ],\n      queryParam: {\n        dictId: \"\",\n        dictName: \"\",\n        itemText: \"\",\n        delFlag: \"1\",\n        status: [],\n      },\n      title: \"操作\",\n      visible: false,\n      screenWidth: 800,\n      model: {},\n      dictId: \"\",\n      status: 1,\n      labelCol: {\n        xs: {span: 5},\n        sm: {span: 5},\n      },\n      wrapperCol: {\n        xs: {span: 12},\n        sm: {span: 12},\n      },\n      form: this.$form.createForm(this),\n      validatorRules: {\n        itemText: {rules: [{required: true, message: '请输入名称!'}]},\n        itemValue: {rules: [{required: true, message: '请输入数据值!'}]},\n      },\n      url: {\n        list: \"/sys/dictItem/list\",\n        delete: \"/sys/dictItem/delete\",\n        deleteBatch: \"/sys/dictItem/deleteBatch\",\n      },\n    }\n  },\n  created() {\n    // 当页面初始化时,根据屏幕大小来给抽屉设置宽度\n    this.resetScreenSize();\n  },\n  methods: {\n    add(dictId) {\n      this.dictId = dictId;\n      this.edit({});\n    },\n    edit(record) {\n      if (record.id) {\n        this.dictId = record.id;\n      }\n      this.queryParam = {}\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.model.dictId = this.dictId;\n      this.model.status = this.status;\n      this.visible = true;\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.model, 'itemText', 'itemValue'))\n      });\n      // 当其它模块调用该模块时,调用此方法加载字典数据\n      this.loadData();\n    },\n\n    getQueryParams() {\n      var param = Object.assign({}, this.queryParam);\n      param.dictId = this.dictId;\n      param.field = this.getQueryField();\n      param.pageNo = this.ipagination.current;\n      param.pageSize = this.ipagination.pageSize;\n      return filterObj(param);\n    },\n\n    // 添加字典数据\n    handleAdd() {\n      this.$refs.modalForm.add(this.dictId);\n      this.$refs.modalForm.title = \"新增\";\n    },\n    showDrawer() {\n      this.visible = true\n    },\n    onClose() {\n      this.visible = false\n      this.form.resetFields();\n      this.dataSource = [];\n    },\n    // 抽屉的宽度随着屏幕大小来改变\n    resetScreenSize() {\n      let screenWidth = document.body.clientWidth;\n      if (screenWidth < 600) {\n        this.screenWidth = screenWidth;\n      } else {\n        this.screenWidth = 600;\n      }\n    },\n  }\n}\n",{"version":3,"sources":["DictItemList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DictItemList.vue","sourceRoot":"src/views/system","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <!-- 抽屉 -->\n    <a-drawer\n      title=\"字典列表\"\n      :width=\"screenWidth\"\n      @close=\"onClose\"\n      :visible=\"visible\"\n    >\n      <!-- 抽屉内容的border -->\n      <div\n        :style=\"{\n          padding:'10px',\n          border: '1px solid #e9e9e9',\n          background: '#fff',\n        }\">\n\n        <div class=\"table-page-search-wrapper\">\n          <a-form layout=\"inline\" :form=\"form\">\n            <a-row :gutter=\"10\">\n              <a-col :md=\"8\" :sm=\"12\">\n                <a-form-item label=\"名称\">\n                  <a-input style=\"width: 120px;\" placeholder=\"请输入名称\" v-model=\"queryParam.itemText\"></a-input>\n                </a-form-item>\n              </a-col>\n              <a-col :md=\"9\" :sm=\"24\">\n                <a-form-item label=\"状态\" style=\"width: 170px\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n                  <a-select\n                    placeholder=\"请选择\"\n                    v-model=\"queryParam.status\"\n                  >\n                    <a-select-option value=\"1\">正常</a-select-option>\n                    <a-select-option value=\"0\">禁用</a-select-option>\n                  </a-select>\n                </a-form-item>\n              </a-col>\n              <a-col :md=\"7\" :sm=\"24\">\n              <span style=\"float: left;\" class=\"table-page-search-submitButtons\">\n                <a-button type=\"primary\" @click=\"searchQuery\">搜索</a-button>\n                <a-button type=\"primary\" @click=\"searchReset\" style=\"margin-left: 8px\">重置</a-button>\n              </span>\n              </a-col>\n            </a-row>\n            <a-row>\n              <a-col :md=\"2\" :sm=\"24\">\n                <a-button style=\"margin-bottom: 10px\" type=\"primary\" @click=\"handleAdd\">新增</a-button>\n              </a-col>\n            </a-row>\n          </a-form>\n        </div>\n        <div>\n          <a-table\n            ref=\"table\"\n            rowKey=\"id\"\n            size=\"middle\"\n            :columns=\"columns\"\n            :dataSource=\"dataSource\"\n            :pagination=\"ipagination\"\n            :loading=\"loading\"\n            @change=\"handleTableChange\"\n          >\n\n          <span slot=\"action\" slot-scope=\"text, record\">\n            <a @click=\"handleEdit(record)\">编辑</a>\n            <a-divider type=\"vertical\"/>\n            <a-popconfirm title=\"确定删除吗?\" @confirm=\"() => handleDelete(record.id)\">\n              <a>删除</a>\n            </a-popconfirm>\n          </span>\n\n          </a-table>\n        </div>\n      </div>\n    </a-drawer>\n    <dict-item-modal ref=\"modalForm\" @ok=\"modalFormOk\"></dict-item-modal> <!-- 字典数据 -->\n  </a-card>\n</template>\n\n<script>\n  import pick from 'lodash.pick'\n  import {filterObj} from '@/utils/util';\n  import DictItemModal from './modules/DictItemModal'\n  import {JeecgListMixin} from '@/mixins/JeecgListMixin'\n\n  export default {\n    name: \"DictItemList\",\n    mixins: [JeecgListMixin],\n    components: {DictItemModal},\n    data() {\n      return {\n        columns: [\n          {\n            title: '名称',\n            align: \"center\",\n            dataIndex: 'itemText',\n          },\n          {\n            title: '数据值',\n            align: \"center\",\n            dataIndex: 'itemValue',\n          },\n          {\n            title: '操作',\n            dataIndex: 'action',\n            align: \"center\",\n            scopedSlots: {customRender: 'action'},\n          }\n        ],\n        queryParam: {\n          dictId: \"\",\n          dictName: \"\",\n          itemText: \"\",\n          delFlag: \"1\",\n          status: [],\n        },\n        title: \"操作\",\n        visible: false,\n        screenWidth: 800,\n        model: {},\n        dictId: \"\",\n        status: 1,\n        labelCol: {\n          xs: {span: 5},\n          sm: {span: 5},\n        },\n        wrapperCol: {\n          xs: {span: 12},\n          sm: {span: 12},\n        },\n        form: this.$form.createForm(this),\n        validatorRules: {\n          itemText: {rules: [{required: true, message: '请输入名称!'}]},\n          itemValue: {rules: [{required: true, message: '请输入数据值!'}]},\n        },\n        url: {\n          list: \"/sys/dictItem/list\",\n          delete: \"/sys/dictItem/delete\",\n          deleteBatch: \"/sys/dictItem/deleteBatch\",\n        },\n      }\n    },\n    created() {\n      // 当页面初始化时,根据屏幕大小来给抽屉设置宽度\n      this.resetScreenSize();\n    },\n    methods: {\n      add(dictId) {\n        this.dictId = dictId;\n        this.edit({});\n      },\n      edit(record) {\n        if (record.id) {\n          this.dictId = record.id;\n        }\n        this.queryParam = {}\n        this.form.resetFields();\n        this.model = Object.assign({}, record);\n        this.model.dictId = this.dictId;\n        this.model.status = this.status;\n        this.visible = true;\n        this.$nextTick(() => {\n          this.form.setFieldsValue(pick(this.model, 'itemText', 'itemValue'))\n        });\n        // 当其它模块调用该模块时,调用此方法加载字典数据\n        this.loadData();\n      },\n\n      getQueryParams() {\n        var param = Object.assign({}, this.queryParam);\n        param.dictId = this.dictId;\n        param.field = this.getQueryField();\n        param.pageNo = this.ipagination.current;\n        param.pageSize = this.ipagination.pageSize;\n        return filterObj(param);\n      },\n\n      // 添加字典数据\n      handleAdd() {\n        this.$refs.modalForm.add(this.dictId);\n        this.$refs.modalForm.title = \"新增\";\n      },\n      showDrawer() {\n        this.visible = true\n      },\n      onClose() {\n        this.visible = false\n        this.form.resetFields();\n        this.dataSource = [];\n      },\n      // 抽屉的宽度随着屏幕大小来改变\n      resetScreenSize() {\n        let screenWidth = document.body.clientWidth;\n        if (screenWidth < 600) {\n          this.screenWidth = screenWidth;\n        } else {\n          this.screenWidth = 600;\n        }\n      },\n    }\n  }\n</script>\n<style scoped>\n</style>"]}]}