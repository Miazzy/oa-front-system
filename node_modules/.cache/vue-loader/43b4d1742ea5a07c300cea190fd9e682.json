{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/PermissionModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/PermissionModal.vue","mtime":1571018558936},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {addPermission,editPermission,queryTreeList} from '@/api/api'\nimport Icons from './icon/Icons'\nimport pick from 'lodash.pick'\n\n\nexport default {\n  name: \"PermissionModal\",\n  components: {Icons},\n  data () {\n    return {\n      drawerWidth:700,\n      treeData:[],\n      treeValue: '0-0-4',\n      title:\"操作\",\n      visible: false,\n      disableSubmit:false,\n      model: {},\n      localMenuType:0,\n      alwaysShow:false,//表单元素-聚合路由\n      menuHidden:false,//表单元素-隐藏路由\n      routeSwitch:true, //是否路由菜单\n      isKeepalive:true, //是否缓存路由\n      show:true,//根据菜单类型，动态显示隐藏表单元素\n      menuLabel:'菜单名称',\n      isRequrie:true,  // 是否需要验证\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n\n      iconChooseVisible: false,\n      validateStatus:\"\"\n    }\n  },\n  computed:{\n    validatorRules:function() {\n      return {\n        name:{rules: [{ required: true, message: '请输入菜单标题!' }]},\n        component:{rules: [{ required: this.show, message: '请输入前端组件!' }]},\n        url:{rules: [{ required: this.show, message: '请输入菜单路径!' }]},\n        permsType:{rules: [{ required: true, message: '请输入授权策略!' }]},\n        sortNo:{initialValue:1.0,rules: [{validator: this.validateNumber}]},\n      }\n    }\n  },\n  created () {\n    this.initDictConfig();\n  },\n  methods: {\n    loadTree(){\n      var that = this;\n      queryTreeList().then((res)=>{\n        if(res.success){\n          console.log('----queryTreeList---')\n          console.log(res)\n          that.treeData = [];\n          let treeList = res.result.treeList\n          for(let a=0;a<treeList.length;a++){\n            let temp = treeList[a];\n            temp.isLeaf = temp.leaf;\n            that.treeData.push(temp);\n          }\n        }\n      });\n    },\n    add () {\n      // 默认值\n      this.edit({status:'1',permsType:'1',route:true});\n    },\n    edit (record) {\n      this.resetScreenSize(); // 调用此方法,根据屏幕宽度自适应调整抽屉的宽度\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      //--------------------------------------------------------------------------------------------------\n      //根据菜单类型，动态展示页面字段\n      console.log(record)\n      this.alwaysShow = !record.alwaysShow?false:true;\n      this.menuHidden = !record.hidden?false:true;\n\n      if(record.route!=null){\n        this.routeSwitch = record.route?true:false;\n      }\n      \n      if(record.keepAlive!=null){\n        this.isKeepalive = record.keepAlive?true:false;\n      }else{\n        this.isKeepalive = false; // 升级兼容 如果没有（后台没有传过来、或者是新建）默认为false\n      }\n\n\n\n      //console.log('record.menuType', record.menuType);\n      this.show = record.menuType==2?false:true;\n      this.menuLabel = record.menuType==2?'按钮/权限':'菜单名称';\n\n      if(this.model.parentId){\n        this.localMenuType = 1;\n      }else{\n        this.localMenuType = 0;\n      }\n      //----------------------------------------------------------------------------------------------\n\n      this.visible = true;\n      this.loadTree();\n      let fieldsVal = pick(this.model,'name','perms','permsType','component','url','sortNo','menuType','status');\n      this.$nextTick(() => {\n        this.form.setFieldsValue(fieldsVal)\n      });\n    },\n    close () {\n      this.$emit('close');\n      this.disableSubmit = false;\n      this.visible = false;\n    },\n    handleOk () {\n      const that = this;\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          this.model.alwaysShow = this.alwaysShow;\n          this.model.hidden = this.menuHidden;\n          this.model.route = this.routeSwitch;\n          this.model.keepAlive = this.isKeepalive;\n          let formData = Object.assign(this.model, values);\n          if ((formData.menuType == 1 || formData.menuType == 2) && !formData.parentId) {\n            that.validateStatus = 'error';\n            that.$message.error(\"请检查你填的类型以及信息是否正确！\");\n            return;\n          } else {\n            that.validateStatus = 'success';\n          }\n          that.confirmLoading = true;\n          console.log(formData);\n          let obj;\n          if (!this.model.id) {\n            obj = addPermission(formData);\n          } else {\n            obj = editPermission(formData);\n          }\n          obj.then((res) => {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n            that.close();\n          });\n        }\n      })\n    },\n    handleCancel () {\n      this.close()\n    },\n    validateNumber(rule, value, callback){\n      if(!value || new RegExp(/^[0-9]*[1-9][0-9]*$/).test(value)){\n        callback();\n      }else{\n        callback(\"请输入正整数!\");\n      }\n    },\n    onChangeMenuType(e) {\n      //console.log('localMenuType checked', e.target.value)\n      this.localMenuType=e.target.value\n      if(e.target.value == 2){\n        this.show = false;\n        this.menuLabel = '按钮/权限';\n      }else{\n        this.show = true;\n        this.menuLabel = '菜单名称';\n      }\n      this.$nextTick(() => {\n        this.form.validateFields(['url','component'], { force: true });\n      });\n    },\n    selectIcons(){\n      this.iconChooseVisible = true\n    },\n    handleIconCancel () {\n      this.iconChooseVisible = false\n    },\n    handleIconChoose (value) {\n      console.log(value)\n      this.model.icon = value\n      this.form.icon = value\n      this.iconChooseVisible = false\n    },\n    // 根据屏幕变化,设置抽屉尺寸\n    resetScreenSize(){\n      let screenWidth = document.body.clientWidth;\n      if(screenWidth < 500){\n        this.drawerWidth = screenWidth;\n      }else{\n        this.drawerWidth = 700;\n      }\n    },\n    initDictConfig() {\n    },\n    handleParentIdChange(value){\n      if(!value){\n        this.validateStatus=\"error\"\n      }else{\n        this.validateStatus=\"success\"\n      }\n    }\n  }\n}\n",{"version":3,"sources":["PermissionModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuKA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PermissionModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\n  <a-drawer\n    :title=\"title\"\n    :width=\"drawerWidth\"\n    @close=\"handleCancel\"\n    :visible=\"visible\"\n    :confirmLoading=\"confirmLoading\"\n    :wrapStyle=\"{height: 'calc(100% - 108px)',overflow: 'auto',paddingBottom: '108px'}\"\n  >\n    <div :style=\"{width: '100%',border: '1px solid #e9e9e9',padding: '10px 16px',background: '#fff',}\">\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form :form=\"form\">\n\n        <a-form-item label=\"菜单类型\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" >\n          <a-radio-group @change=\"onChangeMenuType\" v-decorator=\"['menuType',{'initialValue':localMenuType}]\">\n            <a-radio :value=\"0\">一级菜单</a-radio>\n            <a-radio :value=\"1\">子菜单</a-radio>\n            <a-radio :value=\"2\">按钮/权限</a-radio>\n          </a-radio-group>\n        </a-form-item>\n\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          :label=\"menuLabel\"\n          hasFeedback >\n          <a-input placeholder=\"请输入菜单名称\" v-decorator=\"[ 'name', validatorRules.name]\" :readOnly=\"disableSubmit\"/>\n        </a-form-item>\n\n\n        <a-form-item\n          v-show=\"localMenuType!=0\"\n          label=\"上级菜单\"\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          :validate-status=\"validateStatus\"\n          :hasFeedback=\"true\"\n          :required=\"true\">\n          <span slot=\"help\">{{ validateStatus=='error'?'请选择上级菜单':'&nbsp;&nbsp;' }}</span>\n          <a-tree-select\n            style=\"width:100%\"\n            :dropdownStyle=\"{ maxHeight: '200px', overflow: 'auto' }\"\n            :treeData=\"treeData\"\n            v-model=\"model.parentId\"\n            placeholder=\"请选择父级菜单\"\n            :disabled=\"disableSubmit\"\n            @change=\"handleParentIdChange\">\n          </a-tree-select>\n        </a-form-item>\n\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"菜单路径\">\n          <a-input placeholder=\"请输入菜单路径\" v-decorator=\"[ 'url',validatorRules.url]\" :readOnly=\"disableSubmit\"/>\n        </a-form-item>\n\n        <a-form-item\n          v-show=\"show\"\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"前端组件\">\n          <a-input placeholder=\"请输入前端组件\" v-decorator=\"[ 'component',validatorRules.component]\" :readOnly=\"disableSubmit\"/>\n        </a-form-item>\n\n        <a-form-item\n          v-show=\"localMenuType==0\"\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"默认跳转地址\">\n          <a-input placeholder=\"请输入路由参数 redirect\" v-decorator=\"[ 'redirect',{}]\" :readOnly=\"disableSubmit\"/>\n        </a-form-item>\n\n        <a-form-item\n          v-show=\"!show\"\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"授权标识\">\n          <a-input placeholder=\"多个用逗号分隔, 如: user:list,user:create\" v-decorator=\"[ 'perms', {}]\" :readOnly=\"disableSubmit\"/>\n        </a-form-item>\n\n        <a-form-item\n          v-show=\"!show\"\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"授权策略\">\n          <j-dict-select-tag  v-decorator=\"['permsType', {}]\" placeholder=\"请选择授权策略\" :type=\"'radio'\" :triggerChange=\"true\" dictCode=\"global_perms_type\"/>\n\n\n        </a-form-item>\n        <a-form-item\n          v-show=\"!show\"\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"状态\">\n          <j-dict-select-tag  v-decorator=\"['status', {}]\" placeholder=\"请选择状态\" :type=\"'radio'\" :triggerChange=\"true\" dictCode=\"valid_status\"/>\n\n        </a-form-item>\n\n        <a-form-item\n          v-show=\"show\"\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"菜单图标\">\n          <a-input placeholder=\"点击右侧按钮选择图标\" v-model=\"model.icon\" :readOnly=\"disableSubmit\">\n            <a-icon slot=\"addonAfter\" type=\"setting\" @click=\"selectIcons\" />\n          </a-input>\n        </a-form-item>\n\n        <a-form-item\n          v-show=\"show\"\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"排序\">\n          <a-input-number placeholder=\"请输入菜单排序\" style=\"width: 200px\" v-decorator=\"[ 'sortNo',validatorRules.sortNo]\" :readOnly=\"disableSubmit\"/>\n        </a-form-item>\n\n        <a-form-item\n          v-show=\"show\"\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"是否路由菜单\">\n          <a-switch checkedChildren=\"是\" unCheckedChildren=\"否\" v-model=\"routeSwitch\"/>\n        </a-form-item>\n\n        <a-form-item\n          v-show=\"show\"\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"隐藏路由\">\n          <a-switch checkedChildren=\"是\" unCheckedChildren=\"否\" v-model=\"menuHidden\"/>\n        </a-form-item>\n\n        <a-form-item\n          v-show=\"show\"\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"是否缓存路由\">\n          <a-switch checkedChildren=\"是\" unCheckedChildren=\"否\" v-model=\"isKeepalive\"/>\n        </a-form-item>\n\n\n        <a-form-item\n          v-show=\"show\"\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"聚合路由\">\n          <a-switch checkedChildren=\"是\" unCheckedChildren=\"否\" v-model=\"alwaysShow\"/>\n        </a-form-item>\n\n\n      </a-form>\n\n      <!-- 选择图标 -->\n      <icons @choose=\"handleIconChoose\" @close=\"handleIconCancel\" :iconChooseVisible=\"iconChooseVisible\"></icons>\n    </a-spin>\n      <a-row :style=\"{textAlign:'right'}\">\n        <a-button :style=\"{marginRight: '8px'}\" @click=\"handleCancel\">\n          关闭\n        </a-button>\n        <a-button :disabled=\"disableSubmit\" @click=\"handleOk\" type=\"primary\">确定</a-button>\n      </a-row>\n    </div>\n  </a-drawer>\n</template>\n\n<script>\n  import {addPermission,editPermission,queryTreeList} from '@/api/api'\n  import Icons from './icon/Icons'\n  import pick from 'lodash.pick'\n\n\n  export default {\n    name: \"PermissionModal\",\n    components: {Icons},\n    data () {\n      return {\n        drawerWidth:700,\n        treeData:[],\n        treeValue: '0-0-4',\n        title:\"操作\",\n        visible: false,\n        disableSubmit:false,\n        model: {},\n        localMenuType:0,\n        alwaysShow:false,//表单元素-聚合路由\n        menuHidden:false,//表单元素-隐藏路由\n        routeSwitch:true, //是否路由菜单\n        isKeepalive:true, //是否缓存路由\n        show:true,//根据菜单类型，动态显示隐藏表单元素\n        menuLabel:'菜单名称',\n        isRequrie:true,  // 是否需要验证\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n\n        confirmLoading: false,\n        form: this.$form.createForm(this),\n\n        iconChooseVisible: false,\n        validateStatus:\"\"\n      }\n    },\n    computed:{\n      validatorRules:function() {\n        return {\n          name:{rules: [{ required: true, message: '请输入菜单标题!' }]},\n          component:{rules: [{ required: this.show, message: '请输入前端组件!' }]},\n          url:{rules: [{ required: this.show, message: '请输入菜单路径!' }]},\n          permsType:{rules: [{ required: true, message: '请输入授权策略!' }]},\n          sortNo:{initialValue:1.0,rules: [{validator: this.validateNumber}]},\n        }\n      }\n    },\n    created () {\n      this.initDictConfig();\n    },\n    methods: {\n      loadTree(){\n        var that = this;\n        queryTreeList().then((res)=>{\n          if(res.success){\n            console.log('----queryTreeList---')\n            console.log(res)\n            that.treeData = [];\n            let treeList = res.result.treeList\n            for(let a=0;a<treeList.length;a++){\n              let temp = treeList[a];\n              temp.isLeaf = temp.leaf;\n              that.treeData.push(temp);\n            }\n          }\n        });\n      },\n      add () {\n        // 默认值\n        this.edit({status:'1',permsType:'1',route:true});\n      },\n      edit (record) {\n        this.resetScreenSize(); // 调用此方法,根据屏幕宽度自适应调整抽屉的宽度\n        this.form.resetFields();\n        this.model = Object.assign({}, record);\n        //--------------------------------------------------------------------------------------------------\n        //根据菜单类型，动态展示页面字段\n        console.log(record)\n        this.alwaysShow = !record.alwaysShow?false:true;\n        this.menuHidden = !record.hidden?false:true;\n\n        if(record.route!=null){\n          this.routeSwitch = record.route?true:false;\n        }\n        \n        if(record.keepAlive!=null){\n          this.isKeepalive = record.keepAlive?true:false;\n        }else{\n          this.isKeepalive = false; // 升级兼容 如果没有（后台没有传过来、或者是新建）默认为false\n        }\n\n\n\n        //console.log('record.menuType', record.menuType);\n        this.show = record.menuType==2?false:true;\n        this.menuLabel = record.menuType==2?'按钮/权限':'菜单名称';\n\n        if(this.model.parentId){\n          this.localMenuType = 1;\n        }else{\n          this.localMenuType = 0;\n        }\n        //----------------------------------------------------------------------------------------------\n\n        this.visible = true;\n        this.loadTree();\n        let fieldsVal = pick(this.model,'name','perms','permsType','component','url','sortNo','menuType','status');\n        this.$nextTick(() => {\n          this.form.setFieldsValue(fieldsVal)\n        });\n      },\n      close () {\n        this.$emit('close');\n        this.disableSubmit = false;\n        this.visible = false;\n      },\n      handleOk () {\n        const that = this;\n        // 触发表单验证\n        this.form.validateFields((err, values) => {\n          if (!err) {\n            this.model.alwaysShow = this.alwaysShow;\n            this.model.hidden = this.menuHidden;\n            this.model.route = this.routeSwitch;\n            this.model.keepAlive = this.isKeepalive;\n            let formData = Object.assign(this.model, values);\n            if ((formData.menuType == 1 || formData.menuType == 2) && !formData.parentId) {\n              that.validateStatus = 'error';\n              that.$message.error(\"请检查你填的类型以及信息是否正确！\");\n              return;\n            } else {\n              that.validateStatus = 'success';\n            }\n            that.confirmLoading = true;\n            console.log(formData);\n            let obj;\n            if (!this.model.id) {\n              obj = addPermission(formData);\n            } else {\n              obj = editPermission(formData);\n            }\n            obj.then((res) => {\n              if (res.success) {\n                that.$message.success(res.message);\n                that.$emit('ok');\n              } else {\n                that.$message.warning(res.message);\n              }\n            }).finally(() => {\n              that.confirmLoading = false;\n              that.close();\n            });\n          }\n        })\n      },\n      handleCancel () {\n        this.close()\n      },\n      validateNumber(rule, value, callback){\n        if(!value || new RegExp(/^[0-9]*[1-9][0-9]*$/).test(value)){\n          callback();\n        }else{\n          callback(\"请输入正整数!\");\n        }\n      },\n      onChangeMenuType(e) {\n        //console.log('localMenuType checked', e.target.value)\n        this.localMenuType=e.target.value\n        if(e.target.value == 2){\n          this.show = false;\n          this.menuLabel = '按钮/权限';\n        }else{\n          this.show = true;\n          this.menuLabel = '菜单名称';\n        }\n        this.$nextTick(() => {\n          this.form.validateFields(['url','component'], { force: true });\n        });\n      },\n      selectIcons(){\n        this.iconChooseVisible = true\n      },\n      handleIconCancel () {\n        this.iconChooseVisible = false\n      },\n      handleIconChoose (value) {\n        console.log(value)\n        this.model.icon = value\n        this.form.icon = value\n        this.iconChooseVisible = false\n      },\n      // 根据屏幕变化,设置抽屉尺寸\n      resetScreenSize(){\n        let screenWidth = document.body.clientWidth;\n        if(screenWidth < 500){\n          this.drawerWidth = screenWidth;\n        }else{\n          this.drawerWidth = 700;\n        }\n      },\n      initDictConfig() {\n      },\n      handleParentIdChange(value){\n        if(!value){\n          this.validateStatus=\"error\"\n        }else{\n          this.validateStatus=\"success\"\n        }\n      }\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"]}]}