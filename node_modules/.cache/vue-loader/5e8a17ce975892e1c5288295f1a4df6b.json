{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/dict/JMultiSelectTag.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/dict/JMultiSelectTag.vue","mtime":1571018558895},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {ajaxGetDictItems} from '@/api/api'\nexport default {\n  name: 'JMultiSelectTag',\n  props: {\n    dictCode: String,\n    placeholder: String,\n    disabled: Boolean,\n    value: String,\n    type: String,\n    options:Array\n  },\n  data() {\n    return {\n      dictOptions: [],\n      tagType:\"\",\n      arrayValue:!this.value?[]:this.value.split(\",\")\n    }\n  },\n  created() {\n    if(!this.type || this.type===\"list_multi\"){\n      this.tagType = \"select\"\n    }else{\n      this.tagType = this.type\n    }\n    //获取字典数据\n    this.initDictData();\n  },\n  watch:{\n    options: function(val){\n      this.setCurrentDictOptions(val);\n    },\n    value (val) {\n      if(!val){\n        this.arrayValue = []\n      }else{\n        this.arrayValue = this.value.split(\",\")\n      }\n    }\n  },\n  methods: {\n    initDictData() {\n      if(this.options && this.options.length>0){\n        this.dictOptions = [...this.options]\n      }else{\n        //根据字典Code, 初始化字典数组\n        ajaxGetDictItems(this.dictCode, null).then((res) => {\n          if (res.success) {\n            this.dictOptions = res.result;\n          }\n        })\n      }\n\n    },\n    onChange (selectedValue) {\n      this.$emit('change', selectedValue.join(\",\"));\n    },\n    setCurrentDictOptions(dictOptions){\n      this.dictOptions = dictOptions\n    },\n    getCurrentDictOptions(){\n      return this.dictOptions\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  }\n}\n",{"version":3,"sources":["JMultiSelectTag.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JMultiSelectTag.vue","sourceRoot":"src/components/dict","sourcesContent":["<template>\n  <a-checkbox-group v-if=\"tagType=='checkbox'\" @change=\"onChange\" :value=\"arrayValue\" :disabled=\"disabled\">\n    <a-checkbox v-for=\"(item, key) in dictOptions\" :key=\"key\" :value=\"item.value\">{{ item.text || item.label }}</a-checkbox>\n  </a-checkbox-group>\n\n  <a-select\n    v-else-if=\"tagType=='select'\"\n    :value=\"arrayValue\"\n    @change=\"onChange\"\n    :disabled=\"disabled\"\n    mode=\"multiple\"\n    :placeholder=\"placeholder\">\n    <a-select-option\n      v-for=\"(item,index) in dictOptions\"\n      :key=\"index\"\n      :value=\"item.value\">\n      <span style=\"display: inline-block;width: 100%\" :title=\" item.text || item.label \">\n        {{ item.text || item.label }}\n      </span>\n    </a-select-option>\n  </a-select>\n\n</template>\n\n<script>\n  import {ajaxGetDictItems} from '@/api/api'\n  export default {\n    name: 'JMultiSelectTag',\n    props: {\n      dictCode: String,\n      placeholder: String,\n      disabled: Boolean,\n      value: String,\n      type: String,\n      options:Array\n    },\n    data() {\n      return {\n        dictOptions: [],\n        tagType:\"\",\n        arrayValue:!this.value?[]:this.value.split(\",\")\n      }\n    },\n    created() {\n      if(!this.type || this.type===\"list_multi\"){\n        this.tagType = \"select\"\n      }else{\n        this.tagType = this.type\n      }\n      //获取字典数据\n      this.initDictData();\n    },\n    watch:{\n      options: function(val){\n        this.setCurrentDictOptions(val);\n      },\n      value (val) {\n        if(!val){\n          this.arrayValue = []\n        }else{\n          this.arrayValue = this.value.split(\",\")\n        }\n      }\n    },\n    methods: {\n      initDictData() {\n        if(this.options && this.options.length>0){\n          this.dictOptions = [...this.options]\n        }else{\n          //根据字典Code, 初始化字典数组\n          ajaxGetDictItems(this.dictCode, null).then((res) => {\n            if (res.success) {\n              this.dictOptions = res.result;\n            }\n          })\n        }\n\n      },\n      onChange (selectedValue) {\n        this.$emit('change', selectedValue.join(\",\"));\n      },\n      setCurrentDictOptions(dictOptions){\n        this.dictOptions = dictOptions\n      },\n      getCurrentDictOptions(){\n        return this.dictOptions\n      }\n    },\n    model: {\n      prop: 'value',\n      event: 'change'\n    }\n  }\n</script>\n"]}]}