{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/eslint-loader/index.js??ref--13-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/utils/commonUploadFile.js","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/utils/commonUploadFile.js","mtime":1572396946663},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.constructor\";\n\nvar getFileName = function getFileName(path) {\n  if (path.lastIndexOf(\"\\\\\") >= 0) {\n    var reg = new RegExp(\"\\\\\\\\\", \"g\");\n    path = path.replace(reg, \"/\");\n  }\n\n  return path.substring(path.lastIndexOf(\"/\") + 1);\n};\n\nvar uidGenerator = function uidGenerator() {\n  return '-' + parseInt(Math.random() * 10000 + 1, 10);\n};\n\nvar getFilePaths = function getFilePaths(uploadFiles) {\n  var arr = [];\n\n  if (!uploadFiles) {\n    return \"\";\n  }\n\n  for (var a = 0; a < uploadFiles.length; a++) {\n    arr.push(uploadFiles[a].response.message);\n  }\n\n  if (arr && arr.length > 0) {\n    return arr.join(\",\");\n  }\n\n  return \"\";\n};\n\nvar getUploadFileList = function getUploadFileList(paths) {\n  if (!paths) {\n    return [];\n  }\n\n  var fileList = [];\n  var arr = paths.split(\",\");\n\n  for (var a = 0; a < arr.length; a++) {\n    if (!arr[a]) {\n      continue;\n    } else {\n      fileList.push({\n        uid: uidGenerator(),\n        name: getFileName(arr[a]),\n        status: 'done',\n        url: window._CONFIG['downloadURL'] + \"/\" + arr[a],\n        response: {\n          status: \"history\",\n          message: arr[a]\n        }\n      });\n    }\n  }\n\n  return fileList;\n};\n\nexport { getFilePaths, getUploadFileList };",null]}