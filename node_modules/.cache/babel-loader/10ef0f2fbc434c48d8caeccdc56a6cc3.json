{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/dict/JDictSelectTag.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/dict/JDictSelectTag.vue","mtime":1571018558894},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ajaxGetDictItems } from '@/api/api';\nexport default {\n  name: \"JDictSelectTag\",\n  props: {\n    dictCode: String,\n    placeholder: String,\n    triggerChange: Boolean,\n    disabled: Boolean,\n    value: String,\n    type: String\n  },\n  data: function data() {\n    return {\n      dictOptions: [],\n      tagType: \"\"\n    };\n  },\n  created: function created() {\n    console.log(this.dictCode);\n\n    if (!this.type || this.type === \"list\") {\n      this.tagType = \"select\";\n    } else {\n      this.tagType = this.type;\n    } //获取字典数据\n\n\n    this.initDictData();\n  },\n  methods: {\n    initDictData: function initDictData() {\n      var _this = this;\n\n      //根据字典Code, 初始化字典数组\n      ajaxGetDictItems(this.dictCode, null).then(function (res) {\n        if (res.success) {\n          //                console.log(res.result);\n          _this.dictOptions = res.result;\n        }\n      });\n    },\n    handleInput: function handleInput(e) {\n      var val;\n\n      if (this.tagType == \"radio\") {\n        val = e.target.value;\n      } else {\n        val = e;\n      }\n\n      console.log(val);\n\n      if (this.triggerChange) {\n        this.$emit('change', val);\n      } else {\n        this.$emit('input', val);\n      }\n    },\n    setCurrentDictOptions: function setCurrentDictOptions(dictOptions) {\n      this.dictOptions = dictOptions;\n    },\n    getCurrentDictOptions: function getCurrentDictOptions() {\n      return this.dictOptions;\n    }\n  }\n};",{"version":3,"sources":["JDictSelectTag.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAgBA,SAAA,gBAAA,QAAA,WAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA,MADA;AAEA,IAAA,WAAA,EAAA,MAFA;AAGA,IAAA,aAAA,EAAA,OAHA;AAIA,IAAA,QAAA,EAAA,OAJA;AAKA,IAAA,KAAA,EAAA,MALA;AAMA,IAAA,IAAA,EAAA;AANA,GAFA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA;AAIA,GAfA;AAgBA,EAAA,OAhBA,qBAgBA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,KAAA,QAAA;;AACA,QAAA,CAAA,KAAA,IAAA,IAAA,KAAA,IAAA,KAAA,MAAA,EAAA;AACA,WAAA,OAAA,GAAA,QAAA;AACA,KAFA,MAEA;AACA,WAAA,OAAA,GAAA,KAAA,IAAA;AACA,KANA,CAOA;;;AACA,SAAA,YAAA;AACA,GAzBA;AA0BA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AAAA;;AACA;AACA,MAAA,gBAAA,CAAA,KAAA,QAAA,EAAA,IAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,OAAA,EAAA;AACA;AACA,UAAA,KAAA,CAAA,WAAA,GAAA,GAAA,CAAA,MAAA;AACA;AACA,OALA;AAMA,KATA;AAUA,IAAA,WAVA,uBAUA,CAVA,EAUA;AACA,UAAA,GAAA;;AACA,UAAA,KAAA,OAAA,IAAA,OAAA,EAAA;AACA,QAAA,GAAA,GAAA,CAAA,CAAA,MAAA,CAAA,KAAA;AACA,OAFA,MAEA;AACA,QAAA,GAAA,GAAA,CAAA;AACA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,GAAA;;AACA,UAAA,KAAA,aAAA,EAAA;AACA,aAAA,KAAA,CAAA,QAAA,EAAA,GAAA;AACA,OAFA,MAEA;AACA,aAAA,KAAA,CAAA,OAAA,EAAA,GAAA;AACA;AACA,KAvBA;AAwBA,IAAA,qBAxBA,iCAwBA,WAxBA,EAwBA;AACA,WAAA,WAAA,GAAA,WAAA;AACA,KA1BA;AA2BA,IAAA,qBA3BA,mCA2BA;AACA,aAAA,KAAA,WAAA;AACA;AA7BA;AA1BA,CAAA","sourcesContent":["<template>\n  <a-radio-group v-if=\"tagType=='radio'\" @change=\"handleInput\" :value=\"value\" :disabled=\"disabled\">\n    <a-radio v-for=\"(item, key) in dictOptions\" :key=\"key\" :value=\"item.value\">{{ item.text }}</a-radio>\n  </a-radio-group>\n\n  <a-select v-else-if=\"tagType=='select'\" :placeholder=\"placeholder\" :disabled=\"disabled\" :value=\"value\" @change=\"handleInput\">\n    <a-select-option value=\"\">请选择</a-select-option>\n    <a-select-option v-for=\"(item, key) in dictOptions\" :key=\"key\" :value=\"item.value\">\n      <span style=\"display: inline-block;width: 100%\" :title=\" item.text || item.label \">\n        {{ item.text || item.label }}\n      </span>\n    </a-select-option>\n  </a-select>\n</template>\n\n<script>\n  import {ajaxGetDictItems} from '@/api/api'\n\n  export default {\n    name: \"JDictSelectTag\",\n    props: {\n      dictCode: String,\n      placeholder: String,\n      triggerChange: Boolean,\n      disabled: Boolean,\n      value: String,\n      type: String\n    },\n    data() {\n      return {\n        dictOptions: [],\n        tagType:\"\"\n      }\n    },\n    created() {\n      console.log(this.dictCode);\n      if(!this.type || this.type===\"list\"){\n        this.tagType = \"select\"\n      }else{\n        this.tagType = this.type\n      }\n      //获取字典数据\n      this.initDictData();\n    },\n    methods: {\n      initDictData() {\n        //根据字典Code, 初始化字典数组\n        ajaxGetDictItems(this.dictCode, null).then((res) => {\n          if (res.success) {\n//                console.log(res.result);\n            this.dictOptions = res.result;\n          }\n        })\n      },\n      handleInput(e) {\n        let val;\n        if(this.tagType==\"radio\"){\n          val = e.target.value\n        }else{\n          val = e\n        }\n        console.log(val);\n        if(this.triggerChange){\n          this.$emit('change', val);\n        }else{\n          this.$emit('input', val);\n        }\n      },\n      setCurrentDictOptions(dictOptions){\n        this.dictOptions = dictOptions\n      },\n      getCurrentDictOptions(){\n        return this.dictOptions\n      }\n    }\n  }\n</script>\n\n<style scoped>\n</style>"],"sourceRoot":"src/components/dict"}]}