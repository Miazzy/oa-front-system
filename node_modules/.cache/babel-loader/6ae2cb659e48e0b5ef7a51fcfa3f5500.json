{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/DepartUserList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/DepartUserList.vue","mtime":1571018558932},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DeptBaseInfo from \"./modules/DeptBaseInfo\";\nimport DeptUserInfo from \"./modules/DeptUserInfo\";\nimport { queryDepartTreeList, searchByKeywords } from '@/api/api';\nimport { JeecgListMixin } from '@/mixins/JeecgListMixin';\nexport default {\n  name: 'DepartUserList',\n  mixins: [JeecgListMixin],\n  components: {\n    DeptBaseInfo: DeptBaseInfo,\n    DeptUserInfo: DeptUserInfo\n  },\n  data: function data() {\n    return {\n      currentDeptId: '',\n      iExpandedKeys: [],\n      loading: false,\n      autoExpandParent: true,\n      currFlowId: '',\n      currFlowName: '',\n      disable: true,\n      treeData: [],\n      visible: false,\n      departTree: [],\n      rightClickSelectedKey: '',\n      hiding: true,\n      model: {},\n      dropTrigger: '',\n      depart: {},\n      disableSubmit: false,\n      checkedKeys: [],\n      selectedKeys: [],\n      autoIncr: 1,\n      currSelected: {},\n      form: this.$form.createForm(this),\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      graphDatasource: {\n        nodes: [],\n        edges: []\n      }\n    };\n  },\n  methods: {\n    callback: function callback(key) {\n      console.log(key);\n    },\n    loadData: function loadData() {\n      this.refresh();\n    },\n    loadTree: function loadTree() {\n      var _this = this;\n\n      var that = this;\n      that.treeData = [];\n      that.departTree = [];\n      queryDepartTreeList().then(function (res) {\n        if (res.success) {\n          for (var i = 0; i < res.result.length; i++) {\n            var temp = res.result[i];\n            that.treeData.push(temp);\n            that.departTree.push(temp);\n            that.setThisExpandedKeys(temp); // console.log(temp.id)\n          }\n\n          _this.loading = false;\n        }\n      });\n    },\n    setThisExpandedKeys: function setThisExpandedKeys(node) {\n      if (node.children && node.children.length > 0) {\n        this.iExpandedKeys.push(node.key);\n\n        for (var a = 0; a < node.children.length; a++) {\n          this.setThisExpandedKeys(node.children[a]);\n        }\n      }\n    },\n    refresh: function refresh() {\n      this.loading = true;\n      this.loadTree();\n    },\n    onExpand: function onExpand(expandedKeys) {\n      // console.log('onExpand', expandedKeys)\n      // if not set autoExpandParent to false, if children expanded, parent can not collapse.\n      // or, you can remove all expanded children keys.\n      this.iExpandedKeys = expandedKeys;\n      this.autoExpandParent = false;\n    },\n    onSearch: function onSearch(value) {\n      var that = this;\n\n      if (value) {\n        searchByKeywords({\n          keyWord: value\n        }).then(function (res) {\n          if (res.success) {\n            that.departTree = [];\n\n            for (var i = 0; i < res.result.length; i++) {\n              var temp = res.result[i];\n              that.departTree.push(temp);\n            }\n          } else {\n            that.$message.warning(res.message);\n          }\n        });\n      } else {\n        that.loadTree();\n      }\n    },\n    onCheck: function onCheck(checkedKeys, e) {\n      var record = e.node.dataRef; // console.log('onCheck', checkedKeys, e);\n\n      this.checkedKeys = []; // if (e.checked === true) {\n\n      this.currentDeptId = record.id;\n      this.checkedKeys.push(record.id);\n      this.$refs.DeptBaseInfo.open(record);\n      this.$refs.DeptUserInfo.open(record); // }\n      // else {\n      //   this.checkedKeys = [];\n      //   this.$refs.DeptBaseInfo.clearForm();\n      //   this.$refs.DeptUserInfo.clearList();\n      // }\n\n      this.hiding = false; // this.checkedKeys = checkedKeys.checked\n    },\n    onSelect: function onSelect(selectedKeys, e) {\n      if (this.selectedKeys[0] !== selectedKeys[0]) {\n        this.selectedKeys = [selectedKeys[0]];\n      }\n\n      var record = e.node.dataRef;\n      this.checkedKeys.push(record.id);\n      this.$refs.DeptBaseInfo.open(record);\n      this.$refs.DeptUserInfo.onClearSelected();\n      this.$refs.DeptUserInfo.open(record);\n    }\n  },\n  created: function created() {\n    this.currFlowId = this.$route.params.id;\n    this.currFlowName = this.$route.params.name; // this.loadTree()\n  }\n};",{"version":3,"sources":["DepartUserList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-row :gutter=\"10\">\n    <a-col :md=\"8\" :sm=\"24\">\n      <a-card :bordered=\"false\">\n        <div style=\"background: #fff;padding-left:16px;height: 100%; margin-top: 5px\">\n          <a-input-search @search=\"onSearch\" style=\"width:100%;margin-top: 10px\" placeholder=\"请输入部门名称\"/>\n          <!-- 树-->\n\n          <template>\n\n            <!--组织机构-->\n            <a-directory-tree\n              selectable\n              :selectedKeys=\"selectedKeys\"\n              :checkStrictly=\"true\"\n              @select=\"onSelect\"\n              :dropdownStyle=\"{maxHeight:'200px',overflow:'auto'}\"\n              :treeData=\"departTree\"\n            />\n\n          </template>\n\n        </div>\n      </a-card>\n    </a-col>\n    <a-col :md=\"16\" :sm=\"24\">\n      <a-card :bordered=\"false\">\n        <a-tabs defaultActiveKey=\"2\" @change=\"callback\">\n          <a-tab-pane tab=\"基本信息\" key=\"1\" forceRender>\n            <Dept-Base-Info ref=\"DeptBaseInfo\"></Dept-Base-Info>\n          </a-tab-pane>\n          <a-tab-pane tab=\"用户信息\" key=\"2\">\n            <Dept-User-Info ref=\"DeptUserInfo\"></Dept-User-Info>\n          </a-tab-pane>\n        </a-tabs>\n      </a-card>\n    </a-col>\n  </a-row>\n</template>\n<script>\n  import DeptBaseInfo from './modules/DeptBaseInfo'\n  import DeptUserInfo from './modules/DeptUserInfo'\n  import {queryDepartTreeList, searchByKeywords} from '@/api/api'\n  import {JeecgListMixin} from '@/mixins/JeecgListMixin'\n\n  export default {\n    name: 'DepartUserList',\n    mixins: [JeecgListMixin],\n    components: {\n      DeptBaseInfo,\n      DeptUserInfo,\n    },\n    data() {\n      return {\n        currentDeptId: '',\n        iExpandedKeys: [],\n        loading: false,\n        autoExpandParent: true,\n        currFlowId: '',\n        currFlowName: '',\n        disable: true,\n        treeData: [],\n        visible: false,\n        departTree: [],\n        rightClickSelectedKey: '',\n        hiding: true,\n        model: {},\n        dropTrigger: '',\n        depart: {},\n        disableSubmit: false,\n        checkedKeys: [],\n        selectedKeys: [],\n        autoIncr: 1,\n        currSelected: {},\n        form: this.$form.createForm(this),\n        labelCol: {\n          xs: {span: 24},\n          sm: {span: 5}\n        },\n        wrapperCol: {\n          xs: {span: 24},\n          sm: {span: 16}\n        },\n        graphDatasource: {\n          nodes: [],\n          edges: []\n        },\n      }\n    },\n    methods: {\n      callback(key) {\n        console.log(key)\n      },\n      loadData() {\n        this.refresh();\n      },\n      loadTree() {\n        var that = this\n        that.treeData = []\n        that.departTree = []\n        queryDepartTreeList().then((res) => {\n          if (res.success) {\n            for (let i = 0; i < res.result.length; i++) {\n              let temp = res.result[i]\n              that.treeData.push(temp)\n              that.departTree.push(temp)\n              that.setThisExpandedKeys(temp)\n              // console.log(temp.id)\n            }\n            this.loading = false\n          }\n        })\n      },\n      setThisExpandedKeys(node) {\n        if (node.children && node.children.length > 0) {\n          this.iExpandedKeys.push(node.key)\n          for (let a = 0; a < node.children.length; a++) {\n            this.setThisExpandedKeys(node.children[a])\n          }\n        }\n      },\n      refresh() {\n        this.loading = true\n        this.loadTree()\n      },\n\n      onExpand(expandedKeys) {\n        // console.log('onExpand', expandedKeys)\n        // if not set autoExpandParent to false, if children expanded, parent can not collapse.\n        // or, you can remove all expanded children keys.\n        this.iExpandedKeys = expandedKeys\n        this.autoExpandParent = false\n      },\n\n      onSearch(value) {\n        let that = this\n        if (value) {\n          searchByKeywords({keyWord: value}).then((res) => {\n            if (res.success) {\n              that.departTree = []\n              for (let i = 0; i < res.result.length; i++) {\n                let temp = res.result[i]\n                that.departTree.push(temp)\n              }\n            } else {\n              that.$message.warning(res.message)\n            }\n          })\n        } else {\n          that.loadTree()\n        }\n\n      },\n      onCheck(checkedKeys, e) {\n        let record = e.node.dataRef;\n        // console.log('onCheck', checkedKeys, e);\n        this.checkedKeys = [];\n        // if (e.checked === true) {\n        this.currentDeptId = record.id;\n        this.checkedKeys.push(record.id);\n\n        this.$refs.DeptBaseInfo.open(record);\n        this.$refs.DeptUserInfo.open(record);\n        // }\n        // else {\n        //   this.checkedKeys = [];\n        //   this.$refs.DeptBaseInfo.clearForm();\n        //   this.$refs.DeptUserInfo.clearList();\n        // }\n\n        this.hiding = false;\n        // this.checkedKeys = checkedKeys.checked\n      },\n      onSelect(selectedKeys, e) {\n        if (this.selectedKeys[0] !== selectedKeys[0]) {\n          this.selectedKeys = [selectedKeys[0]];\n        }\n        let record = e.node.dataRef;\n        this.checkedKeys.push(record.id);\n        this.$refs.DeptBaseInfo.open(record);\n        this.$refs.DeptUserInfo.onClearSelected();\n        this.$refs.DeptUserInfo.open(record);\n      },\n    },\n    created() {\n      this.currFlowId = this.$route.params.id\n      this.currFlowName = this.$route.params.name\n      // this.loadTree()\n    },\n  }\n</script>\n<style scoped>\n  @import '~@assets/less/common.less'\n</style>"],"sourceRoot":"src/views/system"}]}