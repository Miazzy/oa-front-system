{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/eslint-loader/index.js??ref--13-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/permission.js","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/permission.js","mtime":1571018558908},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport Vue from 'vue';\nimport router from \"./router\";\nimport store from \"./store\";\nimport NProgress from 'nprogress'; // progress bar\n\nimport 'nprogress/nprogress.css'; // progress bar style\n\nimport notification from 'ant-design-vue/es/notification';\nimport { ACCESS_TOKEN } from '@/store/mutation-types';\nimport { generateIndexRouter } from \"@/utils/util\";\nNProgress.configure({\n  showSpinner: false\n}); // NProgress Configuration\n\nvar whiteList = ['/user/login', '/user/register', '/user/register-result', '/user/alteration']; // no redirect whitelist\n\nrouter.beforeEach(function (to, from, next) {\n  NProgress.start(); // start progress bar\n\n  if (Vue.ls.get(ACCESS_TOKEN)) {\n    /* has token */\n    if (to.path === '/user/login') {\n      next({\n        path: '/dashboard/workplace'\n      });\n      NProgress.done();\n    } else {\n      if (store.getters.permissionList.length === 0) {\n        store.dispatch('GetPermissionList').then(function (res) {\n          var menuData = res.result.menu;\n          console.log(res.message);\n\n          if (menuData === null || menuData === \"\" || menuData === undefined) {\n            return;\n          }\n\n          var constRoutes = [];\n          constRoutes = generateIndexRouter(menuData); // 添加主界面路由\n\n          store.dispatch('UpdateAppRouter', {\n            constRoutes: constRoutes\n          }).then(function () {\n            // 根据roles权限生成可访问的路由表\n            // 动态添加可访问路由表\n            router.addRoutes(store.getters.addRouters);\n            var redirect = decodeURIComponent(from.query.redirect || to.path);\n\n            if (to.path === redirect) {\n              // hack方法 确保addRoutes已完成 ,set the replace: true so the navigation will not leave a history record\n              next(_objectSpread({}, to, {\n                replace: true\n              }));\n            } else {\n              // 跳转到目的路由\n              next({\n                path: redirect\n              });\n            }\n          });\n        }).catch(function () {\n          /* notification.error({\n             message: '系统提示',\n             description: '请求用户信息失败，请重试！'\n           })*/\n          store.dispatch('Logout').then(function () {\n            next({\n              path: '/user/login',\n              query: {\n                redirect: to.fullPath\n              }\n            });\n          });\n        });\n      } else {\n        next();\n      }\n    }\n  } else {\n    if (whiteList.indexOf(to.path) !== -1) {\n      // 在免登录白名单，直接进入\n      next();\n    } else {\n      next({\n        path: '/user/login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n      NProgress.done(); // if current page is login will not trigger afterEach hook, so manually handle it\n    }\n  }\n});\nrouter.afterEach(function () {\n  NProgress.done(); // finish progress bar\n});",{"version":3,"sources":["/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/permission.js"],"names":["Vue","router","store","NProgress","notification","ACCESS_TOKEN","generateIndexRouter","configure","showSpinner","whiteList","beforeEach","to","from","next","start","ls","get","path","done","getters","permissionList","length","dispatch","then","res","menuData","result","menu","console","log","message","undefined","constRoutes","addRoutes","addRouters","redirect","decodeURIComponent","query","replace","catch","fullPath","indexOf","afterEach"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport router from './router'\nimport store from './store'\nimport NProgress from 'nprogress' // progress bar\nimport 'nprogress/nprogress.css' // progress bar style\nimport notification from 'ant-design-vue/es/notification'\nimport { ACCESS_TOKEN } from '@/store/mutation-types'\nimport { generateIndexRouter } from \"@/utils/util\"\n\nNProgress.configure({ showSpinner: false }) // NProgress Configuration\n\nconst whiteList = ['/user/login', '/user/register', '/user/register-result','/user/alteration'] // no redirect whitelist\n\nrouter.beforeEach((to, from, next) => {\n  NProgress.start() // start progress bar\n\n  if (Vue.ls.get(ACCESS_TOKEN)) {\n    /* has token */\n    if (to.path === '/user/login') {\n      next({ path: '/dashboard/workplace' })\n      NProgress.done()\n    } else {\n      if (store.getters.permissionList.length === 0) {\n        store.dispatch('GetPermissionList').then(res => {\n              const menuData = res.result.menu;\n              console.log(res.message)\n              if (menuData === null || menuData === \"\" || menuData === undefined) {\n                return;\n              }\n              let constRoutes = [];\n              constRoutes = generateIndexRouter(menuData);\n              // 添加主界面路由\n              store.dispatch('UpdateAppRouter',  { constRoutes }).then(() => {\n                // 根据roles权限生成可访问的路由表\n                // 动态添加可访问路由表\n                router.addRoutes(store.getters.addRouters)\n                const redirect = decodeURIComponent(from.query.redirect || to.path)\n                if (to.path === redirect) {\n                  // hack方法 确保addRoutes已完成 ,set the replace: true so the navigation will not leave a history record\n                  next({ ...to, replace: true })\n                } else {\n                  // 跳转到目的路由\n                  next({ path: redirect })\n                }\n              })\n            })\n          .catch(() => {\n           /* notification.error({\n              message: '系统提示',\n              description: '请求用户信息失败，请重试！'\n            })*/\n            store.dispatch('Logout').then(() => {\n              next({ path: '/user/login', query: { redirect: to.fullPath } })\n            })\n          })\n      } else {\n        next()\n      }\n    }\n  } else {\n    if (whiteList.indexOf(to.path) !== -1) {\n      // 在免登录白名单，直接进入\n      next()\n    } else {\n      next({ path: '/user/login', query: { redirect: to.fullPath } })\n      NProgress.done() // if current page is login will not trigger afterEach hook, so manually handle it\n    }\n  }\n})\n\nrouter.afterEach(() => {\n  NProgress.done() // finish progress bar\n})\n"]}]}