{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/UserModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/UserModal.vue","mtime":1571018558937},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":1565525386522},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport pick from 'lodash.pick';\nimport moment from 'moment';\nimport Vue from 'vue'; // 引入搜索部门弹出框的组件\n\nimport departWindow from \"./DepartWindow\";\nimport { ACCESS_TOKEN } from \"@/store/mutation-types\";\nimport { getAction } from '@/api/manage';\nimport { addUser, editUser, queryUserRole, queryall } from '@/api/api';\nimport { disabledAuthFilter } from \"@/utils/authFilter\";\nimport { duplicateCheck } from '@/api/api';\nexport default {\n  name: \"RoleModal\",\n  components: {\n    departWindow: departWindow\n  },\n  data: function data() {\n    return {\n      departDisabled: false,\n      //是否是我的部门调用该页面\n      roleDisabled: false,\n      //是否是角色维护调用该页面\n      modalWidth: 800,\n      drawerWidth: 700,\n      modaltoggleFlag: true,\n      confirmDirty: false,\n      selectedDepartKeys: [],\n      //保存用户选择部门id\n      checkedDepartKeys: [],\n      checkedDepartNames: [],\n      // 保存部门的名称 =>title\n      checkedDepartNameString: \"\",\n      // 保存部门的名称 =>title\n      userId: \"\",\n      //保存用户id\n      disableSubmit: false,\n      userDepartModel: {\n        userId: '',\n        departIdList: []\n      },\n      // 保存SysUserDepart的用户部门中间表数据需要的对象\n      dateFormat: \"YYYY-MM-DD\",\n      validatorRules: {\n        username: {\n          rules: [{\n            required: true,\n            message: '请输入用户账号!'\n          }, {\n            validator: this.validateUsername\n          }]\n        },\n        password: {\n          rules: [{\n            required: true,\n            pattern: /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,./]).{8,}$/,\n            message: '密码由8位数字、大小写字母和特殊符号组成!'\n          }, {\n            validator: this.validateToNextPassword\n          }]\n        },\n        confirmpassword: {\n          rules: [{\n            required: true,\n            message: '请重新输入登陆密码!'\n          }, {\n            validator: this.compareToFirstPassword\n          }]\n        },\n        realname: {\n          rules: [{\n            required: true,\n            message: '请输入用户名称!'\n          }]\n        },\n        phone: {\n          rules: [{\n            validator: this.validatePhone\n          }]\n        },\n        email: {\n          rules: [{\n            validator: this.validateEmail\n          }]\n        },\n        roles: {} //  sex:{initialValue:((!this.model.sex)?\"\": (this.model.sex+\"\"))}\n\n      },\n      title: \"操作\",\n      visible: false,\n      model: {},\n      roleList: [],\n      selectedRole: [],\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      uploadLoading: false,\n      confirmLoading: false,\n      headers: {},\n      form: this.$form.createForm(this),\n      picUrl: \"\",\n      url: {\n        fileUpload: window._CONFIG['domianURL'] + \"/sys/common/upload\",\n        imgerver: window._CONFIG['domianURL'] + \"/sys/common/view\",\n        userWithDepart: \"/sys/user/userDepartList\",\n        // 引入为指定用户查看部门信息需要的url\n        userId: \"/sys/user/generateUserId\",\n        // 引入生成添加用户情况下的url\n        syncUserByUserName: \"/process/extActProcess/doSyncUserByUserName\" //同步用户到工作流\n\n      }\n    };\n  },\n  created: function created() {\n    var token = Vue.ls.get(ACCESS_TOKEN);\n    this.headers = {\n      \"X-Access-Token\": token\n    };\n  },\n  computed: {\n    uploadAction: function uploadAction() {\n      return this.url.fileUpload;\n    }\n  },\n  methods: {\n    isDisabledAuth: function isDisabledAuth(code) {\n      return disabledAuthFilter(code);\n    },\n    //窗口最大化切换\n    toggleScreen: function toggleScreen() {\n      if (this.modaltoggleFlag) {\n        this.modalWidth = window.innerWidth;\n      } else {\n        this.modalWidth = 800;\n      }\n\n      this.modaltoggleFlag = !this.modaltoggleFlag;\n    },\n    initialRoleList: function initialRoleList() {\n      var _this = this;\n\n      queryall().then(function (res) {\n        if (res.success) {\n          _this.roleList = res.result;\n        } else {\n          console.log(res.message);\n        }\n      });\n    },\n    loadUserRoles: function loadUserRoles(userid) {\n      var _this2 = this;\n\n      queryUserRole({\n        userid: userid\n      }).then(function (res) {\n        if (res.success) {\n          _this2.selectedRole = res.result;\n        } else {\n          console.log(res.message);\n        }\n      });\n    },\n    refresh: function refresh() {\n      this.selectedDepartKeys = [];\n      this.checkedDepartKeys = [];\n      this.checkedDepartNames = [];\n      this.checkedDepartNameString = \"\";\n      this.userId = \"\";\n    },\n    add: function add() {\n      this.picUrl = \"\";\n      this.refresh();\n      this.edit({\n        activitiSync: '1'\n      });\n    },\n    edit: function edit(record) {\n      var _this3 = this;\n\n      this.resetScreenSize(); // 调用此方法,根据屏幕宽度自适应调整抽屉的宽度\n\n      var that = this;\n      that.initialRoleList();\n      that.checkedDepartNameString = \"\";\n      that.form.resetFields();\n\n      if (record.hasOwnProperty(\"id\")) {\n        that.loadUserRoles(record.id);\n        this.picUrl = \"Has no pic url yet\";\n      }\n\n      that.userId = record.id;\n      that.visible = true;\n      that.model = Object.assign({}, record);\n      that.$nextTick(function () {\n        that.form.setFieldsValue(pick(_this3.model, 'username', 'sex', 'realname', 'email', 'phone', 'activitiSync'));\n      }); // 调用查询用户对应的部门信息的方法\n\n      that.checkedDepartKeys = [];\n      that.loadCheckedDeparts();\n    },\n    //\n    loadCheckedDeparts: function loadCheckedDeparts() {\n      var _this4 = this;\n\n      var that = this;\n\n      if (!that.userId) {\n        return;\n      }\n\n      getAction(that.url.userWithDepart, {\n        userId: that.userId\n      }).then(function (res) {\n        that.checkedDepartNames = [];\n\n        if (res.success) {\n          for (var i = 0; i < res.result.length; i++) {\n            that.checkedDepartNames.push(res.result[i].title);\n            _this4.checkedDepartNameString = _this4.checkedDepartNames.join(\",\");\n            that.checkedDepartKeys.push(res.result[i].key);\n          }\n\n          that.userDepartModel.departIdList = that.checkedDepartKeys;\n        } else {\n          console.log(res.message);\n        }\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n      this.disableSubmit = false;\n      this.selectedRole = [];\n      this.userDepartModel = {\n        userId: '',\n        departIdList: []\n      };\n      this.checkedDepartNames = [];\n      this.checkedDepartNameString = '';\n      this.checkedDepartKeys = [];\n      this.selectedDepartKeys = [];\n    },\n    moment: moment,\n    handleSubmit: function handleSubmit() {\n      var _this5 = this;\n\n      var that = this; // 触发表单验证\n\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          that.confirmLoading = true;\n          var avatar = that.model.avatar;\n\n          if (!values.birthday) {\n            values.birthday = '';\n          } else {\n            values.birthday = values.birthday.format(_this5.dateFormat);\n          }\n\n          var formData = Object.assign(_this5.model, values);\n          formData.avatar = avatar;\n          formData.selectedroles = _this5.selectedRole.length > 0 ? _this5.selectedRole.join(\",\") : '';\n          formData.selecteddeparts = _this5.userDepartModel.departIdList.length > 0 ? _this5.userDepartModel.departIdList.join(\",\") : ''; // that.addDepartsToUser(that,formData); // 调用根据当前用户添加部门信息的方法\n\n          var obj;\n\n          if (!_this5.model.id) {\n            formData.id = _this5.userId;\n            obj = addUser(formData);\n          } else {\n            obj = editUser(formData);\n          }\n\n          obj.then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.checkedDepartNames = [];\n            that.userDepartModel.departIdList = {\n              userId: '',\n              departIdList: []\n            };\n            that.close();\n          });\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    validateToNextPassword: function validateToNextPassword(rule, value, callback) {\n      var form = this.form;\n      var confirmpassword = form.getFieldValue('confirmpassword');\n\n      if (value && confirmpassword && value !== confirmpassword) {\n        callback('两次输入的密码不一样！');\n      }\n\n      if (value && this.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    },\n    compareToFirstPassword: function compareToFirstPassword(rule, value, callback) {\n      var form = this.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('两次输入的密码不一样！');\n      } else {\n        callback();\n      }\n    },\n    validatePhone: function validatePhone(rule, value, callback) {\n      if (!value) {\n        callback();\n      } else {\n        if (new RegExp(/^1[3|4|5|7|8][0-9]\\d{8}$/).test(value)) {\n          var params = {\n            tableName: 'sys_user',\n            fieldName: 'phone',\n            fieldVal: value,\n            dataId: this.userId\n          };\n          duplicateCheck(params).then(function (res) {\n            if (res.success) {\n              callback();\n            } else {\n              callback(\"手机号已存在!\");\n            }\n          });\n        } else {\n          callback(\"请输入正确格式的手机号码!\");\n        }\n      }\n    },\n    validateEmail: function validateEmail(rule, value, callback) {\n      if (!value) {\n        callback();\n      } else {\n        if (new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/).test(value)) {\n          var params = {\n            tableName: 'sys_user',\n            fieldName: 'email',\n            fieldVal: value,\n            dataId: this.userId\n          };\n          duplicateCheck(params).then(function (res) {\n            console.log(res);\n\n            if (res.success) {\n              callback();\n            } else {\n              callback(\"邮箱已存在!\");\n            }\n          });\n        } else {\n          callback(\"请输入正确格式的邮箱!\");\n        }\n      }\n    },\n    validateUsername: function validateUsername(rule, value, callback) {\n      var params = {\n        tableName: 'sys_user',\n        fieldName: 'username',\n        fieldVal: value,\n        dataId: this.userId\n      };\n      duplicateCheck(params).then(function (res) {\n        if (res.success) {\n          callback();\n        } else {\n          callback(\"用户名已存在!\");\n        }\n      });\n    },\n    handleConfirmBlur: function handleConfirmBlur(e) {\n      var value = e.target.value;\n      this.confirmDirty = this.confirmDirty || !!value;\n    },\n    normFile: function normFile(e) {\n      console.log('Upload event:', e);\n\n      if (Array.isArray(e)) {\n        return e;\n      }\n\n      return e && e.fileList;\n    },\n    beforeUpload: function beforeUpload(file) {\n      var fileType = file.type;\n\n      if (fileType.indexOf('image') < 0) {\n        this.$message.warning('请上传图片');\n        return false;\n      } //TODO 验证文件大小\n\n    },\n    handleChange: function handleChange(info) {\n      this.picUrl = \"\";\n\n      if (info.file.status === 'uploading') {\n        this.uploadLoading = true;\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        var response = info.file.response;\n        this.uploadLoading = false;\n        console.log(response);\n\n        if (response.success) {\n          this.model.avatar = response.message;\n          this.picUrl = \"Has no pic url yet\";\n        } else {\n          this.$message.warning(response.message);\n        }\n      }\n    },\n    getAvatarView: function getAvatarView() {\n      return this.url.imgerver + \"/\" + this.model.avatar;\n    },\n    // 搜索用户对应的部门API\n    onSearch: function onSearch() {\n      this.$refs.departWindow.add(this.checkedDepartKeys, this.userId);\n    },\n    // 获取用户对应部门弹出框提交给返回的数据\n    modalFormOk: function modalFormOk(formData) {\n      this.checkedDepartNames = [];\n      this.selectedDepartKeys = [];\n      this.checkedDepartNameString = '';\n      this.userId = formData.userId;\n      this.userDepartModel.userId = formData.userId;\n\n      for (var i = 0; i < formData.departIdList.length; i++) {\n        this.selectedDepartKeys.push(formData.departIdList[i].key);\n        this.checkedDepartNames.push(formData.departIdList[i].title);\n        this.checkedDepartNameString = this.checkedDepartNames.join(\",\");\n      }\n\n      this.userDepartModel.departIdList = this.selectedDepartKeys;\n      this.checkedDepartKeys = this.selectedDepartKeys; //更新当前的选择keys\n    },\n    // 根据屏幕变化,设置抽屉尺寸\n    resetScreenSize: function resetScreenSize() {\n      var screenWidth = document.body.clientWidth;\n\n      if (screenWidth < 500) {\n        this.drawerWidth = screenWidth;\n      } else {\n        this.drawerWidth = 700;\n      }\n    }\n  }\n};",null]}