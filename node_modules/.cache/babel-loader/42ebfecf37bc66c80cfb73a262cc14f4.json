{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/jeecgbiz/modal/JSelectUserByDepModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/jeecgbiz/modal/JSelectUserByDepModal.vue","mtime":1571018558901},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { filterObj } from '@/utils/util';\nimport { queryDepartTreeList, getUserList, queryUserByDepId as _queryUserByDepId, queryUserRoleMap as _queryUserRoleMap } from '@/api/api';\nexport default {\n  name: 'JSelectUserByDepModal',\n  components: {},\n  props: ['modalWidth'],\n  data: function data() {\n    return {\n      queryParam: {\n        username: \"\"\n      },\n      columns: [{\n        title: '用户账号',\n        align: 'center',\n        dataIndex: 'username'\n      }, {\n        title: '真实姓名',\n        align: 'center',\n        dataIndex: 'realname'\n      }, {\n        title: '角色名称',\n        align: 'center',\n        dataIndex: 'roleName'\n      }, {\n        title: '性别',\n        align: 'center',\n        dataIndex: 'sex',\n        customRender: function customRender(text) {\n          if (text === 1) {\n            return '男';\n          } else if (text === 2) {\n            return '女';\n          } else {\n            return text;\n          }\n        }\n      }, {\n        title: '手机号码',\n        align: 'center',\n        dataIndex: 'phone'\n      }, {\n        title: '邮箱',\n        align: 'center',\n        dataIndex: 'email'\n      }],\n      scrollTrigger: {},\n      dataSource: [],\n      selectedKeys: [],\n      userNameArr: [],\n      departName: '',\n      userRolesMap: {},\n      title: '根据部门选择用户',\n      ipagination: {\n        current: 1,\n        pageSize: 10,\n        pageSizeOptions: ['10', '20', '30'],\n        showTotal: function showTotal(total, range) {\n          return range[0] + '-' + range[1] + ' 共' + total + '条';\n        },\n        showQuickJumper: true,\n        showSizeChanger: true,\n        total: 0\n      },\n      isorter: {\n        column: 'createTime',\n        order: 'desc'\n      },\n      selectedRowKeys: [],\n      selectedRows: [],\n      departTree: [],\n      visible: false,\n      form: this.$form.createForm(this)\n    };\n  },\n  created: function created() {\n    // 该方法触发屏幕自适应\n    this.resetScreenSize();\n    this.queryUserRoleMap();\n  },\n  methods: {\n    loadData: function loadData(arg) {\n      var _this = this;\n\n      if (arg === 1) {\n        this.ipagination.current = 1;\n      }\n\n      var params = this.getQueryParams(); //查询条件\n\n      getUserList(params).then(function (res) {\n        if (res.success) {\n          _this.dataSource = res.result.records;\n\n          _this.assignRoleName(_this.dataSource);\n\n          _this.ipagination.total = res.result.total;\n        }\n      });\n    },\n    queryUserRoleMap: function queryUserRoleMap() {\n      var _this2 = this;\n\n      _queryUserRoleMap().then(function (res) {\n        if (res.success) {\n          _this2.userRolesMap = res.result;\n\n          _this2.loadData();\n        }\n      });\n    },\n    // 触发屏幕自适应\n    resetScreenSize: function resetScreenSize() {\n      var screenWidth = document.body.clientWidth;\n\n      if (screenWidth < 500) {\n        this.scrollTrigger = {\n          x: 800\n        };\n      } else {\n        this.scrollTrigger = {};\n      }\n    },\n    showModal: function showModal() {\n      this.visible = true;\n      this.assignRoleName(this.dataSource);\n      this.queryDepartTree();\n      this.form.resetFields();\n    },\n    getQueryParams: function getQueryParams() {\n      var param = Object.assign({}, this.queryParam, this.isorter);\n      param.field = this.getQueryField();\n      param.pageNo = this.ipagination.current;\n      param.pageSize = this.ipagination.pageSize;\n      return filterObj(param);\n    },\n    getQueryField: function getQueryField() {\n      var str = 'id,';\n\n      for (var a = 0; a < this.columns.length; a++) {\n        str += ',' + this.columns[a].dataIndex;\n      }\n\n      return str;\n    },\n    searchReset: function searchReset(num) {\n      var that = this;\n\n      if (num !== 0) {\n        that.queryParam = {};\n        that.loadData(1);\n      }\n\n      that.selectedRowKeys = [];\n      that.userNameArr = [];\n      that.selectedKeys = [];\n    },\n    close: function close() {\n      this.searchReset(0);\n      this.visible = false;\n    },\n    handleTableChange: function handleTableChange(pagination, filters, sorter) {\n      //TODO 筛选\n      if (Object.keys(sorter).length > 0) {\n        this.isorter.column = sorter.field;\n        this.isorter.order = 'ascend' === sorter.order ? 'asc' : 'desc';\n      }\n\n      this.ipagination = pagination;\n      this.loadData();\n    },\n    handleSubmit: function handleSubmit() {\n      var that = this;\n\n      for (var i = 0, len = this.selectedRowKeys.length; i < len; i++) {\n        this.getUserNames(this.selectedRowKeys[i]);\n      }\n\n      that.$emit('ok', that.userNameArr.join(','));\n      that.close();\n    },\n    // 遍历匹配,获取用户真实姓名\n    getUserNames: function getUserNames(rowId) {\n      var dataSource = this.dataSource;\n\n      for (var i = 0, len = dataSource.length; i < len; i++) {\n        if (rowId === dataSource[i].id) {\n          this.userNameArr.push(dataSource[i].realname);\n        }\n      }\n    },\n    // 点击树节点,筛选出对应的用户\n    onSelect: function onSelect(selectedKeys) {\n      if (selectedKeys[0] != null) {\n        this.queryUserByDepId(selectedKeys); // 调用方法根据选选择的id查询用户信息\n\n        if (this.selectedKeys[0] !== selectedKeys[0]) {\n          this.selectedKeys = [selectedKeys[0]];\n        }\n      }\n    },\n    onSelectChange: function onSelectChange(selectedRowKeys, selectionRows) {\n      this.selectedRowKeys = selectedRowKeys;\n      this.selectionRows = selectionRows;\n    },\n    onSearch: function onSearch() {\n      this.loadData(1);\n    },\n    // 根据选择的id来查询用户信息\n    queryUserByDepId: function queryUserByDepId(selectedKeys) {\n      var _this3 = this;\n\n      _queryUserByDepId({\n        id: selectedKeys.toString()\n      }).then(function (res) {\n        if (res.success) {\n          _this3.dataSource = res.result;\n          _this3.ipagination.total = res.result.length;\n\n          _this3.assignRoleName(_this3.dataSource);\n        }\n      });\n    },\n    // 传入用户id,找到匹配的角色名称\n    queryUserRole: function queryUserRole(userId) {\n      var map = this.userRolesMap;\n      var roleName = [];\n\n      for (var key in map) {\n        if (userId === key) {\n          roleName.push(map[key]);\n        }\n      }\n\n      return roleName.join(',');\n    },\n    queryDepartTree: function queryDepartTree() {\n      var _this4 = this;\n\n      queryDepartTreeList().then(function (res) {\n        if (res.success) {\n          _this4.departTree = res.result;\n        }\n      });\n    },\n    // 为角色名称赋值\n    assignRoleName: function assignRoleName(data) {\n      var userId = '';\n      var role = '';\n\n      for (var i = 0, length = data.length; i < length; i++) {\n        userId = this.dataSource[i].id;\n        role = this.queryUserRole(userId);\n        this.dataSource[i].roleName = role;\n      }\n    },\n    modalFormOk: function modalFormOk() {\n      this.loadData();\n    }\n  }\n};",{"version":3,"sources":["JSelectUserByDepModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-modal\n    :width=\"modalWidth\"\n    :visible=\"visible\"\n    :title=\"title\"\n    @ok=\"handleSubmit\"\n    @cancel=\"close\"\n    cancelText=\"关闭\"\n    style=\"margin-top: -70px\"\n    wrapClassName=\"ant-modal-cust-warp\"\n  >\n    <a-row :gutter=\"10\" style=\"background-color: #ececec; padding: 10px; margin: -10px\">\n      <a-col :md=\"6\" :sm=\"24\">\n        <a-card :bordered=\"false\">\n          <!--组织机构-->\n          <a-directory-tree\n            selectable\n            :selectedKeys=\"selectedKeys\"\n            :checkStrictly=\"true\"\n            @select=\"this.onSelect\"\n            :dropdownStyle=\"{maxHeight:'200px',overflow:'auto'}\"\n            :treeData=\"departTree\"\n          />\n        </a-card>\n      </a-col>\n      <a-col :md=\"18\" :sm=\"24\">\n        <a-card :bordered=\"false\">\n          用户账号:\n          <a-input-search\n            :style=\"{width:'150px',marginBottom:'15px'}\"\n            placeholder=\"请输入用户账号\"\n            v-model=\"queryParam.username\"\n            @search=\"onSearch\"\n          ></a-input-search>\n          <a-button @click=\"searchReset(1)\" style=\"margin-left: 20px\" icon=\"redo\">重置</a-button>\n          <!--用户列表-->\n          <a-table\n            ref=\"table\"\n            :scroll=\"scrollTrigger\"\n            size=\"middle\"\n            rowKey=\"id\"\n            :columns=\"columns\"\n            :dataSource=\"dataSource\"\n            :pagination=\"ipagination\"\n            :rowSelection=\"{selectedRowKeys: selectedRowKeys, onChange: onSelectChange}\"\n            @change=\"handleTableChange\">\n          </a-table>\n        </a-card>\n      </a-col>\n    </a-row>\n  </a-modal>\n</template>\n\n<script>\n  import { filterObj } from '@/utils/util'\n  import { queryDepartTreeList, getUserList, queryUserByDepId, queryUserRoleMap } from '@/api/api'\n  export default {\n    name: 'JSelectUserByDepModal',\n    components: {},\n    props:['modalWidth'],\n    data() {\n      return {\n        queryParam: {\n          username:\"\",\n        },\n        columns: [\n          {\n            title: '用户账号',\n            align: 'center',\n            dataIndex: 'username'\n          },\n          {\n            title: '真实姓名',\n            align: 'center',\n            dataIndex: 'realname'\n          },\n          {\n            title: '角色名称',\n            align: 'center',\n            dataIndex: 'roleName'\n          },\n          {\n            title: '性别',\n            align: 'center',\n            dataIndex: 'sex',\n            customRender: function(text) {\n              if (text === 1) {\n                return '男'\n              } else if (text === 2) {\n                return '女'\n              } else {\n                return text\n              }\n            }\n          },\n          {\n            title: '手机号码',\n            align: 'center',\n            dataIndex: 'phone'\n          },\n          {\n            title: '邮箱',\n            align: 'center',\n            dataIndex: 'email'\n          }\n        ],\n        scrollTrigger: {},\n        dataSource: [],\n        selectedKeys: [],\n        userNameArr: [],\n        departName: '',\n        userRolesMap: {},\n        title: '根据部门选择用户',\n        ipagination: {\n          current: 1,\n          pageSize: 10,\n          pageSizeOptions: ['10', '20', '30'],\n          showTotal: (total, range) => {\n            return range[0] + '-' + range[1] + ' 共' + total + '条'\n          },\n          showQuickJumper: true,\n          showSizeChanger: true,\n          total: 0\n        },\n        isorter: {\n          column: 'createTime',\n          order: 'desc'\n        },\n        selectedRowKeys: [],\n        selectedRows: [],\n        departTree: [],\n        visible: false,\n        form: this.$form.createForm(this)\n      }\n    },\n    created() {\n      // 该方法触发屏幕自适应\n      this.resetScreenSize();\n      this.queryUserRoleMap();\n    },\n    methods: {\n      loadData(arg) {\n        if (arg === 1) {\n          this.ipagination.current = 1;\n        }\n        let params = this.getQueryParams();//查询条件\n        getUserList(params).then((res) => {\n          if (res.success) {\n            this.dataSource = res.result.records;\n            this.assignRoleName(this.dataSource);\n            this.ipagination.total = res.result.total;\n          }\n        })\n      },\n      queryUserRoleMap(){\n        queryUserRoleMap().then((res) => {\n          if (res.success) {\n            this.userRolesMap = res.result;\n            this.loadData();\n          }\n        })\n      },\n      // 触发屏幕自适应\n      resetScreenSize() {\n        let screenWidth = document.body.clientWidth;\n        if (screenWidth < 500) {\n          this.scrollTrigger = { x: 800 };\n        } else {\n          this.scrollTrigger = {};\n        }\n      },\n      showModal() {\n        this.visible = true;\n        this.assignRoleName(this.dataSource);\n        this.queryDepartTree();\n        this.form.resetFields();\n      },\n      getQueryParams() {\n        let param = Object.assign({}, this.queryParam, this.isorter);\n        param.field = this.getQueryField();\n        param.pageNo = this.ipagination.current;\n        param.pageSize = this.ipagination.pageSize;\n        return filterObj(param);\n      },\n      getQueryField() {\n        let str = 'id,';\n        for (let a = 0; a < this.columns.length; a++) {\n          str += ',' + this.columns[a].dataIndex;\n        }\n        return str;\n      },\n      searchReset(num) {\n        let that = this;\n        if(num !== 0){\n          that.queryParam = {};\n          that.loadData(1);\n        }\n        that.selectedRowKeys = [];\n        that.userNameArr = [];\n        that.selectedKeys = [];\n      },\n      close() {\n        this.searchReset(0);\n        this.visible = false;\n      },\n      handleTableChange(pagination, filters, sorter) {\n        //TODO 筛选\n        if (Object.keys(sorter).length > 0) {\n          this.isorter.column = sorter.field;\n          this.isorter.order = 'ascend' === sorter.order ? 'asc' : 'desc';\n        }\n        this.ipagination = pagination;\n        this.loadData();\n      },\n      handleSubmit() {\n        let that = this;\n        for (let i = 0, len = this.selectedRowKeys.length; i < len; i++) {\n          this.getUserNames(this.selectedRowKeys[i]);\n        }\n        that.$emit('ok', that.userNameArr.join(','));\n        that.close();\n      },\n      // 遍历匹配,获取用户真实姓名\n      getUserNames(rowId) {\n        let dataSource = this.dataSource;\n        for (let i = 0, len = dataSource.length; i < len; i++) {\n          if (rowId === dataSource[i].id) {\n            this.userNameArr.push(dataSource[i].realname);\n          }\n        }\n      },\n      // 点击树节点,筛选出对应的用户\n      onSelect(selectedKeys) {\n        if (selectedKeys[0] != null) {\n          this.queryUserByDepId(selectedKeys); // 调用方法根据选选择的id查询用户信息\n          if (this.selectedKeys[0] !== selectedKeys[0]) {\n            this.selectedKeys = [selectedKeys[0]];\n          }\n        }\n      },\n      onSelectChange(selectedRowKeys, selectionRows) {\n        this.selectedRowKeys = selectedRowKeys;\n        this.selectionRows = selectionRows;\n      },\n      onSearch() {\n        this.loadData(1);\n      },\n      // 根据选择的id来查询用户信息\n      queryUserByDepId(selectedKeys) {\n        queryUserByDepId({ id: selectedKeys.toString() }).then((res) => {\n          if (res.success) {\n            this.dataSource = res.result;\n            this.ipagination.total = res.result.length;\n            this.assignRoleName(this.dataSource);\n          }\n        })\n      },\n      // 传入用户id,找到匹配的角色名称\n      queryUserRole(userId) {\n        let map = this.userRolesMap;\n        let roleName = [];\n        for (var key in map) {\n          if (userId === key) {\n            roleName.push(map[key]);\n          }\n        }\n        return roleName.join(',');\n      },\n      queryDepartTree() {\n        queryDepartTreeList().then((res) => {\n          if (res.success) {\n            this.departTree = res.result;\n          }\n        })\n      },\n      // 为角色名称赋值\n      assignRoleName(data) {\n        let userId = '';\n        let role = '';\n        for (let i = 0, length = data.length; i < length; i++) {\n          userId = this.dataSource[i].id;\n          role = this.queryUserRole(userId);\n          this.dataSource[i].roleName = role;\n        }\n      },\n      modalFormOk() {\n        this.loadData();\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .ant-table-tbody .ant-table-row td {\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n\n  #components-layout-demo-custom-trigger .trigger {\n    font-size: 18px;\n    line-height: 64px;\n    padding: 0 24px;\n    cursor: pointer;\n    transition: color .3s;\n  }\n</style>"],"sourceRoot":"src/components/jeecgbiz/modal"}]}