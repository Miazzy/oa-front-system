{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/tools/UserPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/tools/UserPassword.vue","mtime":1571018558907},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { putAction } from '@/api/manage';\nexport default {\n  name: \"UserPassword\",\n  data: function data() {\n    return {\n      title: \"修改密码\",\n      modalWidth: 800,\n      visible: false,\n      confirmLoading: false,\n      validatorRules: {\n        oldpassword: {\n          rules: [{\n            required: true,\n            message: '请输入旧密码!'\n          }]\n        },\n        password: {\n          rules: [{\n            required: true,\n            message: '请输入新密码!'\n          }, {\n            validator: this.validateToNextPassword\n          }]\n        },\n        confirmpassword: {\n          rules: [{\n            required: true,\n            message: '请确认新密码!'\n          }, {\n            validator: this.compareToFirstPassword\n          }]\n        }\n      },\n      confirmDirty: false,\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      form: this.$form.createForm(this),\n      url: \"sys/user/updatePassword\",\n      username: \"\"\n    };\n  },\n  methods: {\n    show: function show(uname) {\n      if (!uname) {\n        this.$message.warning(\"当前系统无登陆用户!\");\n        return;\n      } else {\n        this.username = uname;\n        this.form.resetFields();\n        this.visible = true;\n      }\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n      this.disableSubmit = false;\n      this.selectedRole = [];\n    },\n    handleOk: function handleOk() {\n      var _this = this;\n\n      var that = this; // 触发表单验证\n\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          that.confirmLoading = true;\n          var params = Object.assign({\n            username: _this.username\n          }, values);\n          console.log(\"修改密码提交数据\", params);\n          putAction(_this.url, params).then(function (res) {\n            if (res.success) {\n              console.log(res);\n              that.$message.success(res.message);\n              that.close();\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n          });\n        }\n      });\n    },\n    validateToNextPassword: function validateToNextPassword(rule, value, callback) {\n      var form = this.form;\n\n      if (value && this.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    },\n    compareToFirstPassword: function compareToFirstPassword(rule, value, callback) {\n      var form = this.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('两次输入的密码不一样！');\n      } else {\n        callback();\n      }\n    },\n    handleConfirmBlur: function handleConfirmBlur(e) {\n      var value = e.target.value;\n      this.confirmDirty = this.confirmDirty || !!value;\n    }\n  }\n};",{"version":3,"sources":["UserPassword.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-modal\n    :title=\"title\"\n    :width=\"modalWidth\"\n    :visible=\"visible\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleOk\"\n    @cancel=\"handleCancel\"\n    cancelText=\"关闭\"\n  >\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form :form=\"form\">\n\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"旧密码\">\n          <a-input type=\"password\" placeholder=\"请输入旧密码\" v-decorator=\"[ 'oldpassword', validatorRules.oldpassword]\" />\n        </a-form-item>\n\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"新密码\">\n          <a-input type=\"password\" placeholder=\"请输入新密码\" v-decorator=\"[ 'password', validatorRules.password]\" />\n        </a-form-item>\n\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"确认新密码\">\n          <a-input type=\"password\" @blur=\"handleConfirmBlur\" placeholder=\"请确认新密码\" v-decorator=\"[ 'confirmpassword', validatorRules.confirmpassword]\"/>\n        </a-form-item>\n\n      </a-form>\n    </a-spin>\n  </a-modal>\n</template>\n\n<script>\n\n  import { putAction } from '@/api/manage'\n\n  export default {\n    name: \"UserPassword\",\n    data () {\n      return {\n        title:\"修改密码\",\n        modalWidth:800,\n        visible: false,\n        confirmLoading: false,\n        validatorRules:{\n          oldpassword:{\n            rules: [{\n              required: true, message: '请输入旧密码!',\n            }],\n          },\n          password:{\n            rules: [{\n              required: true, message: '请输入新密码!',\n            }, {\n              validator: this.validateToNextPassword,\n            }],\n          },\n          confirmpassword:{\n            rules: [{\n              required: true, message: '请确认新密码!',\n            }, {\n              validator: this.compareToFirstPassword,\n            }],\n          }\n        },\n        confirmDirty:false,\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n\n        form:this.$form.createForm(this),\n        url: \"sys/user/updatePassword\",\n        username:\"\",\n      }\n    },\n    methods: {\n      show(uname){\n        if(!uname){\n          this.$message.warning(\"当前系统无登陆用户!\");\n          return\n        }else{\n          this.username = uname\n          this.form.resetFields();\n          this.visible = true;\n        }\n      },\n      handleCancel () {\n        this.close()\n      },\n      close () {\n        this.$emit('close');\n        this.visible = false;\n        this.disableSubmit = false;\n        this.selectedRole = [];\n      },\n      handleOk () {\n        const that = this;\n        // 触发表单验证\n        this.form.validateFields((err, values) => {\n          if (!err) {\n            that.confirmLoading = true;\n            let params = Object.assign({username:this.username},values)\n            console.log(\"修改密码提交数据\",params)\n            putAction(this.url,params).then((res)=>{\n              if(res.success){\n                console.log(res)\n                that.$message.success(res.message);\n                that.close();\n              }else{\n                that.$message.warning(res.message);\n              }\n            }).finally(() => {\n              that.confirmLoading = false;\n            })\n          }\n        })\n      },\n      validateToNextPassword  (rule, value, callback) {\n        const form = this.form;\n        if (value && this.confirmDirty) {\n          form.validateFields(['confirm'], { force: true })\n        }\n        callback();\n      },\n      compareToFirstPassword  (rule, value, callback) {\n        const form = this.form;\n        if (value && value !== form.getFieldValue('password')) {\n          callback('两次输入的密码不一样！');\n        } else {\n          callback()\n        }\n      },\n      handleConfirmBlur  (e) {\n        const value = e.target.value\n        this.confirmDirty = this.confirmDirty || !!value\n      }\n\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>\n\n"],"sourceRoot":"src/components/tools"}]}