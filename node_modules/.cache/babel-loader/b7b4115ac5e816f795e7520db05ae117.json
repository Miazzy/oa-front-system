{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/page/GlobalLayout.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/page/GlobalLayout.vue","mtime":1571018558903},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":1565525386522},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SideMenu from '@/components/menu/SideMenu';\nimport GlobalHeader from '@/components/page/GlobalHeader';\nimport GlobalFooter from '@/components/page/GlobalFooter';\nimport SettingDrawer from '@/components/setting/SettingDrawer';\nimport { triggerWindowResizeEvent } from '@/utils/util';\nimport { mapState, mapActions } from 'vuex';\nimport { mixin, mixinDevice } from '@/utils/mixin.js';\nexport default {\n  name: 'GlobalLayout',\n  components: {\n    SideMenu: SideMenu,\n    GlobalHeader: GlobalHeader,\n    GlobalFooter: GlobalFooter,\n    SettingDrawer: SettingDrawer\n  },\n  mixins: [mixin, mixinDevice],\n  data: function data() {\n    return {\n      collapsed: false,\n      activeMenu: {},\n      menus: []\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    // 主路由\n    mainRouters: function mainRouters(state) {\n      return state.permission.addRouters;\n    },\n    // 后台菜单\n    permissionMenuList: function permissionMenuList(state) {\n      return state.user.permissionList;\n    }\n  })),\n  watch: {\n    sidebarOpened: function sidebarOpened(val) {\n      this.collapsed = !val;\n    }\n  },\n  created: function created() {\n    //--update-begin----author:scott---date:20190320------for:根据后台菜单配置，判断是否路由菜单字段，动态选择是否生成路由（为了支持参数URL菜单）------\n    //this.menus = this.mainRouters.find((item) => item.path === '/').children;\n    this.menus = this.permissionMenuList; // 根据后台配置菜单，重新排序加载路由信息\n\n    console.log('----加载菜单逻辑----');\n    console.log(this.mainRouters);\n    console.log(this.permissionMenuList);\n    console.log('----navTheme------' + this.navTheme); //--update-end----author:scott---date:20190320------for:根据后台菜单配置，判断是否路由菜单字段，动态选择是否生成路由（为了支持参数URL菜单）------\n  },\n  methods: _objectSpread({}, mapActions(['setSidebar']), {\n    toggle: function toggle() {\n      this.collapsed = !this.collapsed;\n      this.setSidebar(!this.collapsed);\n      triggerWindowResizeEvent();\n    },\n    menuSelect: function menuSelect() {\n      if (!this.isDesktop()) {\n        this.collapsed = false;\n      }\n    },\n    //update-begin-author:taoyan date:20190430 for:动态路由title显示配置的菜单title而不是其对应路由的title\n    myMenuSelect: function myMenuSelect(value) {\n      //此处触发动态路由被点击事件\n      this.findMenuBykey(this.menus, value.key);\n      this.$emit(\"dynamicRouterShow\", value.key, this.activeMenu.meta.title);\n    },\n    findMenuBykey: function findMenuBykey(menus, key) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = menus[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var i = _step.value;\n\n          if (i.path == key) {\n            this.activeMenu = _objectSpread({}, i);\n          } else if (i.children && i.children.length > 0) {\n            this.findMenuBykey(i.children, key);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    } //update-end-author:taoyan date:20190430 for:动态路由title显示配置的菜单title而不是其对应路由的title\n\n  })\n};",null]}