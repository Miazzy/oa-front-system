{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/user/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/user/Login.vue","mtime":1571284289648},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport _objectSpread from \"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//import md5 from \"md5\"\nimport api from '@/api';\nimport TwoStepCaptcha from '@/components/tools/TwoStepCaptcha';\nimport { mapActions } from 'vuex';\nimport { timeFix } from '@/utils/util';\nimport Vue from 'vue';\nimport { ACCESS_TOKEN, ENCRYPTED_STRING } from '@/store/mutation-types';\nimport JGraphicCode from '@/components/jeecg/JGraphicCode';\nimport { putAction } from '@/api/manage';\nimport { postAction } from '@/api/manage';\nimport { encryption, getEncryptedString } from '@/utils/encryption/aesEncrypt';\nimport store from '@/store/';\nimport { USER_INFO } from '@/store/mutation-types';\nexport default {\n  components: {\n    TwoStepCaptcha: TwoStepCaptcha,\n    JGraphicCode: JGraphicCode\n  },\n  data: function data() {\n    return {\n      customActiveKey: 'tab1',\n      loginBtn: false,\n      // login type: 0 email, 1 username, 2 telephone\n      loginType: 0,\n      requiredTwoStepCaptcha: false,\n      stepCaptchaVisible: false,\n      form: this.$form.createForm(this),\n      encryptedString: {\n        key: '',\n        iv: ''\n      },\n      state: {\n        time: 60,\n        smsSendBtn: false\n      },\n      formLogin: {\n        username: '',\n        password: '',\n        captcha: '',\n        mobile: '',\n        rememberMe: true\n      },\n      validatorRules: {\n        username: {\n          rules: [{\n            required: true,\n            message: '请输入用户名!',\n            validator: 'click'\n          }]\n        },\n        password: {\n          rules: [{\n            required: true,\n            message: '请输入密码!',\n            validator: 'click'\n          }]\n        },\n        mobile: {\n          rules: [{\n            validator: this.validateMobile\n          }]\n        },\n        captcha: {\n          rule: [{\n            required: true,\n            message: '请输入验证码!'\n          }]\n        },\n        inputCode: {\n          rules: [{\n            required: true,\n            message: '请输入验证码!'\n          }, {\n            validator: this.validateInputCode\n          }]\n        }\n      },\n      verifiedCode: '',\n      inputCodeContent: '',\n      inputCodeNull: true,\n      departList: [],\n      departVisible: false,\n      departSelected: '',\n      currentUsername: '',\n      validate_status: ''\n    };\n  },\n  created: function created() {\n    Vue.ls.remove(ACCESS_TOKEN);\n    this.getRouterData(); // update-begin- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\n    //this.getEncrypte();\n    // update-end- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\n  },\n  methods: _objectSpread({}, mapActions(['Login', 'Logout', 'PhoneLogin']), {\n    // handler\n    handleUsernameOrEmail: function handleUsernameOrEmail(rule, value, callback) {\n      var regex = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/;\n\n      if (regex.test(value)) {\n        this.loginType = 0;\n      } else {\n        this.loginType = 1;\n      }\n\n      callback();\n    },\n    handleTabClick: function handleTabClick(key) {\n      this.customActiveKey = key; // this.form.resetFields()\n    },\n    handleSubmit: function handleSubmit() {\n      var _this = this;\n\n      var that = this;\n      var loginParams = {\n        remember_me: that.formLogin.rememberMe\n      };\n      that.loginBtn = true; // 使用账户密码登陆\n\n      if (that.customActiveKey === 'tab1') {\n        that.form.validateFields(['username', 'password', 'inputCode'], {\n          force: true\n        }, function (err, values) {\n          if (!err) {\n            loginParams.username = values.username; // update-begin- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\n            //loginParams.password = md5(values.password)\n            //loginParams.password = encryption(values.password,that.encryptedString.key,that.encryptedString.iv)\n\n            loginParams.password = values.password; // update-begin- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\n\n            that.Login(loginParams).then(function (res) {\n              _this.departConfirm(res);\n            }).catch(function (err) {\n              that.requestFailed(err);\n            });\n          } else {\n            that.loginBtn = false;\n          }\n        }); // 使用手机号登陆\n      } else {\n        that.form.validateFields(['mobile', 'captcha'], {\n          force: true\n        }, function (err, values) {\n          if (!err) {\n            loginParams.mobile = values.mobile;\n            loginParams.captcha = values.captcha;\n            that.PhoneLogin(loginParams).then(function (res) {\n              console.log(res.result);\n\n              _this.departConfirm(res);\n            }).catch(function (err) {\n              that.requestFailed(err);\n            });\n          }\n        });\n      }\n    },\n    getCaptcha: function getCaptcha(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var that = this;\n      this.form.validateFields(['mobile'], {\n        force: true\n      }, function (err, values) {\n        if (!values.mobile) {\n          that.cmsFailed('请输入手机号');\n        } else if (!err) {\n          _this2.state.smsSendBtn = true;\n          var interval = window.setInterval(function () {\n            if (that.state.time-- <= 0) {\n              that.state.time = 60;\n              that.state.smsSendBtn = false;\n              window.clearInterval(interval);\n            }\n          }, 1000);\n\n          var hide = _this2.$message.loading('验证码发送中..', 0);\n\n          var smsParams = {};\n          smsParams.mobile = values.mobile;\n          smsParams.smsmode = '0';\n          postAction('/sys/sms', smsParams).then(function (res) {\n            if (!res.success) {\n              setTimeout(hide, 0);\n\n              _this2.cmsFailed(res.message);\n            }\n\n            console.log(res);\n            setTimeout(hide, 500);\n          }).catch(function (err) {\n            setTimeout(hide, 1);\n            clearInterval(interval);\n            that.state.time = 60;\n            that.state.smsSendBtn = false;\n\n            _this2.requestFailed(err);\n          });\n        }\n      });\n    },\n    stepCaptchaSuccess: function stepCaptchaSuccess() {\n      this.loginSuccess();\n    },\n    stepCaptchaCancel: function stepCaptchaCancel() {\n      var _this3 = this;\n\n      this.Logout().then(function () {\n        _this3.loginBtn = false;\n        _this3.stepCaptchaVisible = false;\n      });\n    },\n    loginSuccess: function loginSuccess() {\n      // update-begin- author:sunjianlei --- date:20190812 --- for: 登录成功后不解除禁用按钮，防止多次点击\n      // this.loginBtn = false\n      // update-end- author:sunjianlei --- date:20190812 --- for: 登录成功后不解除禁用按钮，防止多次点击\n      this.$router.push({\n        name: 'dashboard'\n      });\n      this.$notification.success({\n        message: '欢迎',\n        description: \"\".concat(timeFix(), \"\\uFF0C\\u6B22\\u8FCE\\u56DE\\u6765\")\n      });\n    },\n    cmsFailed: function cmsFailed(err) {\n      this.$notification['error']({\n        message: '登录失败',\n        description: err,\n        duration: 4\n      });\n    },\n    requestFailed: function requestFailed(err) {\n      this.$notification['error']({\n        message: '登录失败',\n        description: ((err.response || {}).data || {}).message || err.message || '请求出现错误，请稍后再试',\n        duration: 4\n      });\n      this.loginBtn = false;\n    },\n    validateMobile: function validateMobile(rule, value, callback) {\n      if (!value || new RegExp(/^1([38][0-9]|4[579]|5[0-3,5-9]|6[6]|7[0135678]|9[89])\\d{8}$/).test(value)) {\n        callback();\n      } else {\n        callback('您的手机号码格式不正确!');\n      }\n    },\n    validateInputCode: function validateInputCode(rule, value, callback) {\n      if (!value || this.verifiedCode == this.inputCodeContent) {\n        callback();\n      } else {\n        callback('您输入的验证码不正确!');\n      }\n    },\n    generateCode: function generateCode(value) {\n      this.verifiedCode = value.toLowerCase();\n    },\n    inputCodeChange: function inputCodeChange(e) {\n      this.inputCodeContent = e.target.value;\n\n      if (!e.target.value || 0 == e.target.value) {\n        this.inputCodeNull = true;\n      } else {\n        this.inputCodeContent = this.inputCodeContent.toLowerCase();\n        this.inputCodeNull = false;\n      }\n    },\n    departConfirm: function departConfirm(res) {\n      if (res.success) {\n        var multi_depart = res.result.multi_depart; //0:无部门 1:一个部门 2:多个部门\n\n        if (multi_depart == 0) {\n          this.loginSuccess();\n          this.$notification.warn({\n            message: '提示',\n            description: \"\\u60A8\\u5C1A\\u672A\\u5F52\\u5C5E\\u90E8\\u95E8,\\u8BF7\\u786E\\u8BA4\\u8D26\\u53F7\\u4FE1\\u606F\",\n            duration: 3\n          });\n        } else if (multi_depart == 2) {\n          this.departVisible = true;\n          this.currentUsername = this.form.getFieldValue('username');\n          this.departList = res.result.departs;\n        } else {\n          this.loginSuccess();\n        }\n      } else {\n        this.requestFailed(res);\n        this.Logout();\n      }\n    },\n    departOk: function departOk() {\n      var _this4 = this;\n\n      if (!this.departSelected) {\n        this.validate_status = 'error';\n        return false;\n      }\n\n      var obj = {\n        orgCode: this.departSelected,\n        username: this.form.getFieldValue('username')\n      };\n      putAction('/sys/selectDepart', obj).then(function (res) {\n        if (res.success) {\n          var userInfo = res.result.userInfo;\n          Vue.ls.set(USER_INFO, userInfo, 7 * 24 * 60 * 60 * 1000);\n          store.commit('SET_INFO', userInfo); //console.log(\"---切换组织机构---userInfo-------\",store.getters.userInfo.orgCode);\n\n          _this4.departClear();\n\n          _this4.loginSuccess();\n        } else {\n          _this4.requestFailed(res);\n\n          _this4.Logout().then(function () {\n            _this4.departClear();\n          });\n        }\n      });\n    },\n    departClear: function departClear() {\n      this.departList = [];\n      this.departSelected = '';\n      this.currentUsername = '';\n      this.departVisible = false;\n      this.validate_status = '';\n    },\n    departChange: function departChange(value) {\n      this.validate_status = 'success';\n      this.departSelected = value;\n    },\n    getRouterData: function getRouterData() {\n      var _this5 = this;\n\n      this.$nextTick(function () {\n        _this5.form.setFieldsValue({\n          username: _this5.$route.params.username\n        });\n      });\n    },\n    //获取密码加密规则\n    getEncrypte: function getEncrypte() {\n      var _this6 = this;\n\n      var encryptedString = Vue.ls.get(ENCRYPTED_STRING);\n\n      if (encryptedString == null) {\n        getEncryptedString().then(function (data) {\n          _this6.encryptedString = data;\n        });\n      } else {\n        this.encryptedString = encryptedString;\n      }\n    }\n  })\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqLA;AACA,OAAA,GAAA,MAAA,OAAA;AACA,OAAA,cAAA,MAAA,mCAAA;AACA,SAAA,UAAA,QAAA,MAAA;AACA,SAAA,OAAA,QAAA,cAAA;AACA,OAAA,GAAA,MAAA,KAAA;AACA,SAAA,YAAA,EAAA,gBAAA,QAAA,wBAAA;AACA,OAAA,YAAA,MAAA,iCAAA;AACA,SAAA,SAAA,QAAA,cAAA;AACA,SAAA,UAAA,QAAA,cAAA;AACA,SAAA,UAAA,EAAA,kBAAA,QAAA,+BAAA;AACA,OAAA,KAAA,MAAA,UAAA;AACA,SAAA,SAAA,QAAA,wBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,cAAA,EAAA,cADA;AAEA,IAAA,YAAA,EAAA;AAFA,GADA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,eAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA;AACA,MAAA,SAAA,EAAA,CAJA;AAKA,MAAA,sBAAA,EAAA,KALA;AAMA,MAAA,kBAAA,EAAA,KANA;AAOA,MAAA,IAAA,EAAA,KAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAPA;AAQA,MAAA,eAAA,EAAA;AACA,QAAA,GAAA,EAAA,EADA;AAEA,QAAA,EAAA,EAAA;AAFA,OARA;AAYA,MAAA,KAAA,EAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,UAAA,EAAA;AAFA,OAZA;AAgBA,MAAA,SAAA,EAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA,EAFA;AAGA,QAAA,OAAA,EAAA,EAHA;AAIA,QAAA,MAAA,EAAA,EAJA;AAKA,QAAA,UAAA,EAAA;AALA,OAhBA;AAuBA,MAAA,cAAA,EAAA;AACA,QAAA,QAAA,EAAA;AAAA,UAAA,KAAA,EAAA,CAAA;AAAA,YAAA,QAAA,EAAA,IAAA;AAAA,YAAA,OAAA,EAAA,SAAA;AAAA,YAAA,SAAA,EAAA;AAAA,WAAA;AAAA,SADA;AAEA,QAAA,QAAA,EAAA;AAAA,UAAA,KAAA,EAAA,CAAA;AAAA,YAAA,QAAA,EAAA,IAAA;AAAA,YAAA,OAAA,EAAA,QAAA;AAAA,YAAA,SAAA,EAAA;AAAA,WAAA;AAAA,SAFA;AAGA,QAAA,MAAA,EAAA;AAAA,UAAA,KAAA,EAAA,CAAA;AAAA,YAAA,SAAA,EAAA,KAAA;AAAA,WAAA;AAAA,SAHA;AAIA,QAAA,OAAA,EAAA;AAAA,UAAA,IAAA,EAAA,CAAA;AAAA,YAAA,QAAA,EAAA,IAAA;AAAA,YAAA,OAAA,EAAA;AAAA,WAAA;AAAA,SAJA;AAKA,QAAA,SAAA,EAAA;AAAA,UAAA,KAAA,EAAA,CAAA;AAAA,YAAA,QAAA,EAAA,IAAA;AAAA,YAAA,OAAA,EAAA;AAAA,WAAA,EAAA;AAAA,YAAA,SAAA,EAAA,KAAA;AAAA,WAAA;AAAA;AALA,OAvBA;AA8BA,MAAA,YAAA,EAAA,EA9BA;AA+BA,MAAA,gBAAA,EAAA,EA/BA;AAgCA,MAAA,aAAA,EAAA,IAhCA;AAkCA,MAAA,UAAA,EAAA,EAlCA;AAmCA,MAAA,aAAA,EAAA,KAnCA;AAoCA,MAAA,cAAA,EAAA,EApCA;AAqCA,MAAA,eAAA,EAAA,EArCA;AAsCA,MAAA,eAAA,EAAA;AAtCA,KAAA;AAwCA,GA9CA;AA+CA,EAAA,OA/CA,qBA+CA;AACA,IAAA,GAAA,CAAA,EAAA,CAAA,MAAA,CAAA,YAAA;AACA,SAAA,aAAA,GAFA,CAGA;AACA;AACA;AACA,GArDA;AAsDA,EAAA,OAAA,oBACA,UAAA,CAAA,CAAA,OAAA,EAAA,QAAA,EAAA,YAAA,CAAA,CADA;AAEA;AACA,IAAA,qBAHA,iCAGA,IAHA,EAGA,KAHA,EAGA,QAHA,EAGA;AACA,UAAA,KAAA,GAAA,kEAAA;;AACA,UAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,EAAA;AACA,aAAA,SAAA,GAAA,CAAA;AACA,OAFA,MAEA;AACA,aAAA,SAAA,GAAA,CAAA;AACA;;AACA,MAAA,QAAA;AACA,KAXA;AAYA,IAAA,cAZA,0BAYA,GAZA,EAYA;AACA,WAAA,eAAA,GAAA,GAAA,CADA,CAEA;AACA,KAfA;AAgBA,IAAA,YAhBA,0BAgBA;AAAA;;AACA,UAAA,IAAA,GAAA,IAAA;AACA,UAAA,WAAA,GAAA;AACA,QAAA,WAAA,EAAA,IAAA,CAAA,SAAA,CAAA;AADA,OAAA;AAGA,MAAA,IAAA,CAAA,QAAA,GAAA,IAAA,CALA,CAMA;;AACA,UAAA,IAAA,CAAA,eAAA,KAAA,MAAA,EAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,cAAA,CAAA,CAAA,UAAA,EAAA,UAAA,EAAA,WAAA,CAAA,EAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA,EAAA,UAAA,GAAA,EAAA,MAAA,EAAA;AACA,cAAA,CAAA,GAAA,EAAA;AACA,YAAA,WAAA,CAAA,QAAA,GAAA,MAAA,CAAA,QAAA,CADA,CAEA;AACA;AACA;;AACA,YAAA,WAAA,CAAA,QAAA,GAAA,MAAA,CAAA,QAAA,CALA,CAMA;;AAEA,YAAA,IAAA,CACA,KADA,CACA,WADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,cAAA,KAAA,CAAA,aAAA,CAAA,GAAA;AACA,aAJA,EAKA,KALA,CAKA,UAAA,GAAA,EAAA;AACA,cAAA,IAAA,CAAA,aAAA,CAAA,GAAA;AACA,aAPA;AAQA,WAhBA,MAgBA;AACA,YAAA,IAAA,CAAA,QAAA,GAAA,KAAA;AACA;AACA,SApBA,EADA,CAsBA;AACA,OAvBA,MAuBA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,cAAA,CAAA,CAAA,QAAA,EAAA,SAAA,CAAA,EAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA,EAAA,UAAA,GAAA,EAAA,MAAA,EAAA;AACA,cAAA,CAAA,GAAA,EAAA;AACA,YAAA,WAAA,CAAA,MAAA,GAAA,MAAA,CAAA,MAAA;AACA,YAAA,WAAA,CAAA,OAAA,GAAA,MAAA,CAAA,OAAA;AACA,YAAA,IAAA,CACA,UADA,CACA,WADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,cAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,MAAA;;AACA,cAAA,KAAA,CAAA,aAAA,CAAA,GAAA;AACA,aALA,EAMA,KANA,CAMA,UAAA,GAAA,EAAA;AACA,cAAA,IAAA,CAAA,aAAA,CAAA,GAAA;AACA,aARA;AASA;AACA,SAdA;AAeA;AACA,KA/DA;AAgEA,IAAA,UAhEA,sBAgEA,CAhEA,EAgEA;AAAA;;AACA,MAAA,CAAA,CAAA,cAAA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,WAAA,IAAA,CAAA,cAAA,CAAA,CAAA,QAAA,CAAA,EAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA,EAAA,UAAA,GAAA,EAAA,MAAA,EAAA;AACA,YAAA,CAAA,MAAA,CAAA,MAAA,EAAA;AACA,UAAA,IAAA,CAAA,SAAA,CAAA,QAAA;AACA,SAFA,MAEA,IAAA,CAAA,GAAA,EAAA;AACA,UAAA,MAAA,CAAA,KAAA,CAAA,UAAA,GAAA,IAAA;AACA,cAAA,QAAA,GAAA,MAAA,CAAA,WAAA,CAAA,YAAA;AACA,gBAAA,IAAA,CAAA,KAAA,CAAA,IAAA,MAAA,CAAA,EAAA;AACA,cAAA,IAAA,CAAA,KAAA,CAAA,IAAA,GAAA,EAAA;AACA,cAAA,IAAA,CAAA,KAAA,CAAA,UAAA,GAAA,KAAA;AACA,cAAA,MAAA,CAAA,aAAA,CAAA,QAAA;AACA;AACA,WANA,EAMA,IANA,CAAA;;AAQA,cAAA,IAAA,GAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,UAAA,EAAA,CAAA,CAAA;;AACA,cAAA,SAAA,GAAA,EAAA;AACA,UAAA,SAAA,CAAA,MAAA,GAAA,MAAA,CAAA,MAAA;AACA,UAAA,SAAA,CAAA,OAAA,GAAA,GAAA;AACA,UAAA,UAAA,CAAA,UAAA,EAAA,SAAA,CAAA,CACA,IADA,CACA,UAAA,GAAA,EAAA;AACA,gBAAA,CAAA,GAAA,CAAA,OAAA,EAAA;AACA,cAAA,UAAA,CAAA,IAAA,EAAA,CAAA,CAAA;;AACA,cAAA,MAAA,CAAA,SAAA,CAAA,GAAA,CAAA,OAAA;AACA;;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,YAAA,UAAA,CAAA,IAAA,EAAA,GAAA,CAAA;AACA,WARA,EASA,KATA,CASA,UAAA,GAAA,EAAA;AACA,YAAA,UAAA,CAAA,IAAA,EAAA,CAAA,CAAA;AACA,YAAA,aAAA,CAAA,QAAA,CAAA;AACA,YAAA,IAAA,CAAA,KAAA,CAAA,IAAA,GAAA,EAAA;AACA,YAAA,IAAA,CAAA,KAAA,CAAA,UAAA,GAAA,KAAA;;AACA,YAAA,MAAA,CAAA,aAAA,CAAA,GAAA;AACA,WAfA;AAgBA;AACA,OAlCA;AAmCA,KAtGA;AAuGA,IAAA,kBAvGA,gCAuGA;AACA,WAAA,YAAA;AACA,KAzGA;AA0GA,IAAA,iBA1GA,+BA0GA;AAAA;;AACA,WAAA,MAAA,GAAA,IAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,QAAA,GAAA,KAAA;AACA,QAAA,MAAA,CAAA,kBAAA,GAAA,KAAA;AACA,OAHA;AAIA,KA/GA;AAgHA,IAAA,YAhHA,0BAgHA;AACA;AACA;AACA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,WAAA,aAAA,CAAA,OAAA,CAAA;AACA,QAAA,OAAA,EAAA,IADA;AAEA,QAAA,WAAA,YAAA,OAAA,EAAA;AAFA,OAAA;AAIA,KAzHA;AA0HA,IAAA,SA1HA,qBA0HA,GA1HA,EA0HA;AACA,WAAA,aAAA,CAAA,OAAA,EAAA;AACA,QAAA,OAAA,EAAA,MADA;AAEA,QAAA,WAAA,EAAA,GAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAAA;AAKA,KAhIA;AAiIA,IAAA,aAjIA,yBAiIA,GAjIA,EAiIA;AACA,WAAA,aAAA,CAAA,OAAA,EAAA;AACA,QAAA,OAAA,EAAA,MADA;AAEA,QAAA,WAAA,EAAA,CAAA,CAAA,GAAA,CAAA,QAAA,IAAA,EAAA,EAAA,IAAA,IAAA,EAAA,EAAA,OAAA,IAAA,GAAA,CAAA,OAAA,IAAA,cAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAAA;AAKA,WAAA,QAAA,GAAA,KAAA;AACA,KAxIA;AAyIA,IAAA,cAzIA,0BAyIA,IAzIA,EAyIA,KAzIA,EAyIA,QAzIA,EAyIA;AACA,UAAA,CAAA,KAAA,IAAA,IAAA,MAAA,CAAA,6DAAA,EAAA,IAAA,CAAA,KAAA,CAAA,EAAA;AACA,QAAA,QAAA;AACA,OAFA,MAEA;AACA,QAAA,QAAA,CAAA,cAAA,CAAA;AACA;AACA,KA/IA;AAgJA,IAAA,iBAhJA,6BAgJA,IAhJA,EAgJA,KAhJA,EAgJA,QAhJA,EAgJA;AACA,UAAA,CAAA,KAAA,IAAA,KAAA,YAAA,IAAA,KAAA,gBAAA,EAAA;AACA,QAAA,QAAA;AACA,OAFA,MAEA;AACA,QAAA,QAAA,CAAA,aAAA,CAAA;AACA;AACA,KAtJA;AAuJA,IAAA,YAvJA,wBAuJA,KAvJA,EAuJA;AACA,WAAA,YAAA,GAAA,KAAA,CAAA,WAAA,EAAA;AACA,KAzJA;AA0JA,IAAA,eA1JA,2BA0JA,CA1JA,EA0JA;AACA,WAAA,gBAAA,GAAA,CAAA,CAAA,MAAA,CAAA,KAAA;;AACA,UAAA,CAAA,CAAA,CAAA,MAAA,CAAA,KAAA,IAAA,KAAA,CAAA,CAAA,MAAA,CAAA,KAAA,EAAA;AACA,aAAA,aAAA,GAAA,IAAA;AACA,OAFA,MAEA;AACA,aAAA,gBAAA,GAAA,KAAA,gBAAA,CAAA,WAAA,EAAA;AACA,aAAA,aAAA,GAAA,KAAA;AACA;AACA,KAlKA;AAmKA,IAAA,aAnKA,yBAmKA,GAnKA,EAmKA;AACA,UAAA,GAAA,CAAA,OAAA,EAAA;AACA,YAAA,YAAA,GAAA,GAAA,CAAA,MAAA,CAAA,YAAA,CADA,CAEA;;AACA,YAAA,YAAA,IAAA,CAAA,EAAA;AACA,eAAA,YAAA;AACA,eAAA,aAAA,CAAA,IAAA,CAAA;AACA,YAAA,OAAA,EAAA,IADA;AAEA,YAAA,WAAA,yFAFA;AAGA,YAAA,QAAA,EAAA;AAHA,WAAA;AAKA,SAPA,MAOA,IAAA,YAAA,IAAA,CAAA,EAAA;AACA,eAAA,aAAA,GAAA,IAAA;AACA,eAAA,eAAA,GAAA,KAAA,IAAA,CAAA,aAAA,CAAA,UAAA,CAAA;AACA,eAAA,UAAA,GAAA,GAAA,CAAA,MAAA,CAAA,OAAA;AACA,SAJA,MAIA;AACA,eAAA,YAAA;AACA;AACA,OAjBA,MAiBA;AACA,aAAA,aAAA,CAAA,GAAA;AACA,aAAA,MAAA;AACA;AACA,KAzLA;AA0LA,IAAA,QA1LA,sBA0LA;AAAA;;AACA,UAAA,CAAA,KAAA,cAAA,EAAA;AACA,aAAA,eAAA,GAAA,OAAA;AACA,eAAA,KAAA;AACA;;AACA,UAAA,GAAA,GAAA;AACA,QAAA,OAAA,EAAA,KAAA,cADA;AAEA,QAAA,QAAA,EAAA,KAAA,IAAA,CAAA,aAAA,CAAA,UAAA;AAFA,OAAA;AAIA,MAAA,SAAA,CAAA,mBAAA,EAAA,GAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,OAAA,EAAA;AACA,cAAA,QAAA,GAAA,GAAA,CAAA,MAAA,CAAA,QAAA;AACA,UAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,IAAA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,UAAA,EAAA,QAAA,EAHA,CAIA;;AACA,UAAA,MAAA,CAAA,WAAA;;AACA,UAAA,MAAA,CAAA,YAAA;AACA,SAPA,MAOA;AACA,UAAA,MAAA,CAAA,aAAA,CAAA,GAAA;;AACA,UAAA,MAAA,CAAA,MAAA,GAAA,IAAA,CAAA,YAAA;AACA,YAAA,MAAA,CAAA,WAAA;AACA,WAFA;AAGA;AACA,OAdA;AAeA,KAlNA;AAmNA,IAAA,WAnNA,yBAmNA;AACA,WAAA,UAAA,GAAA,EAAA;AACA,WAAA,cAAA,GAAA,EAAA;AACA,WAAA,eAAA,GAAA,EAAA;AACA,WAAA,aAAA,GAAA,KAAA;AACA,WAAA,eAAA,GAAA,EAAA;AACA,KAzNA;AA0NA,IAAA,YA1NA,wBA0NA,KA1NA,EA0NA;AACA,WAAA,eAAA,GAAA,SAAA;AACA,WAAA,cAAA,GAAA,KAAA;AACA,KA7NA;AA8NA,IAAA,aA9NA,2BA8NA;AAAA;;AACA,WAAA,SAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,IAAA,CAAA,cAAA,CAAA;AACA,UAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AADA,SAAA;AAGA,OAJA;AAKA,KApOA;AAqOA;AACA,IAAA,WAtOA,yBAsOA;AAAA;;AACA,UAAA,eAAA,GAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,gBAAA,CAAA;;AACA,UAAA,eAAA,IAAA,IAAA,EAAA;AACA,QAAA,kBAAA,GAAA,IAAA,CAAA,UAAA,IAAA,EAAA;AACA,UAAA,MAAA,CAAA,eAAA,GAAA,IAAA;AACA,SAFA;AAGA,OAJA,MAIA;AACA,aAAA,eAAA,GAAA,eAAA;AACA;AACA;AA/OA;AAtDA,CAAA","sourcesContent":["<template>\r\n  <div class=\"main\">\r\n    <a-form :form=\"form\" class=\"user-layout-login\" ref=\"formLogin\" id=\"formLogin\">\r\n      <a-tabs\r\n        :activeKey=\"customActiveKey\"\r\n        :tabBarStyle=\"{ textAlign: 'center', borderBottom: 'unset' }\"\r\n        @change=\"handleTabClick\"\r\n      >\r\n        <a-tab-pane key=\"tab1\" tab=\"账号密码登陆\">\r\n          <a-form-item>\r\n            <a-input\r\n              size=\"large\"\r\n              v-decorator=\"['username',validatorRules.username,{ validator: this.handleUsernameOrEmail }]\"\r\n              type=\"text\"\r\n              placeholder=\"请输入帐户名\"\r\n            >\r\n              <a-icon slot=\"prefix\" type=\"user\" :style=\"{ color: 'rgba(0,0,0,.25)' }\" />\r\n            </a-input>\r\n          </a-form-item>\r\n\r\n          <a-form-item>\r\n            <a-input\r\n              v-decorator=\"['password',validatorRules.password]\"\r\n              size=\"large\"\r\n              type=\"password\"\r\n              autocomplete=\"false\"\r\n              placeholder=\"密码\"\r\n            >\r\n              <a-icon slot=\"prefix\" type=\"lock\" :style=\"{ color: 'rgba(0,0,0,.25)' }\" />\r\n            </a-input>\r\n          </a-form-item>\r\n\r\n          <a-row :gutter=\"0\">\r\n            <a-col :span=\"14\">\r\n              <a-form-item>\r\n                <a-input\r\n                  v-decorator=\"['inputCode',validatorRules.inputCode]\"\r\n                  size=\"large\"\r\n                  type=\"text\"\r\n                  @change=\"inputCodeChange\"\r\n                  placeholder=\"请输入验证码\"\r\n                >\r\n                  <a-icon\r\n                    slot=\"prefix\"\r\n                    v-if=\" inputCodeContent==verifiedCode \"\r\n                    type=\"smile\"\r\n                    :style=\"{ color: 'rgba(0,0,0,.25)' }\"\r\n                  />\r\n                  <a-icon slot=\"prefix\" v-else type=\"frown\" :style=\"{ color: 'rgba(0,0,0,.25)' }\" />\r\n                </a-input>\r\n              </a-form-item>\r\n            </a-col>\r\n            <a-col :span=\"10\">\r\n              <j-graphic-code @success=\"generateCode\" style=\"float: right\"></j-graphic-code>\r\n            </a-col>\r\n          </a-row>\r\n        </a-tab-pane>\r\n        <a-tab-pane key=\"tab2\" tab=\"手机号登陆\">\r\n          <a-form-item>\r\n            <a-input\r\n              v-decorator=\"['mobile',validatorRules.mobile]\"\r\n              size=\"large\"\r\n              type=\"text\"\r\n              placeholder=\"手机号\"\r\n            >\r\n              <a-icon slot=\"prefix\" type=\"mobile\" :style=\"{ color: 'rgba(0,0,0,.25)' }\" />\r\n            </a-input>\r\n          </a-form-item>\r\n\r\n          <a-row :gutter=\"16\">\r\n            <a-col class=\"gutter-row\" :span=\"16\">\r\n              <a-form-item>\r\n                <a-input\r\n                  v-decorator=\"['captcha',validatorRules.captcha]\"\r\n                  size=\"large\"\r\n                  type=\"text\"\r\n                  placeholder=\"请输入验证码\"\r\n                >\r\n                  <a-icon slot=\"prefix\" type=\"mail\" :style=\"{ color: 'rgba(0,0,0,.25)' }\" />\r\n                </a-input>\r\n              </a-form-item>\r\n            </a-col>\r\n            <a-col class=\"gutter-row\" :span=\"8\">\r\n              <a-button\r\n                class=\"getCaptcha\"\r\n                tabindex=\"-1\"\r\n                :disabled=\"state.smsSendBtn\"\r\n                @click.stop.prevent=\"getCaptcha\"\r\n                v-text=\"!state.smsSendBtn && '获取验证码' || (state.time+' s')\"\r\n              ></a-button>\r\n            </a-col>\r\n          </a-row>\r\n        </a-tab-pane>\r\n      </a-tabs>\r\n\r\n      <a-form-item>\r\n        <a-checkbox v-model=\"formLogin.rememberMe\">自动登陆</a-checkbox>\r\n        <!--      \r\n        <router-link :to=\"{ name: 'alteration'}\" class=\"forge-password\" style=\"float: right;\">\r\n          忘记密码\r\n        </router-link>\r\n        <router-link :to=\"{ name: 'register'}\" class=\"forge-password\" style=\"float: right;margin-right: 10px\" >\r\n          注册账户\r\n        </router-link>\r\n        -->\r\n      </a-form-item>\r\n\r\n      <a-form-item style=\"margin-top:24px\">\r\n        <a-button\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          class=\"login-button\"\r\n          :loading=\"loginBtn\"\r\n          @click.stop.prevent=\"handleSubmit\"\r\n          :disabled=\"loginBtn\"\r\n        >确定</a-button>\r\n      </a-form-item>\r\n\r\n      <!-- <div class=\"user-login-other\">\r\n        <span>其他登陆方式</span>\r\n        <a><a-icon class=\"item-icon\" type=\"alipay-circle\"></a-icon></a>\r\n        <a><a-icon class=\"item-icon\" type=\"taobao-circle\"></a-icon></a>\r\n        <a><a-icon class=\"item-icon\" type=\"weibo-circle\"></a-icon></a>\r\n        <router-link class=\"register\" :to=\"{ name: 'register' }\">\r\n          注册账户\r\n        </router-link>\r\n      </div>-->\r\n    </a-form>\r\n\r\n    <two-step-captcha\r\n      v-if=\"requiredTwoStepCaptcha\"\r\n      :visible=\"stepCaptchaVisible\"\r\n      @success=\"stepCaptchaSuccess\"\r\n      @cancel=\"stepCaptchaCancel\"\r\n    ></two-step-captcha>\r\n\r\n    <a-modal\r\n      title=\"登录部门选择\"\r\n      :width=\"450\"\r\n      :visible=\"departVisible\"\r\n      :closable=\"false\"\r\n      :maskClosable=\"false\"\r\n    >\r\n      <template slot=\"footer\">\r\n        <a-button type=\"primary\" @click=\"departOk\">确认</a-button>\r\n      </template>\r\n\r\n      <a-form>\r\n        <a-form-item\r\n          :labelCol=\"{span:4}\"\r\n          :wrapperCol=\"{span:20}\"\r\n          style=\"margin-bottom:10px\"\r\n          :validate-status=\"validate_status\"\r\n        >\r\n          <a-tooltip placement=\"topLeft\">\r\n            <template slot=\"title\">\r\n              <span>您隶属于多部门，请选择登录部门</span>\r\n            </template>\r\n            <a-avatar style=\"backgroundColor:#87d068\" icon=\"gold\" />\r\n          </a-tooltip>\r\n          <a-select\r\n            @change=\"departChange\"\r\n            :class=\"{'valid-error':validate_status=='error'}\"\r\n            placeholder=\"请选择登录部门\"\r\n            style=\"margin-left:10px;width: 80%\"\r\n          >\r\n            <a-icon slot=\"suffixIcon\" type=\"gold\" />\r\n            <a-select-option\r\n              v-for=\"d in departList\"\r\n              :key=\"d.id\"\r\n              :value=\"d.orgCode\"\r\n            >{{ d.departName }}</a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n//import md5 from \"md5\"\r\nimport api from '@/api'\r\nimport TwoStepCaptcha from '@/components/tools/TwoStepCaptcha'\r\nimport { mapActions } from 'vuex'\r\nimport { timeFix } from '@/utils/util'\r\nimport Vue from 'vue'\r\nimport { ACCESS_TOKEN, ENCRYPTED_STRING } from '@/store/mutation-types'\r\nimport JGraphicCode from '@/components/jeecg/JGraphicCode'\r\nimport { putAction } from '@/api/manage'\r\nimport { postAction } from '@/api/manage'\r\nimport { encryption, getEncryptedString } from '@/utils/encryption/aesEncrypt'\r\nimport store from '@/store/'\r\nimport { USER_INFO } from '@/store/mutation-types'\r\n\r\nexport default {\r\n  components: {\r\n    TwoStepCaptcha,\r\n    JGraphicCode\r\n  },\r\n  data() {\r\n    return {\r\n      customActiveKey: 'tab1',\r\n      loginBtn: false,\r\n      // login type: 0 email, 1 username, 2 telephone\r\n      loginType: 0,\r\n      requiredTwoStepCaptcha: false,\r\n      stepCaptchaVisible: false,\r\n      form: this.$form.createForm(this),\r\n      encryptedString: {\r\n        key: '',\r\n        iv: ''\r\n      },\r\n      state: {\r\n        time: 60,\r\n        smsSendBtn: false\r\n      },\r\n      formLogin: {\r\n        username: '',\r\n        password: '',\r\n        captcha: '',\r\n        mobile: '',\r\n        rememberMe: true\r\n      },\r\n      validatorRules: {\r\n        username: { rules: [{ required: true, message: '请输入用户名!', validator: 'click' }] },\r\n        password: { rules: [{ required: true, message: '请输入密码!', validator: 'click' }] },\r\n        mobile: { rules: [{ validator: this.validateMobile }] },\r\n        captcha: { rule: [{ required: true, message: '请输入验证码!' }] },\r\n        inputCode: { rules: [{ required: true, message: '请输入验证码!' }, { validator: this.validateInputCode }] }\r\n      },\r\n      verifiedCode: '',\r\n      inputCodeContent: '',\r\n      inputCodeNull: true,\r\n\r\n      departList: [],\r\n      departVisible: false,\r\n      departSelected: '',\r\n      currentUsername: '',\r\n      validate_status: ''\r\n    }\r\n  },\r\n  created() {\r\n    Vue.ls.remove(ACCESS_TOKEN)\r\n    this.getRouterData()\r\n    // update-begin- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\r\n    //this.getEncrypte();\r\n    // update-end- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\r\n  },\r\n  methods: {\r\n    ...mapActions(['Login', 'Logout', 'PhoneLogin']),\r\n    // handler\r\n    handleUsernameOrEmail(rule, value, callback) {\r\n      const regex = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/\r\n      if (regex.test(value)) {\r\n        this.loginType = 0\r\n      } else {\r\n        this.loginType = 1\r\n      }\r\n      callback()\r\n    },\r\n    handleTabClick(key) {\r\n      this.customActiveKey = key\r\n      // this.form.resetFields()\r\n    },\r\n    handleSubmit() {\r\n      let that = this\r\n      let loginParams = {\r\n        remember_me: that.formLogin.rememberMe\r\n      }\r\n      that.loginBtn = true\r\n      // 使用账户密码登陆\r\n      if (that.customActiveKey === 'tab1') {\r\n        that.form.validateFields(['username', 'password', 'inputCode'], { force: true }, (err, values) => {\r\n          if (!err) {\r\n            loginParams.username = values.username\r\n            // update-begin- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\r\n            //loginParams.password = md5(values.password)\r\n            //loginParams.password = encryption(values.password,that.encryptedString.key,that.encryptedString.iv)\r\n            loginParams.password = values.password\r\n            // update-begin- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\r\n\r\n            that\r\n              .Login(loginParams)\r\n              .then(res => {\r\n                this.departConfirm(res)\r\n              })\r\n              .catch(err => {\r\n                that.requestFailed(err)\r\n              })\r\n          } else {\r\n            that.loginBtn = false\r\n          }\r\n        })\r\n        // 使用手机号登陆\r\n      } else {\r\n        that.form.validateFields(['mobile', 'captcha'], { force: true }, (err, values) => {\r\n          if (!err) {\r\n            loginParams.mobile = values.mobile\r\n            loginParams.captcha = values.captcha\r\n            that\r\n              .PhoneLogin(loginParams)\r\n              .then(res => {\r\n                console.log(res.result)\r\n                this.departConfirm(res)\r\n              })\r\n              .catch(err => {\r\n                that.requestFailed(err)\r\n              })\r\n          }\r\n        })\r\n      }\r\n    },\r\n    getCaptcha(e) {\r\n      e.preventDefault()\r\n      let that = this\r\n      this.form.validateFields(['mobile'], { force: true }, (err, values) => {\r\n        if (!values.mobile) {\r\n          that.cmsFailed('请输入手机号')\r\n        } else if (!err) {\r\n          this.state.smsSendBtn = true\r\n          let interval = window.setInterval(() => {\r\n            if (that.state.time-- <= 0) {\r\n              that.state.time = 60\r\n              that.state.smsSendBtn = false\r\n              window.clearInterval(interval)\r\n            }\r\n          }, 1000)\r\n\r\n          const hide = this.$message.loading('验证码发送中..', 0)\r\n          let smsParams = {}\r\n          smsParams.mobile = values.mobile\r\n          smsParams.smsmode = '0'\r\n          postAction('/sys/sms', smsParams)\r\n            .then(res => {\r\n              if (!res.success) {\r\n                setTimeout(hide, 0)\r\n                this.cmsFailed(res.message)\r\n              }\r\n              console.log(res)\r\n              setTimeout(hide, 500)\r\n            })\r\n            .catch(err => {\r\n              setTimeout(hide, 1)\r\n              clearInterval(interval)\r\n              that.state.time = 60\r\n              that.state.smsSendBtn = false\r\n              this.requestFailed(err)\r\n            })\r\n        }\r\n      })\r\n    },\r\n    stepCaptchaSuccess() {\r\n      this.loginSuccess()\r\n    },\r\n    stepCaptchaCancel() {\r\n      this.Logout().then(() => {\r\n        this.loginBtn = false\r\n        this.stepCaptchaVisible = false\r\n      })\r\n    },\r\n    loginSuccess() {\r\n      // update-begin- author:sunjianlei --- date:20190812 --- for: 登录成功后不解除禁用按钮，防止多次点击\r\n      // this.loginBtn = false\r\n      // update-end- author:sunjianlei --- date:20190812 --- for: 登录成功后不解除禁用按钮，防止多次点击\r\n      this.$router.push({ name: 'dashboard' })\r\n      this.$notification.success({\r\n        message: '欢迎',\r\n        description: `${timeFix()}，欢迎回来`\r\n      })\r\n    },\r\n    cmsFailed(err) {\r\n      this.$notification['error']({\r\n        message: '登录失败',\r\n        description: err,\r\n        duration: 4\r\n      })\r\n    },\r\n    requestFailed(err) {\r\n      this.$notification['error']({\r\n        message: '登录失败',\r\n        description: ((err.response || {}).data || {}).message || err.message || '请求出现错误，请稍后再试',\r\n        duration: 4\r\n      })\r\n      this.loginBtn = false\r\n    },\r\n    validateMobile(rule, value, callback) {\r\n      if (!value || new RegExp(/^1([38][0-9]|4[579]|5[0-3,5-9]|6[6]|7[0135678]|9[89])\\d{8}$/).test(value)) {\r\n        callback()\r\n      } else {\r\n        callback('您的手机号码格式不正确!')\r\n      }\r\n    },\r\n    validateInputCode(rule, value, callback) {\r\n      if (!value || this.verifiedCode == this.inputCodeContent) {\r\n        callback()\r\n      } else {\r\n        callback('您输入的验证码不正确!')\r\n      }\r\n    },\r\n    generateCode(value) {\r\n      this.verifiedCode = value.toLowerCase()\r\n    },\r\n    inputCodeChange(e) {\r\n      this.inputCodeContent = e.target.value\r\n      if (!e.target.value || 0 == e.target.value) {\r\n        this.inputCodeNull = true\r\n      } else {\r\n        this.inputCodeContent = this.inputCodeContent.toLowerCase()\r\n        this.inputCodeNull = false\r\n      }\r\n    },\r\n    departConfirm(res) {\r\n      if (res.success) {\r\n        let multi_depart = res.result.multi_depart\r\n        //0:无部门 1:一个部门 2:多个部门\r\n        if (multi_depart == 0) {\r\n          this.loginSuccess()\r\n          this.$notification.warn({\r\n            message: '提示',\r\n            description: `您尚未归属部门,请确认账号信息`,\r\n            duration: 3\r\n          })\r\n        } else if (multi_depart == 2) {\r\n          this.departVisible = true\r\n          this.currentUsername = this.form.getFieldValue('username')\r\n          this.departList = res.result.departs\r\n        } else {\r\n          this.loginSuccess()\r\n        }\r\n      } else {\r\n        this.requestFailed(res)\r\n        this.Logout()\r\n      }\r\n    },\r\n    departOk() {\r\n      if (!this.departSelected) {\r\n        this.validate_status = 'error'\r\n        return false\r\n      }\r\n      let obj = {\r\n        orgCode: this.departSelected,\r\n        username: this.form.getFieldValue('username')\r\n      }\r\n      putAction('/sys/selectDepart', obj).then(res => {\r\n        if (res.success) {\r\n          const userInfo = res.result.userInfo\r\n          Vue.ls.set(USER_INFO, userInfo, 7 * 24 * 60 * 60 * 1000)\r\n          store.commit('SET_INFO', userInfo)\r\n          //console.log(\"---切换组织机构---userInfo-------\",store.getters.userInfo.orgCode);\r\n          this.departClear()\r\n          this.loginSuccess()\r\n        } else {\r\n          this.requestFailed(res)\r\n          this.Logout().then(() => {\r\n            this.departClear()\r\n          })\r\n        }\r\n      })\r\n    },\r\n    departClear() {\r\n      this.departList = []\r\n      this.departSelected = ''\r\n      this.currentUsername = ''\r\n      this.departVisible = false\r\n      this.validate_status = ''\r\n    },\r\n    departChange(value) {\r\n      this.validate_status = 'success'\r\n      this.departSelected = value\r\n    },\r\n    getRouterData() {\r\n      this.$nextTick(() => {\r\n        this.form.setFieldsValue({\r\n          username: this.$route.params.username\r\n        })\r\n      })\r\n    },\r\n    //获取密码加密规则\r\n    getEncrypte() {\r\n      var encryptedString = Vue.ls.get(ENCRYPTED_STRING)\r\n      if (encryptedString == null) {\r\n        getEncryptedString().then(data => {\r\n          this.encryptedString = data\r\n        })\r\n      } else {\r\n        this.encryptedString = encryptedString\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.user-layout-login {\r\n  label {\r\n    font-size: 14px;\r\n  }\r\n\r\n  .getCaptcha {\r\n    display: block;\r\n    width: 100%;\r\n    height: 40px;\r\n  }\r\n\r\n  .forge-password {\r\n    font-size: 14px;\r\n  }\r\n\r\n  button.login-button {\r\n    padding: 0 15px;\r\n    font-size: 16px;\r\n    height: 40px;\r\n    width: 100%;\r\n  }\r\n\r\n  .user-login-other {\r\n    text-align: left;\r\n    margin-top: 24px;\r\n    line-height: 22px;\r\n\r\n    .item-icon {\r\n      font-size: 24px;\r\n      color: rgba(0, 0, 0, 0.2);\r\n      margin-left: 16px;\r\n      vertical-align: middle;\r\n      cursor: pointer;\r\n      transition: color 0.3s;\r\n\r\n      &:hover {\r\n        color: #1890ff;\r\n      }\r\n    }\r\n\r\n    .register {\r\n      float: right;\r\n    }\r\n  }\r\n}\r\n</style>\r\n<style>\r\n.valid-error .ant-select-selection__placeholder {\r\n  color: #f5222d;\r\n}\r\n</style>"],"sourceRoot":"src/views/user"}]}