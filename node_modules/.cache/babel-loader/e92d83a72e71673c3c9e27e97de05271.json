{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/SysAnnouncementModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/SysAnnouncementModal.vue","mtime":1571018558937},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { httpAction } from '@/api/manage';\nimport pick from 'lodash.pick';\nimport { getAction } from '@/api/manage';\nimport JDate from '@/components/jeecg/JDate';\nimport JEditor from '@/components/jeecg/JEditor';\nimport SelectUserListModal from \"./SelectUserListModal\";\nimport moment from 'moment';\nexport default {\n  components: {\n    JEditor: JEditor,\n    JDate: JDate,\n    SelectUserListModal: SelectUserListModal\n  },\n  name: \"SysAnnouncementModal\",\n  data: function data() {\n    return {\n      title: \"操作\",\n      visible: false,\n      disableSubmit: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules: {\n        title: {\n          rules: [{\n            required: true,\n            message: '请输入标题!'\n          }]\n        },\n        msgCategory: {\n          rules: [{\n            required: true,\n            message: '请选择消息类型!'\n          }]\n        },\n        msgType: {\n          rules: [{\n            required: true,\n            message: '请选择通告对象类型!'\n          }]\n        },\n        endTime: {\n          rules: [{\n            validator: this.endTimeValidate\n          }]\n        },\n        startTime: {\n          rules: [{\n            validator: this.startTimeValidate\n          }]\n        }\n      },\n      url: {\n        queryByIds: \"/sys/user/queryByIds\",\n        add: \"/sys/annountCement/add\",\n        edit: \"/sys/annountCement/edit\"\n      },\n      userType: false,\n      userIds: [],\n      selectedUser: [],\n      disabled: false,\n      msgContent: \"\"\n    };\n  },\n  created: function created() {},\n  methods: {\n    add: function add() {\n      this.edit({});\n    },\n    edit: function edit(record) {\n      this.form.resetFields();\n      this.model = {};\n      this.disable = false;\n      this.visible = true;\n      this.getUser(record);\n    },\n    getUser: function getUser(record) {\n      var _this = this;\n\n      this.model = Object.assign({}, record); // 指定用户\n\n      if (record && record.msgType === \"USER\") {\n        this.userType = true;\n        this.userIds = record.userIds;\n        getAction(this.url.queryByIds, {\n          userIds: this.userIds\n        }).then(function (res) {\n          if (res.success) {\n            for (var i = 0; i < res.result.length; i++) {\n              _this.selectedUser.push(res.result[i].realname);\n            }\n\n            _this.$refs.UserListModal.edit(res.result, _this.userIds);\n          }\n        });\n      }\n\n      this.$nextTick(function () {\n        _this.form.setFieldsValue(pick(_this.model, 'endTime', 'startTime', 'titile', 'msgContent', 'sender', 'priority', 'msgCategory', 'msgType', 'sendStatus', 'delFlag'));\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.selectedUser = [];\n      this.visible = false;\n    },\n    handleOk: function handleOk() {\n      var _this2 = this;\n\n      var that = this; // 触发表单验证\n\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          that.confirmLoading = true;\n          var httpurl = '';\n          var method = '';\n\n          if (!_this2.model.id) {\n            httpurl += _this2.url.add;\n            method = 'post';\n          } else {\n            httpurl += _this2.url.edit;\n            method = 'put';\n          }\n\n          var formData = Object.assign(_this2.model, values);\n\n          if (_this2.userType) {\n            formData.userIds = _this2.userIds;\n          }\n\n          console.log(formData);\n          httpAction(httpurl, formData, method).then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.close();\n          });\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.visible = false;\n      this.$emit('close');\n      this.resetUser();\n    },\n    resetUser: function resetUser() {\n      this.userType = false;\n      this.userIds = [];\n      this.selectedUser = [];\n      this.disabled = false;\n      this.$refs.UserListModal.edit(null, null);\n    },\n    selectUserIds: function selectUserIds() {\n      this.$refs.UserListModal.add(this.selectedUser, this.userIds);\n    },\n    chooseMsgType: function chooseMsgType(value) {\n      if (\"USER\" == value) {\n        this.userType = true;\n      } else {\n        this.userType = false;\n        this.selectedUser = [];\n        this.userIds = [];\n      }\n    },\n    // 子modal回调\n    choseUser: function choseUser(userList) {\n      this.selectedUser = [];\n      this.userIds = [];\n\n      for (var i = 0; i < userList.length; i++) {\n        this.selectedUser.push(userList[i].realname);\n        this.userIds += userList[i].id + \",\";\n      }\n    },\n    startTimeValidate: function startTimeValidate(rule, value, callback) {\n      var endTime = this.form.getFieldValue(\"endTime\");\n\n      if (!value || !endTime) {\n        callback();\n      } else if (moment(value).isBefore(endTime)) {\n        callback();\n      } else {\n        callback(\"开始时间需小于结束时间\");\n      }\n    },\n    endTimeValidate: function endTimeValidate(rule, value, callback) {\n      var startTime = this.form.getFieldValue(\"startTime\");\n\n      if (!value || !startTime) {\n        callback();\n      } else if (moment(startTime).isBefore(value)) {\n        callback();\n      } else {\n        callback(\"结束时间需大于开始时间\");\n      }\n    }\n  }\n};",{"version":3,"sources":["SysAnnouncementModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-modal\n    :title=\"title\"\n    :width=\"800\"\n    :visible=\"visible\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleOk\"\n    @cancel=\"handleCancel\"\n    :okButtonProps=\"{ props: {disabled: disabled} }\"\n    cancelText=\"关闭\">\n    \n    <a-spin :spinning=\"confirmLoading\">\n      <a-form :form=\"form\">\n      \n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"标题\">\n          <a-input placeholder=\"请输入标题\" v-decorator=\"['titile', validatorRules.title]\" :readOnly=\"disableSubmit\" />\n        </a-form-item>\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"消息类型\">\n          <a-select\n            v-decorator=\"[ 'msgCategory', validatorRules.msgCategory]\"\n            placeholder=\"请选择消息类型\"\n            :disabled=\"disableSubmit\">\n            <a-select-option value=\"1\">通知公告</a-select-option>\n            <a-select-option value=\"2\">系统消息</a-select-option>\n          </a-select>\n        </a-form-item>\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"内容\">\n          <j-editor v-decorator=\"[ 'msgContent', {} ]\" triggerChange></j-editor>\n        </a-form-item>\n\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"开始时间\">\n          <j-date v-decorator=\"[ 'startTime', validatorRules.startTime]\" placeholder=\"请选择开始时间\" showTime dateFormat=\"YYYY-MM-DD HH:mm:ss\"></j-date>\n        </a-form-item>\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"结束时间\">\n          <j-date v-decorator=\"[ 'endTime', validatorRules.endTime]\" placeholder=\"请选择结束时间\" showTime dateFormat=\"YYYY-MM-DD HH:mm:ss\"></j-date>\n        </a-form-item>\n\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"优先级\">\n          <a-select\n            v-decorator=\"[ 'priority', {}]\"\n            placeholder=\"请选择优先级\"\n            :disabled=\"disableSubmit\">\n            <a-select-option value=\"L\">低</a-select-option>\n            <a-select-option value=\"M\">中</a-select-option>\n            <a-select-option value=\"H\">高</a-select-option>\n          </a-select>\n        </a-form-item>\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"通告对象类型\">\n          <a-select\n            v-decorator=\"[ 'msgType', validatorRules.msgType]\"\n            placeholder=\"请选择通告对象类型\"\n            :disabled=\"disableSubmit\"\n            @change=\"chooseMsgType\">\n            <a-select-option value=\"USER\">指定用户</a-select-option>\n            <a-select-option value=\"ALL\">全体用户</a-select-option>\n          </a-select>\n        </a-form-item>\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"指定用户\"\n          v-if=\"userType\">\n          <a-select\n            mode=\"multiple\"\n            style=\"width: 100%\"\n            placeholder=\"请选择用户\"\n            v-model=\"selectedUser\"\n            @dropdownVisibleChange=\"selectUserIds\">\n          </a-select>\n        </a-form-item>\n      </a-form>\n    </a-spin>\n    <select-user-list-modal ref=\"UserListModal\" @choseUser=\"choseUser\"></select-user-list-modal>\n  </a-modal>\n</template>\n\n<script>\n  import { httpAction } from '@/api/manage'\n  import pick from 'lodash.pick'\n  import { getAction } from '@/api/manage'\n  import JDate from '@/components/jeecg/JDate'\n  import JEditor from '@/components/jeecg/JEditor'\n  import SelectUserListModal from \"./SelectUserListModal\";\n  import moment from 'moment'\n\n  export default {\n    components: { JEditor, JDate, SelectUserListModal},\n    name: \"SysAnnouncementModal\",\n    data () {\n      return {\n        title:\"操作\",\n        visible: false,\n        disableSubmit:false,\n        model: {},\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n\n        confirmLoading: false,\n        form: this.$form.createForm(this),\n        validatorRules:{\n          title:{rules: [{ required: true, message: '请输入标题!' }]},\n          msgCategory:{rules: [{ required: true, message: '请选择消息类型!' }]},\n          msgType:{rules: [{ required: true, message: '请选择通告对象类型!' }]},\n          endTime:{rules:[{validator: this.endTimeValidate}]},\n          startTime:{rules:[{validator: this.startTimeValidate}]}\n        },\n        url: {\n          queryByIds: \"/sys/user/queryByIds\",\n          add: \"/sys/annountCement/add\",\n          edit: \"/sys/annountCement/edit\",\n        },\n        userType:false,\n        userIds:[],\n        selectedUser:[],\n        disabled:false,\n        msgContent:\"\",\n      }\n    },\n    created () {\n    },\n    methods: {\n      add () {\n        this.edit({});\n      },\n      edit (record) {\n        this.form.resetFields();\n        this.model = {}\n        this.disable = false;\n        this.visible = true;\n        this.getUser(record);\n      },\n      getUser(record){\n        this.model = Object.assign({}, record);\n        // 指定用户\n        if(record&&record.msgType === \"USER\"){\n          this.userType =  true;\n          this.userIds = record.userIds;\n          getAction(this.url.queryByIds,{userIds:this.userIds}).then((res)=>{\n            if(res.success){\n              for(var i=0;i<res.result.length;i++){\n                this.selectedUser.push(res.result[i].realname);\n              }\n              this.$refs.UserListModal.edit(res.result,this.userIds);\n            }\n          });\n        }\n        this.$nextTick(() => {\n          this.form.setFieldsValue(pick(this.model,'endTime','startTime','titile','msgContent','sender','priority','msgCategory','msgType','sendStatus','delFlag'))\n        });\n      },\n      close () {\n        this.$emit('close');\n        this.selectedUser = [];\n        this.visible = false;\n      },\n      handleOk () {\n        const that = this;\n        // 触发表单验证\n        this.form.validateFields((err, values) => {\n          if (!err) {\n            that.confirmLoading = true;\n            let httpurl = '';\n            let method = '';\n            if(!this.model.id){\n              httpurl+=this.url.add;\n              method = 'post';\n            }else{\n              httpurl+=this.url.edit;\n               method = 'put';\n            }\n            let formData = Object.assign(this.model, values);\n            if(this.userType){\n              formData.userIds =  this.userIds;\n            }\n            console.log(formData)\n            httpAction(httpurl,formData,method).then((res)=>{\n              if(res.success){\n                that.$message.success(res.message);\n                that.$emit('ok');\n              }else{\n                that.$message.warning(res.message);\n              }\n            }).finally(() => {\n              that.confirmLoading = false;\n              that.close();\n            })\n\n\n\n          }\n        })\n      },\n      handleCancel () {\n        this.visible = false;\n        this.$emit('close');\n        this.resetUser();\n      },\n      resetUser (){\n        this.userType =  false;\n        this.userIds = [];\n        this.selectedUser = [];\n        this.disabled = false;\n        this.$refs.UserListModal.edit(null,null);\n      },\n      selectUserIds() {\n        this.$refs.UserListModal.add(this.selectedUser,this.userIds);\n      },\n      chooseMsgType(value) {\n        if(\"USER\" == value) {\n          this.userType = true;\n        } else {\n          this.userType = false;\n          this.selectedUser = [];\n          this.userIds = [];\n        }\n      },\n      // 子modal回调\n      choseUser:function(userList){\n        this.selectedUser = [];\n        this.userIds = [];\n        for(var i=0;i<userList.length;i++){\n          this.selectedUser.push(userList[i].realname);\n          this.userIds += userList[i].id+\",\"\n        }\n      },\n      startTimeValidate(rule,value,callback){\n        let endTime = this.form.getFieldValue(\"endTime\")\n        if(!value || !endTime){\n          callback()\n        }else if(moment(value).isBefore(endTime)){\n          callback()\n        }else{\n          callback(\"开始时间需小于结束时间\")\n        }\n      },\n      endTimeValidate(rule,value,callback){\n        let startTime = this.form.getFieldValue(\"startTime\")\n        if(!value || !startTime){\n          callback()\n        }else if(moment(startTime).isBefore(value)){\n          callback()\n        }else{\n          callback(\"结束时间需大于开始时间\")\n        }\n      }\n\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/views/system/modules"}]}