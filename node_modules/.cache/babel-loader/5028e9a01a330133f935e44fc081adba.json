{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/DepartWindow.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/DepartWindow.vue","mtime":1571018558934},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport pick from 'lodash.pick';\nimport { getAction } from '@/api/manage';\nimport { queryIdTree } from '@/api/api';\nimport userModal from \"./UserModal\";\nexport default {\n  name: \"DepartWindow\",\n  components: {\n    userModal: userModal\n  },\n  data: function data() {\n    return {\n      checkedKeys: [],\n      // 存储选中的部门id\n      userId: \"\",\n      // 存储用户id\n      model: {},\n      // 存储SysUserDepartsVO表\n      userDepartModel: {\n        userId: '',\n        departIdList: []\n      },\n      // 存储用户id一对多部门信息的对象\n      departList: [],\n      // 存储部门信息\n      modalWidth: 400,\n      departTree: [],\n      title: \"操作\",\n      visible: false,\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      headers: {},\n      form: this.$form.createForm(this),\n      url: {\n        userId: \"/sys/user/generateUserId\" // 引入生成添加用户情况下的url\n\n      }\n    };\n  },\n  methods: {\n    add: function add(checkedDepartKeys, userId) {\n      this.checkedKeys = checkedDepartKeys;\n      this.userId = userId;\n      this.edit({});\n    },\n    edit: function edit(record) {\n      var _this = this;\n\n      this.departList = [];\n      this.queryDepartTree();\n      this.form.resetFields();\n      this.visible = true;\n      this.model = Object.assign({}, record);\n      var filedsVal = pick(this.model, 'id', 'userId', 'departIdList');\n      this.$nextTick(function () {\n        _this.form.setFieldsValue(filedsVal);\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n      this.departList = [];\n      this.checkedKeys = [];\n    },\n    handleSubmit: function handleSubmit() {\n      var _this2 = this;\n\n      var that = this; // 触发表单验证\n\n      this.form.validateFields(function (err) {\n        if (!err) {\n          that.confirmLoading = true;\n\n          if (_this2.userId == null) {\n            getAction(_this2.url.userId).then(function (res) {\n              if (res.success) {\n                var formData = {\n                  userId: res.result,\n                  departIdList: _this2.departList\n                };\n                console.log(formData);\n                that.$emit('ok', formData);\n              }\n            }).finally(function () {\n              that.departList = [];\n              that.confirmLoading = false;\n              that.close();\n            });\n          } else {\n            var formData = {\n              userId: _this2.userId,\n              departIdList: _this2.departList\n            };\n            console.log(formData);\n            that.departList = [];\n            that.$emit('ok', formData);\n            that.confirmLoading = false;\n            that.close();\n          }\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    // 选择部门时作用的API\n    onCheck: function onCheck(checkedKeys, info) {\n      this.departList = [];\n      this.checkedKeys = checkedKeys.checked;\n      var checkedNodes = info.checkedNodes;\n\n      for (var i = 0; i < checkedNodes.length; i++) {\n        var de = checkedNodes[i].data.props;\n        var depart = {\n          key: \"\",\n          value: \"\",\n          title: \"\"\n        };\n        depart.key = de.value;\n        depart.value = de.value;\n        depart.title = de.title;\n        this.departList.push(depart);\n      }\n\n      console.log('onCheck', checkedKeys, info);\n    },\n    queryDepartTree: function queryDepartTree() {\n      var _this3 = this;\n\n      queryIdTree().then(function (res) {\n        if (res.success) {\n          _this3.departTree = res.result;\n        }\n      });\n    },\n    modalFormOk: function modalFormOk() {}\n  }\n};",{"version":3,"sources":["DepartWindow.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-modal\n    :width=\"modalWidth\"\n    :visible=\"visible\"\n    title=\"部门搜索\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleSubmit\"\n    @cancel=\"handleCancel\"\n    cancelText=\"关闭\"\n    wrapClassName=\"ant-modal-cust-warp\"\n    >\n    <!--部门树-->\n    <template>\n      <a-form :form=\"form\">\n      <a-form-item :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\" label=\"上级部门\">\n      <a-tree\n        multiple\n        treeCheckable=\"tree\"\n        checkable\n        :checkedKeys=\"checkedKeys\"\n        allowClear=\"true\"\n        :checkStrictly=\"true\"\n        @check=\"onCheck\"\n        :dropdownStyle=\"{maxHeight:'200px',overflow:'auto'}\"\n        :treeData=\"departTree\"\n        placeholder=\"请选择上级部门\"\n        >\n      </a-tree>\n      </a-form-item>\n      </a-form>\n    </template>\n  </a-modal>\n</template>\n\n<script>\n  import pick from 'lodash.pick'\n  import { getAction } from '@/api/manage'\n  import { queryIdTree } from '@/api/api'\n  import userModal from './UserModal'\n  export default {\n    name: \"DepartWindow\",\n    components: {\n      userModal,\n    },\n    data () {\n      return {\n        checkedKeys:[], // 存储选中的部门id\n        userId:\"\", // 存储用户id\n        model:{}, // 存储SysUserDepartsVO表\n        userDepartModel:{userId:'',departIdList:[]}, // 存储用户id一对多部门信息的对象\n        departList:[], // 存储部门信息\n        modalWidth:400,\n        departTree:[],\n        title:\"操作\",\n        visible: false,\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n        confirmLoading: false,\n        headers:{},\n        form:this.$form.createForm(this),\n        url: {\n          userId:\"/sys/user/generateUserId\", // 引入生成添加用户情况下的url\n        },\n      }\n    },\n    methods: {\n      add (checkedDepartKeys,userId) {\n        this.checkedKeys = checkedDepartKeys;\n        this.userId = userId;\n        this.edit({});\n      },\n      edit (record) {\n        this.departList = [];\n        this.queryDepartTree();\n        this.form.resetFields();\n        this.visible = true;\n        this.model = Object.assign({}, record);\n        let filedsVal = pick(this.model,'id','userId','departIdList');\n        this.$nextTick(() => {\n          this.form.setFieldsValue(filedsVal);\n        });\n      },\n      close () {\n        this.$emit('close');\n        this.visible = false;\n        this.departList = [];\n        this.checkedKeys = [];\n      },\n      handleSubmit () {\n        const that = this;\n        // 触发表单验证\n        this.form.validateFields((err) => {\n          if (!err) {\n            that.confirmLoading = true;\n            if(this.userId == null){\n              getAction(this.url.userId).then((res)=>{\n                if(res.success){\n                  let formData = {userId:res.result,\n                  departIdList:this.departList}\n                  console.log(formData)\n                  that.$emit('ok', formData);\n                }\n              }).finally(() => {\n                that.departList = [];\n                that.confirmLoading = false;\n                that.close();\n              })\n            }else {\n              let formData = {userId:this.userId,\n                departIdList:this.departList}\n              console.log(formData)\n              that.departList = [];\n              that.$emit('ok', formData);\n              that.confirmLoading = false;\n              that.close();\n            }\n          }\n        })\n      },\n      handleCancel () {\n        this.close()\n      },\n\n      // 选择部门时作用的API\n      onCheck(checkedKeys, info){\n        this.departList = [];\n        this.checkedKeys = checkedKeys.checked;\n        let checkedNodes = info.checkedNodes;\n        for (let i = 0; i < checkedNodes.length; i++) {\n          let de = checkedNodes[i].data.props;\n          let depart = {key:\"\",value:\"\",title:\"\"};\n          depart.key = de.value;\n          depart.value = de.value;\n          depart.title = de.title;\n          this.departList.push(depart);\n        }\n        console.log('onCheck', checkedKeys, info);\n      },\n      queryDepartTree(){\n        queryIdTree().then((res)=>{\n          if(res.success){\n            this.departTree = res.result;\n          }\n        })\n      },\n      modalFormOk(){\n\n      }\n      },\n  }\n</script>\n\n<style scoped>\n  .ant-table-tbody .ant-table-row td{\n    padding-top:10px;\n    padding-bottom:10px;\n  }\n</style>"],"sourceRoot":"src/views/system/modules"}]}