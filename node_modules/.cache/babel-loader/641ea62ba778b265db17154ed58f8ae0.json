{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/jeecg/TableTotal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/jeecg/TableTotal.vue","mtime":1571018558921},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.is-nan\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.number.parse-int\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'TableTotal',\n  data: function data() {\n    return {\n      columns: [{\n        title: '#',\n        width: '180px',\n        align: 'center',\n        dataIndex: 'rowIndex',\n        customRender: function customRender(text, r, index) {\n          return text !== '合计' ? parseInt(index) + 1 : text;\n        }\n      }, {\n        title: '姓名',\n        dataIndex: 'name'\n      }, {\n        title: '贡献点',\n        dataIndex: 'point'\n      }, {\n        title: '等级',\n        dataIndex: 'level'\n      }, {\n        title: '更新时间',\n        dataIndex: 'updateTime'\n      }],\n      dataSource: [{\n        name: '张三',\n        point: 23,\n        level: 3,\n        updateTime: '2019-8-14'\n      }, {\n        name: '小王',\n        point: 6,\n        level: 1,\n        updateTime: '2019-8-13'\n      }, {\n        name: '李四',\n        point: 53,\n        level: 8,\n        updateTime: '2019-8-12'\n      }, {\n        name: '小红',\n        point: 44,\n        level: 5,\n        updateTime: '2019-8-11'\n      }, {\n        name: '王五',\n        point: 97,\n        level: 10,\n        updateTime: '2019-8-10'\n      }, {\n        name: '小明',\n        point: 33,\n        level: 2,\n        updateTime: '2019-8-10'\n      }]\n    };\n  },\n  mounted: function mounted() {\n    this.tableAddTotalRow(this.columns, this.dataSource);\n  },\n  methods: {\n    /** 表格增加合计行 */\n    tableAddTotalRow: function tableAddTotalRow(columns, dataSource) {\n      var numKey = 'rowIndex';\n\n      var totalRow = _defineProperty({}, numKey, '合计');\n\n      columns.forEach(function (column) {\n        var key = column.key,\n            dataIndex = column.dataIndex;\n\n        if (![key, dataIndex].includes(numKey)) {\n          var total = 0;\n          dataSource.forEach(function (data) {\n            total += /^\\d+\\.?\\d?$/.test(data[dataIndex]) ? Number.parseInt(data[dataIndex]) : Number.NaN;\n            console.log(data[dataIndex], ':', /^\\d+\\.?\\d?$/.test(data[dataIndex]) ? Number.parseInt(data[dataIndex]) : Number.NaN);\n          });\n\n          if (Number.isNaN(total)) {\n            total = '-';\n          }\n\n          totalRow[dataIndex] = total;\n        }\n      });\n      dataSource.push(totalRow);\n    }\n  }\n};",{"version":3,"sources":["TableTotal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <a-table\n      rowKey=\"id\"\n      bordered\n      :columns=\"columns\"\n      :dataSource=\"dataSource\"\n      :pagination=\"false\"\n    >\n    </a-table>\n  </a-card>\n</template>\n\n<script>\n  export default {\n    name: 'TableTotal',\n    data() {\n      return {\n        columns: [\n          {\n            title: '#',\n            width: '180px',\n            align: 'center',\n            dataIndex: 'rowIndex',\n            customRender: function (text, r, index) {\n              return (text !== '合计') ? (parseInt(index) + 1) : text\n            }\n          },\n          {\n            title: '姓名',\n            dataIndex: 'name',\n          },\n          {\n            title: '贡献点',\n            dataIndex: 'point',\n          },\n          {\n            title: '等级',\n            dataIndex: 'level',\n          },\n          {\n            title: '更新时间',\n            dataIndex: 'updateTime',\n          },\n        ],\n        dataSource: [\n          { name: '张三', point: 23, level: 3, updateTime: '2019-8-14' },\n          { name: '小王', point: 6, level: 1, updateTime: '2019-8-13' },\n          { name: '李四', point: 53, level: 8, updateTime: '2019-8-12' },\n          { name: '小红', point: 44, level: 5, updateTime: '2019-8-11' },\n          { name: '王五', point: 97, level: 10, updateTime: '2019-8-10' },\n          { name: '小明', point: 33, level: 2, updateTime: '2019-8-10' },\n        ]\n      }\n    },\n    mounted() {\n      this.tableAddTotalRow(this.columns, this.dataSource)\n    },\n    methods: {\n\n      /** 表格增加合计行 */\n      tableAddTotalRow(columns, dataSource) {\n        let numKey = 'rowIndex'\n        let totalRow = { [numKey]: '合计' }\n        columns.forEach(column => {\n          let { key, dataIndex } = column\n          if (![key, dataIndex].includes(numKey)) {\n\n            let total = 0\n            dataSource.forEach(data => {\n              total += /^\\d+\\.?\\d?$/.test(data[dataIndex]) ? Number.parseInt(data[dataIndex]) : Number.NaN\n              console.log(data[dataIndex], ':', (/^\\d+\\.?\\d?$/.test(data[dataIndex]) ? Number.parseInt(data[dataIndex]) : Number.NaN))\n            })\n\n            if (Number.isNaN(total)) {\n              total = '-'\n            }\n            totalRow[dataIndex] = total\n          }\n        })\n\n        dataSource.push(totalRow)\n      }\n\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/views/jeecg"}]}