{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/jeecg/JGraphicCode.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/jeecg/JGraphicCode.vue","mtime":1571018558897},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":1565525386522},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.fill\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'JGraphicCode',\n  props: {\n    length: {\n      type: Number,\n      default: 4\n    },\n    fontSizeMin: {\n      type: Number,\n      default: 20\n    },\n    fontSizeMax: {\n      type: Number,\n      default: 45\n    },\n    backgroundColorMin: {\n      type: Number,\n      default: 180\n    },\n    backgroundColorMax: {\n      type: Number,\n      default: 240\n    },\n    colorMin: {\n      type: Number,\n      default: 50\n    },\n    colorMax: {\n      type: Number,\n      default: 160\n    },\n    lineColorMin: {\n      type: Number,\n      default: 40\n    },\n    lineColorMax: {\n      type: Number,\n      default: 180\n    },\n    dotColorMin: {\n      type: Number,\n      default: 0\n    },\n    dotColorMax: {\n      type: Number,\n      default: 255\n    },\n    contentWidth: {\n      type: Number,\n      default: 136\n    },\n    contentHeight: {\n      type: Number,\n      default: 38\n    }\n  },\n  methods: {\n    // 生成一个随机数\n    randomNum: function randomNum(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    },\n    // 生成一个随机的颜色\n    randomColor: function randomColor(min, max) {\n      var r = this.randomNum(min, max);\n      var g = this.randomNum(min, max);\n      var b = this.randomNum(min, max);\n      return 'rgb(' + r + ',' + g + ',' + b + ')';\n    },\n    drawPic: function drawPic() {\n      this.randomCode();\n      var canvas = document.getElementById('gc-canvas');\n      var ctx = canvas.getContext('2d');\n      ctx.textBaseline = 'bottom'; // 绘制背景\n\n      ctx.fillStyle = this.randomColor(this.backgroundColorMin, this.backgroundColorMax);\n      ctx.fillRect(0, 0, this.contentWidth, this.contentHeight); // 绘制文字\n\n      for (var i = 0; i < this.code.length; i++) {\n        this.drawText(ctx, this.code[i], i);\n      }\n\n      this.drawLine(ctx);\n      this.drawDot(ctx);\n      this.$emit(\"success\", this.code);\n    },\n    drawText: function drawText(ctx, txt, i) {\n      ctx.fillStyle = this.randomColor(this.colorMin, this.colorMax);\n      var fontSize = this.randomNum(this.fontSizeMin, this.fontSizeMax);\n      ctx.font = fontSize + 'px SimHei';\n      var padding = 10;\n      var offset = (this.contentWidth - 40) / (this.code.length - 1);\n      var x = padding;\n\n      if (i > 0) {\n        x = padding + i * offset;\n      } //let x = (i + 1) * (this.contentWidth / (this.code.length + 1))\n\n\n      var y = this.randomNum(this.fontSizeMax, this.contentHeight - 5);\n\n      if (fontSize > 40) {\n        y = 40;\n      }\n\n      var deg = this.randomNum(-10, 10); // 修改坐标原点和旋转角度\n\n      ctx.translate(x, y);\n      ctx.rotate(deg * Math.PI / 180);\n      ctx.fillText(txt, 0, 0); // 恢复坐标原点和旋转角度\n\n      ctx.rotate(-deg * Math.PI / 180);\n      ctx.translate(-x, -y);\n    },\n    drawLine: function drawLine(ctx) {\n      // 绘制干扰线\n      for (var i = 0; i < 1; i++) {\n        ctx.strokeStyle = this.randomColor(this.lineColorMin, this.lineColorMax);\n        ctx.beginPath();\n        ctx.moveTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight));\n        ctx.lineTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight));\n        ctx.stroke();\n      }\n    },\n    drawDot: function drawDot(ctx) {\n      // 绘制干扰点\n      for (var i = 0; i < 100; i++) {\n        ctx.fillStyle = this.randomColor(0, 255);\n        ctx.beginPath();\n        ctx.arc(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight), 1, 0, 2 * Math.PI);\n        ctx.fill();\n      }\n    },\n    reloadPic: function reloadPic() {\n      this.drawPic();\n    },\n    randomCode: function randomCode() {\n      var random = ''; //去掉了I l i o O\n\n      var str = \"QWERTYUPLKJHGFDSAZXCVBNMqwertyupkjhgfdsazxcvbnm1234567890\";\n\n      for (var i = 0; i < this.length; i++) {\n        var index = Math.floor(Math.random() * 57);\n        random += str[index];\n      }\n\n      this.code = random;\n    }\n  },\n  mounted: function mounted() {\n    this.drawPic();\n  },\n  data: function data() {\n    return {\n      code: \"\"\n    };\n  }\n};",null]}