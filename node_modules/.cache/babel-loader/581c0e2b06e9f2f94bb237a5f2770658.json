{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/DictItemList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/DictItemList.vue","mtime":1571018558932},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":1565525386522},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport pick from 'lodash.pick';\nimport { filterObj } from '@/utils/util';\nimport DictItemModal from \"./modules/DictItemModal\";\nimport { JeecgListMixin } from '@/mixins/JeecgListMixin';\nexport default {\n  name: \"DictItemList\",\n  mixins: [JeecgListMixin],\n  components: {\n    DictItemModal: DictItemModal\n  },\n  data: function data() {\n    return {\n      columns: [{\n        title: '名称',\n        align: \"center\",\n        dataIndex: 'itemText'\n      }, {\n        title: '数据值',\n        align: \"center\",\n        dataIndex: 'itemValue'\n      }, {\n        title: '操作',\n        dataIndex: 'action',\n        align: \"center\",\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }],\n      queryParam: {\n        dictId: \"\",\n        dictName: \"\",\n        itemText: \"\",\n        delFlag: \"1\",\n        status: []\n      },\n      title: \"操作\",\n      visible: false,\n      screenWidth: 800,\n      model: {},\n      dictId: \"\",\n      status: 1,\n      labelCol: {\n        xs: {\n          span: 5\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 12\n        },\n        sm: {\n          span: 12\n        }\n      },\n      form: this.$form.createForm(this),\n      validatorRules: {\n        itemText: {\n          rules: [{\n            required: true,\n            message: '请输入名称!'\n          }]\n        },\n        itemValue: {\n          rules: [{\n            required: true,\n            message: '请输入数据值!'\n          }]\n        }\n      },\n      url: {\n        list: \"/sys/dictItem/list\",\n        delete: \"/sys/dictItem/delete\",\n        deleteBatch: \"/sys/dictItem/deleteBatch\"\n      }\n    };\n  },\n  created: function created() {\n    // 当页面初始化时,根据屏幕大小来给抽屉设置宽度\n    this.resetScreenSize();\n  },\n  methods: {\n    add: function add(dictId) {\n      this.dictId = dictId;\n      this.edit({});\n    },\n    edit: function edit(record) {\n      var _this = this;\n\n      if (record.id) {\n        this.dictId = record.id;\n      }\n\n      this.queryParam = {};\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.model.dictId = this.dictId;\n      this.model.status = this.status;\n      this.visible = true;\n      this.$nextTick(function () {\n        _this.form.setFieldsValue(pick(_this.model, 'itemText', 'itemValue'));\n      }); // 当其它模块调用该模块时,调用此方法加载字典数据\n\n      this.loadData();\n    },\n    getQueryParams: function getQueryParams() {\n      var param = Object.assign({}, this.queryParam);\n      param.dictId = this.dictId;\n      param.field = this.getQueryField();\n      param.pageNo = this.ipagination.current;\n      param.pageSize = this.ipagination.pageSize;\n      return filterObj(param);\n    },\n    // 添加字典数据\n    handleAdd: function handleAdd() {\n      this.$refs.modalForm.add(this.dictId);\n      this.$refs.modalForm.title = \"新增\";\n    },\n    showDrawer: function showDrawer() {\n      this.visible = true;\n    },\n    onClose: function onClose() {\n      this.visible = false;\n      this.form.resetFields();\n      this.dataSource = [];\n    },\n    // 抽屉的宽度随着屏幕大小来改变\n    resetScreenSize: function resetScreenSize() {\n      var screenWidth = document.body.clientWidth;\n\n      if (screenWidth < 600) {\n        this.screenWidth = screenWidth;\n      } else {\n        this.screenWidth = 600;\n      }\n    }\n  }\n};",null]}