{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/PermissionModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/PermissionModal.vue","mtime":1571018558936},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":1565525386522},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { addPermission, editPermission, queryTreeList } from '@/api/api';\nimport Icons from \"./icon/Icons\";\nimport pick from 'lodash.pick';\nexport default {\n  name: \"PermissionModal\",\n  components: {\n    Icons: Icons\n  },\n  data: function data() {\n    return {\n      drawerWidth: 700,\n      treeData: [],\n      treeValue: '0-0-4',\n      title: \"操作\",\n      visible: false,\n      disableSubmit: false,\n      model: {},\n      localMenuType: 0,\n      alwaysShow: false,\n      //表单元素-聚合路由\n      menuHidden: false,\n      //表单元素-隐藏路由\n      routeSwitch: true,\n      //是否路由菜单\n      isKeepalive: true,\n      //是否缓存路由\n      show: true,\n      //根据菜单类型，动态显示隐藏表单元素\n      menuLabel: '菜单名称',\n      isRequrie: true,\n      // 是否需要验证\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      iconChooseVisible: false,\n      validateStatus: \"\"\n    };\n  },\n  computed: {\n    validatorRules: function validatorRules() {\n      return {\n        name: {\n          rules: [{\n            required: true,\n            message: '请输入菜单标题!'\n          }]\n        },\n        component: {\n          rules: [{\n            required: this.show,\n            message: '请输入前端组件!'\n          }]\n        },\n        url: {\n          rules: [{\n            required: this.show,\n            message: '请输入菜单路径!'\n          }]\n        },\n        permsType: {\n          rules: [{\n            required: true,\n            message: '请输入授权策略!'\n          }]\n        },\n        sortNo: {\n          initialValue: 1.0,\n          rules: [{\n            validator: this.validateNumber\n          }]\n        }\n      };\n    }\n  },\n  created: function created() {\n    this.initDictConfig();\n  },\n  methods: {\n    loadTree: function loadTree() {\n      var that = this;\n      queryTreeList().then(function (res) {\n        if (res.success) {\n          console.log('----queryTreeList---');\n          console.log(res);\n          that.treeData = [];\n          var treeList = res.result.treeList;\n\n          for (var a = 0; a < treeList.length; a++) {\n            var temp = treeList[a];\n            temp.isLeaf = temp.leaf;\n            that.treeData.push(temp);\n          }\n        }\n      });\n    },\n    add: function add() {\n      // 默认值\n      this.edit({\n        status: '1',\n        permsType: '1',\n        route: true\n      });\n    },\n    edit: function edit(record) {\n      var _this = this;\n\n      this.resetScreenSize(); // 调用此方法,根据屏幕宽度自适应调整抽屉的宽度\n\n      this.form.resetFields();\n      this.model = Object.assign({}, record); //--------------------------------------------------------------------------------------------------\n      //根据菜单类型，动态展示页面字段\n\n      console.log(record);\n      this.alwaysShow = !record.alwaysShow ? false : true;\n      this.menuHidden = !record.hidden ? false : true;\n\n      if (record.route != null) {\n        this.routeSwitch = record.route ? true : false;\n      }\n\n      if (record.keepAlive != null) {\n        this.isKeepalive = record.keepAlive ? true : false;\n      } else {\n        this.isKeepalive = false; // 升级兼容 如果没有（后台没有传过来、或者是新建）默认为false\n      } //console.log('record.menuType', record.menuType);\n\n\n      this.show = record.menuType == 2 ? false : true;\n      this.menuLabel = record.menuType == 2 ? '按钮/权限' : '菜单名称';\n\n      if (this.model.parentId) {\n        this.localMenuType = 1;\n      } else {\n        this.localMenuType = 0;\n      } //----------------------------------------------------------------------------------------------\n\n\n      this.visible = true;\n      this.loadTree();\n      var fieldsVal = pick(this.model, 'name', 'perms', 'permsType', 'component', 'url', 'sortNo', 'menuType', 'status');\n      this.$nextTick(function () {\n        _this.form.setFieldsValue(fieldsVal);\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.disableSubmit = false;\n      this.visible = false;\n    },\n    handleOk: function handleOk() {\n      var _this2 = this;\n\n      var that = this; // 触发表单验证\n\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          _this2.model.alwaysShow = _this2.alwaysShow;\n          _this2.model.hidden = _this2.menuHidden;\n          _this2.model.route = _this2.routeSwitch;\n          _this2.model.keepAlive = _this2.isKeepalive;\n          var formData = Object.assign(_this2.model, values);\n\n          if ((formData.menuType == 1 || formData.menuType == 2) && !formData.parentId) {\n            that.validateStatus = 'error';\n            that.$message.error(\"请检查你填的类型以及信息是否正确！\");\n            return;\n          } else {\n            that.validateStatus = 'success';\n          }\n\n          that.confirmLoading = true;\n          console.log(formData);\n          var obj;\n\n          if (!_this2.model.id) {\n            obj = addPermission(formData);\n          } else {\n            obj = editPermission(formData);\n          }\n\n          obj.then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.close();\n          });\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    validateNumber: function validateNumber(rule, value, callback) {\n      if (!value || new RegExp(/^[0-9]*[1-9][0-9]*$/).test(value)) {\n        callback();\n      } else {\n        callback(\"请输入正整数!\");\n      }\n    },\n    onChangeMenuType: function onChangeMenuType(e) {\n      var _this3 = this;\n\n      //console.log('localMenuType checked', e.target.value)\n      this.localMenuType = e.target.value;\n\n      if (e.target.value == 2) {\n        this.show = false;\n        this.menuLabel = '按钮/权限';\n      } else {\n        this.show = true;\n        this.menuLabel = '菜单名称';\n      }\n\n      this.$nextTick(function () {\n        _this3.form.validateFields(['url', 'component'], {\n          force: true\n        });\n      });\n    },\n    selectIcons: function selectIcons() {\n      this.iconChooseVisible = true;\n    },\n    handleIconCancel: function handleIconCancel() {\n      this.iconChooseVisible = false;\n    },\n    handleIconChoose: function handleIconChoose(value) {\n      console.log(value);\n      this.model.icon = value;\n      this.form.icon = value;\n      this.iconChooseVisible = false;\n    },\n    // 根据屏幕变化,设置抽屉尺寸\n    resetScreenSize: function resetScreenSize() {\n      var screenWidth = document.body.clientWidth;\n\n      if (screenWidth < 500) {\n        this.drawerWidth = screenWidth;\n      } else {\n        this.drawerWidth = 700;\n      }\n    },\n    initDictConfig: function initDictConfig() {},\n    handleParentIdChange: function handleParentIdChange(value) {\n      if (!value) {\n        this.validateStatus = \"error\";\n      } else {\n        this.validateStatus = \"success\";\n      }\n    }\n  }\n};",null]}