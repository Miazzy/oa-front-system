{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/account/settings/Custom.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/account/settings/Custom.vue","mtime":1571018558915},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["import { colorList } from '@/components/tools/setting';\nimport ASwitch from 'ant-design-vue/es/switch';\nimport AList from \"ant-design-vue/es/list\";\nimport AListItem from \"ant-design-vue/es/list/Item\";\nimport { mixin } from '@/utils/mixin.js';\nvar Meta = AListItem.Meta;\nexport default {\n  components: {\n    AListItem: AListItem,\n    AList: AList,\n    ASwitch: ASwitch,\n    Meta: Meta\n  },\n  mixins: [mixin],\n  data: function data() {\n    return {};\n  },\n  filters: {\n    themeFilter: function themeFilter(theme) {\n      var themeMap = {\n        'dark': '暗色',\n        'light': '白色'\n      };\n      return themeMap[theme];\n    }\n  },\n  methods: {\n    colorFilter: function colorFilter(color) {\n      var c = colorList.filter(function (o) {\n        return o.color === color;\n      })[0];\n      return c && c.key;\n    },\n    onChange: function onChange(checked) {\n      if (checked) {\n        this.$store.dispatch('ToggleTheme', 'dark');\n      } else {\n        this.$store.dispatch('ToggleTheme', 'light');\n      }\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    return h(AList, {\n      \"attrs\": {\n        \"itemLayout\": \"horizontal\"\n      }\n    }, [h(AListItem, [h(Meta, [h(\"a\", {\n      \"slot\": \"title\"\n    }, [\"\\u98CE\\u683C\\u914D\\u8272\"]), h(\"span\", {\n      \"slot\": \"description\"\n    }, [\"\\u6574\\u4F53\\u98CE\\u683C\\u914D\\u8272\\u8BBE\\u7F6E\"])]), h(\"div\", {\n      \"slot\": \"actions\"\n    }, [h(ASwitch, {\n      \"attrs\": {\n        \"checkedChildren\": \"暗色\",\n        \"unCheckedChildren\": \"白色\",\n        \"defaultChecked\": this.navTheme === 'dark' && true || false\n      },\n      \"on\": {\n        \"change\": this.onChange\n      }\n    })])]), h(AListItem, [h(Meta, [h(\"a\", {\n      \"slot\": \"title\"\n    }, [\"\\u4E3B\\u9898\\u8272\"]), h(\"span\", {\n      \"slot\": \"description\"\n    }, [\"\\u9875\\u9762\\u98CE\\u683C\\u914D\\u8272\\uFF1A \", h(\"a\", {\n      \"domProps\": {\n        \"innerHTML\": this.colorFilter(this.primaryColor)\n      }\n    })])])])]);\n  }\n};",{"version":3,"sources":["Custom.vue"],"names":[],"mappings":"AACA,SAAA,SAAA,QAAA,4BAAA;AACA,OAAA,OAAA,MAAA,0BAAA;AACA,OAAA,KAAA,MAAA,wBAAA;AACA,OAAA,SAAA,MAAA,6BAAA;AACA,SAAA,KAAA,QAAA,kBAAA;AAEA,IAAA,IAAA,GAAA,SAAA,CAAA,IAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,KAAA,EAAA,KAFA;AAGA,IAAA,OAAA,EAAA,OAHA;AAIA,IAAA,IAAA,EAAA;AAJA,GADA;AAOA,EAAA,MAAA,EAAA,CAAA,KAAA,CAPA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA,EAAA;AAEA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,KADA,EACA;AACA,UAAA,QAAA,GAAA;AACA,gBAAA,IADA;AAEA,iBAAA;AAFA,OAAA;AAIA,aAAA,QAAA,CAAA,KAAA,CAAA;AACA;AAPA,GAZA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,KADA,EACA;AACA,UAAA,CAAA,GAAA,SAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,KAAA,KAAA,KAAA;AAAA,OAAA,EAAA,CAAA,CAAA;AACA,aAAA,CAAA,IAAA,CAAA,CAAA,GAAA;AACA,KAJA;AAMA,IAAA,QANA,oBAMA,OANA,EAMA;AACA,UAAA,OAAA,EAAA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,MAAA;AACA,OAFA,MAEA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,OAAA;AACA;AACA;AAZA,GArBA;AAmCA,EAAA,MAnCA,oBAmCA;AAAA;AACA;AAAA;AAAA,sBACA;AADA;AAAA;AAAA,cAIA;AAJA;AAAA,cAKA;AALA;AAAA,cASA;AATA;AAAA;AAAA,2BAUA,IAVA;AAAA,6BAUA,IAVA;AAAA,0BAUA,KAAA,QAAA,KAAA,MAAA,IAAA,IAAA,IAAA;AAVA;AAAA;AAAA,kBAUA,KAAA;AAVA;AAAA;AAAA,cAeA;AAfA;AAAA,cAgBA;AAhBA;AAAA;AAAA,qBAiBA,KAAA,WAAA,CAAA,KAAA,YAAA;AAjBA;AAAA;AAuBA;AA3DA,CAAA","sourcesContent":["<script>\n  import { colorList } from '@/components/tools/setting'\n  import ASwitch from 'ant-design-vue/es/switch'\n  import AList from \"ant-design-vue/es/list\"\n  import AListItem from \"ant-design-vue/es/list/Item\"\n  import { mixin } from '@/utils/mixin.js'\n\n  const Meta = AListItem.Meta\n\n  export default {\n    components: {\n      AListItem,\n      AList,\n      ASwitch,\n      Meta\n    },\n    mixins: [mixin],\n    data () {\n      return {\n      }\n    },\n    filters: {\n      themeFilter(theme) {\n        const themeMap = {\n          'dark': '暗色',\n          'light': '白色'\n        }\n        return themeMap[theme]\n      },\n    },\n    methods: {\n      colorFilter(color) {\n        const c = colorList.filter(o => o.color === color)[0]\n        return c && c.key\n      },\n\n      onChange (checked) {\n        if (checked) {\n          this.$store.dispatch('ToggleTheme',  'dark')\n        } else {\n          this.$store.dispatch('ToggleTheme',  'light')\n        }\n      }\n    },\n    render () {\n      return (\n        <AList itemLayout=\"horizontal\">\n          <AListItem>\n            <Meta>\n              <a slot=\"title\">风格配色</a>\n              <span slot=\"description\">\n                整体风格配色设置\n              </span>\n            </Meta>\n            <div slot=\"actions\">\n              <ASwitch checkedChildren=\"暗色\" unCheckedChildren=\"白色\" defaultChecked={this.navTheme === 'dark' && true || false} onChange={this.onChange} />\n            </div>\n          </AListItem>\n          <AListItem>\n            <Meta>\n              <a slot=\"title\">主题色</a>\n              <span slot=\"description\">\n                页面风格配色： <a domPropsInnerHTML={ this.colorFilter(this.primaryColor) }/>\n              </span>\n            </Meta>\n          </AListItem>\n        </AList>\n      )\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/views/account/settings"}]}