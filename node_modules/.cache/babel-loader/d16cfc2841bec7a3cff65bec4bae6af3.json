{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/modules/online/cgform/auto/OnlCgformTreeList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/modules/online/cgform/auto/OnlCgformTreeList.vue","mtime":1571018558930},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _toConsumableArray from \"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getAction, postAction, deleteAction, downFile } from '@/api/manage';\nimport { filterMultiDictText } from '@/components/dict/JDictSelectUtil';\nimport { filterObj } from '@/utils/util';\nimport JImportModal from '@/components/jeecg/JImportModal';\nexport default {\n  name: 'OnlCgformTreeList',\n  components: {\n    JImportModal: JImportModal\n  },\n  data: function data() {\n    return {\n      code: '87b55a515d3441b6b98e48e5b35474a6',\n      description: '在线报表功能测试页面',\n      currentTableName: \"\",\n      pidField: \"\",\n      hasChildrenField: \"\",\n      textField: '',\n      loading: false,\n      // 表头\n      columns: [],\n      //数据集\n      dataSource: [],\n      // 选择器\n      selectedRowKeys: [],\n      selectionRows: [],\n      // 分页参数\n      pagination: {\n        current: 1,\n        pageSize: 10,\n        pageSizeOptions: ['10', '20', '30'],\n        showTotal: function showTotal(total, range) {\n          return range[0] + '-' + range[1] + ' 共' + total + '条';\n        },\n        showQuickJumper: true,\n        showSizeChanger: true,\n        total: 0\n      },\n      url: {\n        getColumns: '/online/cgform/api/getColumns/',\n        getTreeData: '/online/cgform/api/getTreeData/',\n        optPre: \"/online/cgform/api/form/\",\n        exportXls: '/online/cgform/api/exportXls/',\n        buttonAction: '/online/cgform/api/doButton',\n        startProcess: \"/process/extActProcess/startMutilProcess\"\n      },\n      isorter: {\n        column: 'create_time',\n        order: 'desc'\n      },\n      dictOptions: {},\n      queryParam: {},\n      actionColumn: {\n        title: '操作',\n        dataIndex: 'action',\n        scopedSlots: {\n          customRender: 'action'\n        },\n        fixed: \"right\",\n        align: \"center\",\n        width: 150\n      },\n      formTemplate: \"99\",\n\n      /*自定义按钮-link*/\n      cgButtonLinkList: [],\n\n      /*自定义按钮-button*/\n      cgButtonList: [],\n\n      /*JS增强*/\n      EnhanceJS: '',\n\n      /*操作按钮权限*/\n      buttonSwitch: {\n        add: true,\n        update: true,\n        delete: true,\n        batch_delete: true,\n        import: true,\n        export: true\n      },\n      expandedRowKeys: []\n    };\n  },\n  created: function created() {\n    var _this2 = this;\n\n    this.initAutoListConfig().then(function () {\n      _this2.loadData(1);\n    }).catch(function (msg) {\n      console.log(msg);\n    });\n  },\n  mounted: function mounted() {//this.cgButtonJsHandler('mounted')\n  },\n  watch: {\n    '$route': function $route() {\n      var _this3 = this;\n\n      // 刷新参数放到这里去触发，就可以刷新相同界面了\n      this.initAutoListConfig().then(function () {\n        _this3.loadData(1);\n      }).catch(function (msg) {\n        console.log(msg);\n      });\n    }\n  },\n  computed: {\n    tableProps: function tableProps() {\n      var _this = this;\n\n      return {\n        // 列表项是否可选择\n        // https://vue.ant.design/components/table-cn/#rowSelection\n        rowSelection: {\n          selectedRowKeys: _this.selectedRowKeys,\n          onChange: function onChange(selectedRowKeys) {\n            return _this.selectedRowKeys = selectedRowKeys;\n          }\n        }\n      };\n    }\n  },\n  methods: {\n    resetData: function resetData() {\n      this.description = '';\n      this.currentTableName = '';\n      this.pidField = '';\n      this.hasChildrenField = '';\n      this.textField = '';\n      this.columns = [];\n      this.dataSource = [];\n      this.selectedRowKeys = [];\n      this.selectionRows = [];\n    },\n    initAutoListConfig: function initAutoListConfig() {\n      var _this4 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this4.$route.params.code) {\n          reject(\"列表加载需要参数CODE为空!\");\n        } else {\n          _this4.resetData();\n\n          _this4.loading = true;\n          _this4.code = _this4.$route.params.code;\n          getAction(\"\".concat(_this4.url.getColumns).concat(_this4.code)).then(function (res) {\n            console.log(\"--onlineList-加载动态列>>\", res);\n\n            if (res.success) {\n              _this4.configInfohandler(res);\n\n              resolve();\n            } else {\n              reject(\"onlineList-加载表配置信息失败\");\n            }\n\n            _this4.loading = false;\n          }).catch(function (err) {\n            reject(err);\n          });\n        }\n      });\n    },\n    configInfohandler: function configInfohandler(res) {\n      var _this5 = this;\n\n      this.dictOptions = res.result.dictOptions;\n      this.formTemplate = res.result.formTemplate;\n      this.description = res.result.description;\n      this.currentTableName = res.result.currentTableName;\n      this.pidField = res.result.pidField;\n      this.hasChildrenField = res.result.hasChildrenField;\n      this.textField = res.result.textField; //自定义按钮\n\n      this.initCgButtonList(res.result.cgButtonList); //JS增强\n\n      this.initCgEnhanceJs(res.result.enhanceJs); //操作按钮权限\n\n      this.initButtonSwitch(res.result.hideColumns);\n      var currColumns = res.result.columns;\n      var textFieldIndex = -1;\n\n      for (var a = 0; a < currColumns.length; a++) {\n        currColumns[a].align = 'left';\n\n        if (this.textField == currColumns[a].dataIndex) {\n          textFieldIndex = a;\n        }\n\n        if (currColumns[a].customRender) {\n          (function () {\n            var dictCode = currColumns[a].customRender;\n\n            currColumns[a].customRender = function (text) {\n              return filterMultiDictText(_this5.dictOptions[dictCode], text);\n            };\n          })();\n        }\n      }\n\n      if (textFieldIndex != -1) {\n        var textFieldColumn = currColumns.splice(textFieldIndex, 1);\n        currColumns.unshift(textFieldColumn[0]);\n      }\n\n      currColumns.push(this.actionColumn);\n      this.columns = _toConsumableArray(currColumns);\n    },\n    //加载根节点\n    loadData: function loadData(arg) {\n      var _this6 = this;\n\n      if (arg == 1) {\n        this.pagination.current = 1;\n      }\n\n      this.loading = true;\n      this.expandedRowKeys = [];\n      var params = this.getQueryParams(); //查询条件\n\n      params[this.pidField] = '0';\n      console.log(\"--onlineList-查询条件-->\", params);\n      getAction(\"\".concat(this.url.getTreeData).concat(this.code), params).then(function (res) {\n        console.log(\"--onlineList-列表数据\", res);\n\n        if (res.success) {\n          var result = res.result;\n\n          if (Number(result.total) > 0) {\n            _this6.pagination.total = Number(result.total);\n            var dataSource = res.result.records.map(function (item) {\n              // 判断是否标记了带有子级\n              if (item[_this6.hasChildrenField] === true || item[_this6.hasChildrenField] == '1') {\n                var loadChild = {\n                  id: \"\".concat(item.id, \"_loadChild\"),\n                  name: 'loading...',\n                  isLoading: true\n                };\n                item.children = [loadChild];\n              }\n\n              return item;\n            });\n            _this6.dataSource = dataSource;\n          } else {\n            _this6.pagination.total = 0;\n            _this6.dataSource = [];\n          }\n        } else {\n          _this6.$message.warning(res.message);\n        }\n\n        _this6.loading = false;\n      });\n    },\n    //加载叶子节点\n    handleExpand: function handleExpand(expanded, record) {\n      var _this7 = this;\n\n      // 判断是否是展开状态\n      if (expanded) {\n        this.expandedRowKeys.push(record.id);\n\n        if (record.children.length > 0 && record.children[0].isLoading === true) {\n          var params = this.getQueryParams(); //查询条件\n\n          params[this.pidField] = record.id;\n          getAction(\"\".concat(this.url.getTreeData).concat(this.code), params).then(function (res) {\n            if (res.success) {\n              if (Number(res.result.total) > 0) {\n                var dataSource = res.result.records.map(function (item) {\n                  // 判断是否标记了带有子级\n                  if (item[_this7.hasChildrenField] === true || item[_this7.hasChildrenField] == '1') {\n                    var loadChild = {\n                      id: \"\".concat(item.id, \"_loadChild\"),\n                      name: 'loading...',\n                      isLoading: true\n                    };\n                    item.children = [loadChild];\n                  }\n\n                  return item;\n                });\n                record.children = dataSource;\n              } else {\n                record.children = '';\n                record.hasChildrenField = '0';\n              }\n            } else {\n              _this7.$message.warning(res.message);\n            }\n          });\n        }\n      } else {\n        var keyIndex = this.expandedRowKeys.indexOf(record.id);\n\n        if (keyIndex >= 0) {\n          this.expandedRowKeys.splice(keyIndex, 1);\n        }\n      }\n    },\n    getQueryParams: function getQueryParams() {\n      var param = Object.assign({}, this.queryParam, this.isorter);\n      param.pageNo = this.pagination.current;\n      param.pageSize = this.pagination.pageSize;\n      return filterObj(param);\n    },\n    initCgButtonList: function initCgButtonList(btnList) {\n      var linkArr = [];\n      var buttonArr = [];\n\n      if (btnList && btnList.length > 0) {\n        for (var i = 0; i < btnList.length; i++) {\n          var temp = btnList[i];\n\n          if (temp.buttonStyle == 'button') {\n            buttonArr.push(temp);\n          } else if (temp.buttonStyle == 'link') {\n            linkArr.push(temp);\n          }\n        }\n      }\n\n      this.cgButtonLinkList = [].concat(linkArr);\n      this.cgButtonList = [].concat(buttonArr);\n    },\n    initCgEnhanceJs: function initCgEnhanceJs(enhanceJs) {\n      //console.log(\"--onlineList-js增强\",enhanceJs)\n      if (enhanceJs) {\n        var Obj = eval(\"(\" + enhanceJs + \")\");\n        this.EnhanceJS = new Obj(getAction, postAction, deleteAction);\n        this.cgButtonJsHandler('created');\n      } else {\n        this.EnhanceJS = '';\n      }\n    },\n    initButtonSwitch: function initButtonSwitch(hideColumns) {\n      var _this8 = this;\n\n      if (hideColumns && hideColumns.length > 0) {\n        Object.keys(this.buttonSwitch).forEach(function (key) {\n          if (hideColumns.indexOf(key) >= 0) {\n            _this8.buttonSwitch[key] = false;\n          }\n        });\n      }\n    },\n    onClearSelected: function onClearSelected() {\n      this.selectedRowKeys = [];\n      this.selectionRows = [];\n    },\n    handleTableChange: function handleTableChange(pagination, filters, sorter) {\n      //TODO 筛选\n      if (Object.keys(sorter).length > 0) {\n        this.isorter.column = sorter.field;\n        this.isorter.order = \"ascend\" == sorter.order ? \"asc\" : \"desc\";\n      }\n\n      this.pagination = pagination;\n      this.loadData();\n    },\n\n    /*-------数据格式化-begin----------*/\n    getDateNoTime: function getDateNoTime(text) {\n      if (!text) {\n        return '';\n      }\n\n      var a = text;\n\n      if (a.length > 10) {\n        a = a.substring(0, 10);\n      }\n\n      return a;\n    },\n    getImgView: function getImgView(text) {\n      if (text && text.indexOf(\",\") > 0) {\n        text = text.substring(0, text.indexOf(\",\"));\n      }\n\n      return window._CONFIG['imgDomainURL'] + \"/\" + text;\n    },\n    uploadFile: function uploadFile(text) {\n      if (!text) {\n        this.$message.warning(\"未知的文件\");\n        return;\n      }\n\n      if (text.indexOf(\",\") > 0) {\n        text = text.substring(0, text.indexOf(\",\"));\n      }\n\n      window.open(window._CONFIG['domianURL'] + \"/sys/common/download/\" + text);\n    },\n\n    /*-------数据格式化-end----------*/\n\n    /*-------功能按钮触发事件-begin----------*/\n    handleEdit: function handleEdit(record) {\n      this.cgButtonLinkHandler(record, \"beforeEdit\", \"js\");\n      this.$refs.modal.edit(this.formTemplate, record.id);\n    },\n    handleDetail: function handleDetail(record) {\n      this.$refs.modal.detail(this.formTemplate, record.id);\n    },\n    handleDeleteOne: function handleDeleteOne(record) {\n      this.cgButtonLinkHandler(record, \"beforeDelete\", \"js\");\n      this.handleDelete(record.id);\n    },\n    handleDelete: function handleDelete(id) {\n      var _this9 = this;\n\n      deleteAction(this.url.optPre + this.code + \"/\" + id).then(function (res) {\n        if (res.success) {\n          _this9.$message.success(res.message);\n\n          _this9.loadData();\n        } else {\n          _this9.$message.warning(res.message);\n        }\n      });\n    },\n    handleAdd: function handleAdd() {\n      this.cgButtonJsHandler('beforeAdd');\n      this.$refs.modal.add(this.formTemplate);\n    },\n    handleFormSuccess: function handleFormSuccess() {\n      this.loadData();\n    },\n    handleImportXls: function handleImportXls() {\n      this.$refs.importModal.show();\n    },\n    importOk: function importOk() {\n      this.loadData(1);\n    },\n    getImportUrl: function getImportUrl() {\n      return '/online/cgform/api/importXls/' + this.code;\n    },\n    handleExportXls: function handleExportXls() {\n      var _this10 = this;\n\n      var param = this.queryParam;\n\n      if (this.selectedRowKeys && this.selectedRowKeys.length > 0) {\n        param['selections'] = this.selectedRowKeys.join(\",\");\n      }\n\n      console.log(\"导出参数\", param);\n      var paramsStr = JSON.stringify(filterObj(param));\n      downFile(this.url.exportXls + this.code, {\n        paramsStr: paramsStr\n      }).then(function (data) {\n        if (!data) {\n          _this10.$message.warning(\"文件下载失败\");\n\n          return;\n        }\n\n        if (typeof window.navigator.msSaveBlob !== 'undefined') {\n          window.navigator.msSaveBlob(new Blob([data]), _this10.description + '.xls');\n        } else {\n          var url = window.URL.createObjectURL(new Blob([data]));\n          var link = document.createElement('a');\n          link.style.display = 'none';\n          link.href = url;\n          link.setAttribute('download', _this10.description + '.xls');\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link); //下载完成移除元素\n\n          window.URL.revokeObjectURL(url); //释放掉blob对象\n        }\n      });\n    },\n    handleDelBatch: function handleDelBatch() {\n      if (this.selectedRowKeys.length <= 0) {\n        this.$message.warning('请选择一条记录！');\n        return false;\n      } else {\n        var ids = \"\";\n        var that = this;\n        that.selectedRowKeys.forEach(function (val) {\n          ids += val + \",\";\n        });\n        that.$confirm({\n          title: \"确认删除\",\n          content: \"是否删除选中数据?\",\n          onOk: function onOk() {\n            that.handleDelete(ids);\n            that.onClearSelected();\n          }\n        });\n      }\n    },\n\n    /*-------功能按钮触发事件-begin----------*/\n\n    /*-------JS增强-begin----------*/\n    cgButtonLinkHandler: function cgButtonLinkHandler(record, buttonCode, optType) {\n      var _this11 = this;\n\n      if (optType == \"js\") {\n        if (this.EnhanceJS[buttonCode]) {\n          this.EnhanceJS[buttonCode](this, record);\n        }\n      } else if (optType == \"action\") {\n        var params = {\n          formId: this.code,\n          buttonCode: buttonCode,\n          dataId: record.id\n        };\n        console.log(\"自定义按钮link请求后台参数：\", params);\n        postAction(this.url.buttonAction, params).then(function (res) {\n          if (res.success) {\n            _this11.loadData();\n\n            _this11.$message.success(\"处理完成!\");\n          } else {\n            _this11.$message.warning(\"处理失败!\");\n          }\n        });\n      }\n    },\n    cgButtonJsHandler: function cgButtonJsHandler(buttonCode) {\n      if (this.EnhanceJS[buttonCode]) {\n        this.EnhanceJS[buttonCode](this);\n      }\n    },\n    cgButtonActionHandler: function cgButtonActionHandler(buttonCode) {\n      var _this12 = this;\n\n      //处理自定义button的 需要配置该button自定义sql\n      if (!this.selectedRowKeys || this.selectedRowKeys.length == 0) {\n        this.$message.warning(\"请先选中一条记录\");\n        return false;\n      }\n\n      if (this.selectedRowKeys.length > 1) {\n        this.$message.warning(\"请只选中一条记录\");\n        return false;\n      }\n\n      var params = {\n        formId: this.code,\n        buttonCode: buttonCode,\n        dataId: this.selectedRowKeys[0]\n      };\n      console.log(\"自定义按钮请求后台参数：\", params);\n      postAction(this.url.buttonAction, params).then(function (res) {\n        if (res.success) {\n          _this12.loadData();\n\n          _this12.$message.success(\"处理完成!\");\n        } else {\n          _this12.$message.warning(\"处理失败!\");\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["OnlCgformTreeList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-card :bordered=\"false\" style=\"height: 100%\">\n    <!-- 操作按钮区域 -->\n    <div class=\"table-operator\">\n      <a-button v-if=\"buttonSwitch.add\" @click=\"handleAdd\" type=\"primary\" icon=\"plus\">新增</a-button>\n      <a-button v-if=\"buttonSwitch.import\" @click=\"handleImportXls\" type=\"primary\" icon=\"upload\" style=\"margin-left:8px\">导入</a-button>\n      <a-button v-if=\"buttonSwitch.export\" @click=\"handleExportXls\" type=\"primary\" icon=\"download\" style=\"margin-left:8px\">导出</a-button>\n      <template v-if=\"cgButtonList && cgButtonList.length>0\" v-for=\"(item,index) in cgButtonList\">\n        <a-button\n          v-if=\" item.optType=='js' \"\n          :key=\" 'cgbtn'+index \"\n          @click=\"cgButtonJsHandler(item.buttonCode)\"\n          type=\"primary\"\n          :icon=\"item.buttonIcon\"\n          style=\"margin-left:8px\">\n          {{ item.buttonName }}\n        </a-button>\n        <a-button\n          v-else-if=\" item.optType=='action' \"\n          :key=\" 'cgbtn'+index \"\n          @click=\"cgButtonActionHandler(item.buttonCode)\"\n          type=\"primary\"\n          :icon=\"item.buttonIcon\"\n          style=\"margin-left:8px\">\n          {{ item.buttonName }}\n        </a-button>\n      </template>\n\n      <a-button\n        v-if=\"buttonSwitch.batch_delete\"\n        @click=\"handleDelBatch\"\n        style=\"margin-left:8px\"\n        v-show=\"selectedRowKeys.length > 0\"\n        ghost\n        type=\"primary\"\n        icon=\"delete\">批量删除</a-button>\n    </div>\n\n    <div>\n      <div class=\"ant-alert ant-alert-info\" style=\"margin-bottom: 16px;\">\n        <i class=\"anticon anticon-info-circle ant-alert-icon\"></i>\n        已选择&nbsp;<a style=\"font-weight: 600\">{{ selectedRowKeys.length }}</a>项&nbsp;&nbsp;\n        <a style=\"margin-left: 24px\" @click=\"onClearSelected\">清空</a>\n      </div>\n\n      <a-table\n        ref=\"cgformTreeList\"\n        size=\"middle\"\n        rowKey=\"id\"\n        :columns=\"columns\"\n        :dataSource=\"dataSource\"\n        :pagination=\"pagination\"\n        :loading=\"loading\"\n        @change=\"handleTableChange\"\n        v-bind=\"tableProps\"\n        @expand=\"handleExpand\"\n        style=\"min-height: 300px\"\n        :expandedRowKeys=\"expandedRowKeys\">\n\n        <template slot=\"dateSlot\" slot-scope=\"text\">\n          <span>{{ getDateNoTime(text) }}</span>\n        </template>\n\n        <template slot=\"htmlSlot\" slot-scope=\"text\">\n          <div v-html=\"text\"></div>\n        </template>\n\n        <template slot=\"imgSlot\" slot-scope=\"text\">\n          <span v-if=\"!text\" style=\"font-size: 12px;font-style: italic;\">无此图片</span>\n          <img v-else :src=\"getImgView(text)\" height=\"25px\" alt=\"图片不存在\" style=\"max-width:80px;font-size: 12px;font-style: italic;\"/>\n        </template>\n\n        <template slot=\"fileSlot\" slot-scope=\"text\">\n          <span v-if=\"!text\" style=\"font-size: 12px;font-style: italic;\">无此文件</span>\n          <a-button\n            v-else\n            :ghost=\"true\"\n            type=\"primary\"\n            icon=\"download\"\n            size=\"small\"\n            @click=\"uploadFile(text)\">\n            下载\n          </a-button>\n        </template>\n\n        <span slot=\"action\" slot-scope=\"text, record\">\n          <template v-if=\"buttonSwitch.update\">\n            <a @click=\"handleEdit(record)\">编辑</a>\n            <a-divider type=\"vertical\"/>\n          </template>\n          <a-dropdown>\n            <a class=\"ant-dropdown-link\">\n              更多 <a-icon type=\"down\" />\n            </a>\n            <a-menu slot=\"overlay\">\n              <a-menu-item >\n                <a @click=\"handleDetail(record)\">详情</a>\n              </a-menu-item>\n              <a-menu-item v-if=\"buttonSwitch.delete\">\n                <a-popconfirm title=\"确定删除吗?\" @confirm=\"() => handleDeleteOne(record)\">\n                  <a>删除</a>\n                </a-popconfirm>\n              </a-menu-item>\n              <!-- 自定义按钮 -->\n              <template v-if=\"cgButtonLinkList && cgButtonLinkList.length>0\" v-for=\"(btnItem,btnIndex) in cgButtonLinkList\">\n                <a-menu-item :key=\" 'cgbtnLink'+btnIndex \">\n                  <a href=\"javascript:void(0);\" @click=\"cgButtonLinkHandler(record,btnItem.buttonCode,btnItem.optType)\">\n                    <a-icon v-if=\"btnItem.buttonIcon\" :type=\"btnItem.buttonIcon\" />\n                    {{ btnItem.buttonName }}\n                  </a>\n                </a-menu-item>\n              </template>\n\n            </a-menu>\n          </a-dropdown>\n        </span>\n\n      </a-table>\n\n      <onl-cgform-auto-modal @success=\"handleFormSuccess\" ref=\"modal\" :code=\"code\"></onl-cgform-auto-modal>\n\n      <j-import-modal ref=\"importModal\" :url=\"getImportUrl()\" @ok=\"importOk\"></j-import-modal>\n    </div>\n  </a-card>\n</template>\n\n<script>\n\n  import { getAction,postAction,deleteAction,downFile } from '@/api/manage'\n  import { filterMultiDictText } from '@/components/dict/JDictSelectUtil'\n  import { filterObj } from '@/utils/util';\n  import JImportModal from '@/components/jeecg/JImportModal'\n\n  export default {\n    name: 'OnlCgformTreeList',\n    components: {\n      JImportModal\n    },\n    data() {\n      return {\n        code: '87b55a515d3441b6b98e48e5b35474a6',\n        description: '在线报表功能测试页面',\n        currentTableName:\"\",\n        pidField:\"\",\n        hasChildrenField:\"\",\n        textField:'',\n        loading: false,\n        // 表头\n        columns: [],\n        //数据集\n        dataSource: [],\n        // 选择器\n        selectedRowKeys: [],\n        selectionRows: [],\n        // 分页参数\n        pagination: {\n          current: 1,\n          pageSize: 10,\n          pageSizeOptions: ['10', '20', '30'],\n          showTotal: (total, range) => {\n            return range[0] + '-' + range[1] + ' 共' + total + '条'\n          },\n          showQuickJumper: true,\n          showSizeChanger: true,\n          total: 0\n        },\n\n        url: {\n          getColumns: '/online/cgform/api/getColumns/',\n          getTreeData: '/online/cgform/api/getTreeData/',\n          optPre:\"/online/cgform/api/form/\",\n          exportXls:'/online/cgform/api/exportXls/',\n          buttonAction:'/online/cgform/api/doButton',\n          startProcess: \"/process/extActProcess/startMutilProcess\",\n        },\n        isorter:{\n          column: 'create_time',\n          order: 'desc',\n        },\n        dictOptions:{\n\n        },\n\n        queryParam:{\n\n        },\n        actionColumn:{\n          title: '操作',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' },\n          fixed:\"right\",\n          align:\"center\",\n          width:150\n        },\n        formTemplate:\"99\",\n\n        /*自定义按钮-link*/\n        cgButtonLinkList:[],\n        /*自定义按钮-button*/\n        cgButtonList:[],\n        /*JS增强*/\n        EnhanceJS:'',\n        /*操作按钮权限*/\n        buttonSwitch:{\n          add:true,\n          update:true,\n          delete:true,\n          batch_delete:true,\n          import:true,\n          export:true\n        },\n        expandedRowKeys:[]\n\n      }\n    },\n    created() {\n      this.initAutoListConfig().then(()=>{\n        this.loadData(1)\n      }).catch(msg=>{\n        console.log(msg)\n      })\n    },\n    mounted(){\n      //this.cgButtonJsHandler('mounted')\n    },\n    watch: {\n      '$route'() {\n        // 刷新参数放到这里去触发，就可以刷新相同界面了\n        this.initAutoListConfig().then(()=>{\n          this.loadData(1)\n        }).catch(msg=>{\n          console.log(msg)\n        })\n      }\n    },\n    computed: {\n      tableProps() {\n        let _this = this\n        return {\n          // 列表项是否可选择\n          // https://vue.ant.design/components/table-cn/#rowSelection\n          rowSelection: {\n            selectedRowKeys: _this.selectedRowKeys,\n            onChange: (selectedRowKeys) => _this.selectedRowKeys = selectedRowKeys\n          }\n        }\n      }\n    },\n    methods: {\n      resetData(){\n        this.description=''\n        this.currentTableName=''\n        this.pidField=''\n        this.hasChildrenField=''\n        this.textField=''\n        this.columns = []\n        this.dataSource = []\n        this.selectedRowKeys=[]\n        this.selectionRows=[]\n      },\n      initAutoListConfig() {\n        return new Promise((resolve, reject) => {\n          if (!this.$route.params.code) {\n            reject(\"列表加载需要参数CODE为空!\")\n          } else {\n            this.resetData()\n            this.loading = true\n            this.code = this.$route.params.code\n            getAction(`${this.url.getColumns}${this.code}`)\n              .then(res => {\n                console.log(\"--onlineList-加载动态列>>\", res);\n                if(res.success){\n                  this.configInfohandler(res)\n                  resolve();\n                }else{\n                  reject(\"onlineList-加载表配置信息失败\")\n                }\n                this.loading = false\n              })\n              .catch(err => {\n                reject(err)\n              })\n          }\n        })\n      },\n      configInfohandler(res){\n        this.dictOptions = res.result.dictOptions\n        this.formTemplate = res.result.formTemplate\n        this.description = res.result.description\n        this.currentTableName = res.result.currentTableName\n        this.pidField = res.result.pidField\n        this.hasChildrenField = res.result.hasChildrenField\n        this.textField = res.result.textField\n        //自定义按钮\n        this.initCgButtonList(res.result.cgButtonList)\n        //JS增强\n        this.initCgEnhanceJs(res.result.enhanceJs)\n        //操作按钮权限\n        this.initButtonSwitch(res.result.hideColumns)\n        let currColumns = res.result.columns\n        let textFieldIndex = -1\n        for(let a=0;a<currColumns.length;a++){\n          currColumns[a].align = 'left'\n          if(this.textField==currColumns[a].dataIndex){\n            textFieldIndex = a\n          }\n          if(currColumns[a].customRender){\n            let dictCode = currColumns[a].customRender;\n            currColumns[a].customRender=(text)=>{\n              return filterMultiDictText(this.dictOptions[dictCode], text);\n            }\n          }\n        }\n        if(textFieldIndex!=-1){\n          let textFieldColumn = currColumns.splice(textFieldIndex,1)\n          currColumns.unshift(textFieldColumn[0])\n        }\n        currColumns.push(this.actionColumn);\n        this.columns = [...currColumns]\n      },\n      //加载根节点\n      loadData(arg){\n        if(arg==1){\n          this.pagination.current=1\n        }\n        this.loading = true\n        this.expandedRowKeys=[]\n        let params = this.getQueryParams();//查询条件\n        params[this.pidField]='0'\n        console.log(\"--onlineList-查询条件-->\",params)\n        getAction(`${this.url.getTreeData}${this.code}`,params).then((res)=>{\n          console.log(\"--onlineList-列表数据\",res)\n          if(res.success){\n            let result = res.result;\n            if(Number(result.total)>0){\n              this.pagination.total = Number(result.total)\n              let dataSource = res.result.records.map(item => {\n                // 判断是否标记了带有子级\n                if (item[this.hasChildrenField] === true || item[this.hasChildrenField]=='1') {\n                  let loadChild = { id: `${item.id}_loadChild`, name: 'loading...', isLoading: true }\n                  item.children = [loadChild]\n                }\n                return item\n              })\n              this.dataSource = dataSource\n            }else{\n              this.pagination.total=0;\n              this.dataSource=[]\n            }\n          }else{\n            this.$message.warning(res.message)\n          }\n          this.loading = false\n        })\n      },\n      //加载叶子节点\n      handleExpand(expanded, record) {\n        // 判断是否是展开状态\n        if (expanded) {\n          this.expandedRowKeys.push(record.id)\n          if (record.children.length>0 && record.children[0].isLoading === true) {\n            let params = this.getQueryParams();//查询条件\n            params[this.pidField] = record.id\n            getAction(`${this.url.getTreeData}${this.code}`,params).then((res)=>{\n              if(res.success){\n                if(Number(res.result.total)>0){\n                  let dataSource = res.result.records.map(item => {\n                    // 判断是否标记了带有子级\n                    if (item[this.hasChildrenField] === true || item[this.hasChildrenField]=='1') {\n                      let loadChild = { id: `${item.id}_loadChild`, name: 'loading...', isLoading: true }\n                      item.children = [loadChild]\n                    }\n                    return item\n                  })\n                  record.children = dataSource\n                }else{\n                  record.children=''\n                  record.hasChildrenField='0'\n                }\n              }else{\n                this.$message.warning(res.message)\n              }\n            })\n          }\n        }else{\n          let keyIndex = this.expandedRowKeys.indexOf(record.id)\n          if(keyIndex>=0){\n            this.expandedRowKeys.splice(keyIndex, 1);\n          }\n        }\n      },\n      getQueryParams() {\n        let param = Object.assign({}, this.queryParam,this.isorter);\n        param.pageNo = this.pagination.current;\n        param.pageSize = this.pagination.pageSize;\n        return filterObj(param);\n      },\n      initCgButtonList(btnList){\n        let linkArr = []\n        let buttonArr = []\n        if(btnList && btnList.length>0){\n          for(let i=0;i<btnList.length;i++){\n            let temp = btnList[i]\n            if(temp.buttonStyle=='button'){\n              buttonArr.push(temp)\n            }else if(temp.buttonStyle=='link'){\n              linkArr.push(temp)\n            }\n          }\n        }\n        this.cgButtonLinkList = [...linkArr]\n        this.cgButtonList=[...buttonArr]\n      },\n      initCgEnhanceJs(enhanceJs){\n        //console.log(\"--onlineList-js增强\",enhanceJs)\n        if(enhanceJs){\n          let Obj = eval (\"(\" + enhanceJs + \")\");\n          this.EnhanceJS = new Obj(getAction,postAction,deleteAction);\n          this.cgButtonJsHandler('created')\n        }else{\n          this.EnhanceJS = ''\n        }\n      },\n      initButtonSwitch(hideColumns){\n        if(hideColumns && hideColumns.length>0){\n          Object.keys(this.buttonSwitch).forEach(key=>{\n            if(hideColumns.indexOf(key)>=0){\n              this.buttonSwitch[key]=false\n            }\n          })\n\n        }\n      },\n      onClearSelected(){\n        this.selectedRowKeys = []\n        this.selectionRows = []\n      },\n      handleTableChange(pagination, filters, sorter){\n        //TODO 筛选\n        if (Object.keys(sorter).length>0){\n          this.isorter.column = sorter.field;\n          this.isorter.order = \"ascend\"==sorter.order?\"asc\":\"desc\"\n        }\n        this.pagination = pagination;\n        this.loadData();\n      },\n      /*-------数据格式化-begin----------*/\n      getDateNoTime(text){\n        if(!text){\n          return ''\n        }\n        let a = text;\n        if(a.length>10){\n          a = a.substring(0,10);\n        }\n        return a;\n      },\n      getImgView(text){\n        if(text && text.indexOf(\",\")>0){\n          text = text.substring(0,text.indexOf(\",\"))\n        }\n        return window._CONFIG['imgDomainURL']+\"/\"+text\n      },\n      uploadFile(text){\n        if(!text){\n          this.$message.warning(\"未知的文件\")\n          return;\n        }\n        if(text.indexOf(\",\")>0){\n          text = text.substring(0,text.indexOf(\",\"))\n        }\n        window.open(window._CONFIG['domianURL'] + \"/sys/common/download/\"+text);\n      },\n      /*-------数据格式化-end----------*/\n\n      /*-------功能按钮触发事件-begin----------*/\n      handleEdit(record){\n        this.cgButtonLinkHandler(record,\"beforeEdit\",\"js\")\n        this.$refs.modal.edit(this.formTemplate,record.id);\n      },\n      handleDetail(record){\n        this.$refs.modal.detail(this.formTemplate,record.id);\n      },\n      handleDeleteOne(record){\n        this.cgButtonLinkHandler(record,\"beforeDelete\",\"js\")\n        this.handleDelete(record.id)\n      },\n      handleDelete(id){\n        deleteAction(this.url.optPre+this.code+\"/\"+id).then((res)=>{\n          if(res.success){\n            this.$message.success(res.message)\n            this.loadData()\n          }else{\n            this.$message.warning(res.message)\n          }\n        })\n      },\n      handleAdd(){\n        this.cgButtonJsHandler('beforeAdd')\n        this.$refs.modal.add(this.formTemplate);\n      },\n      handleFormSuccess(){\n        this.loadData()\n      },\n      handleImportXls(){\n        this.$refs.importModal.show()\n      },\n      importOk(){\n        this.loadData(1)\n      },\n      getImportUrl(){\n        return '/online/cgform/api/importXls/'+this.code\n      },\n      handleExportXls(){\n        let param = this.queryParam;\n        if(this.selectedRowKeys && this.selectedRowKeys.length>0){\n          param['selections'] = this.selectedRowKeys.join(\",\")\n        }\n        console.log(\"导出参数\",param)\n        let paramsStr = JSON.stringify(filterObj(param));\n        downFile(this.url.exportXls+this.code,{paramsStr:paramsStr}).then((data)=>{\n          if (!data) {\n            this.$message.warning(\"文件下载失败\")\n            return\n          }\n          if (typeof window.navigator.msSaveBlob !== 'undefined') {\n            window.navigator.msSaveBlob(new Blob([data]), this.description+'.xls')\n          }else{\n            let url = window.URL.createObjectURL(new Blob([data]))\n            let link = document.createElement('a')\n            link.style.display = 'none'\n            link.href = url\n            link.setAttribute('download', this.description+'.xls')\n            document.body.appendChild(link)\n            link.click()\n            document.body.removeChild(link); //下载完成移除元素\n            window.URL.revokeObjectURL(url); //释放掉blob对象\n          }\n        })\n      },\n      handleDelBatch(){\n        if(this.selectedRowKeys.length<=0){\n          this.$message.warning('请选择一条记录！');\n          return false;\n        }else{\n          let ids = \"\";\n          let that = this;\n          that.selectedRowKeys.forEach(function(val) {\n            ids+=val+\",\";\n          });\n          that.$confirm({\n            title:\"确认删除\",\n            content:\"是否删除选中数据?\",\n            onOk: function(){\n              that.handleDelete(ids)\n              that.onClearSelected();\n            }\n          });\n        }\n      },\n      /*-------功能按钮触发事件-begin----------*/\n\n      /*-------JS增强-begin----------*/\n      cgButtonLinkHandler(record,buttonCode,optType){\n        if(optType==\"js\"){\n          if(this.EnhanceJS[buttonCode]){\n            this.EnhanceJS[buttonCode](this,record)\n          }\n        }else if(optType==\"action\"){\n          let params = {\n            formId:this.code,\n            buttonCode:buttonCode,\n            dataId:record.id\n          }\n          console.log(\"自定义按钮link请求后台参数：\",params)\n          postAction(this.url.buttonAction,params).then(res=>{\n            if(res.success){\n              this.loadData()\n              this.$message.success(\"处理完成!\")\n            }else{\n              this.$message.warning(\"处理失败!\")\n            }\n          })\n        }\n      },\n      cgButtonJsHandler(buttonCode){\n        if(this.EnhanceJS[buttonCode]){\n          this.EnhanceJS[buttonCode](this)\n        }\n      },\n      cgButtonActionHandler(buttonCode){\n        //处理自定义button的 需要配置该button自定义sql\n        if(!this.selectedRowKeys || this.selectedRowKeys.length==0){\n          this.$message.warning(\"请先选中一条记录\")\n          return false\n        }\n        if(this.selectedRowKeys.length>1){\n          this.$message.warning(\"请只选中一条记录\")\n          return false\n        }\n        let params = {\n          formId:this.code,\n          buttonCode:buttonCode,\n          dataId:this.selectedRowKeys[0]\n        }\n        console.log(\"自定义按钮请求后台参数：\",params)\n        postAction(this.url.buttonAction,params).then(res=>{\n          if(res.success){\n            this.loadData()\n            this.$message.success(\"处理完成!\")\n          }else{\n            this.$message.warning(\"处理失败!\")\n          }\n        })\n\n      },\n      /*-------JS增强-end----------*/\n\n    }\n  }\n</script>\n<style>\n  .ant-card-body .table-operator{\n    margin-bottom: 18px;\n  }\n  .ant-table-tbody .ant-table-row td{\n    padding-top:15px;\n    padding-bottom:15px;\n  }\n  .anty-row-operator button{margin: 0 5px}\n  .ant-btn-danger{background-color: #ffffff}\n\n  .anty-img-wrap{height:25px;position: relative;}\n  .anty-img-wrap > img{max-height:100%;}\n  .ant-modal-cust-warp{height: 100%}\n  .ant-modal-cust-warp .ant-modal-body{height:calc(100% - 110px) !important;overflow-y: auto}\n  .ant-modal-cust-warp .ant-modal-content{height:90% !important;overflow-y: hidden}\n</style>"],"sourceRoot":"src/views/modules/online/cgform/auto"}]}