{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/tools/DepartSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/tools/DepartSelect.vue","mtime":1571018558905},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getAction, putAction } from '@/api/manage';\nimport Vue from 'vue';\nimport store from '@/store/';\nimport { USER_INFO } from \"@/store/mutation-types\";\nexport default {\n  name: 'DepartSelect',\n  props: {\n    title: {\n      type: String,\n      default: \"部门选择\",\n      required: false\n    },\n    closable: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    username: {\n      type: String,\n      default: \"\",\n      required: false\n    }\n  },\n  watch: {\n    username: function username(val) {\n      if (val) {\n        this.loadDepartList();\n      }\n    }\n  },\n  data: function data() {\n    return {\n      currTitle: this.title,\n      visible: false,\n      departList: [],\n      departSelected: \"\",\n      validate_status: \"\",\n      currDepartName: \"\"\n    };\n  },\n  created: function created() {//this.loadDepartList()\n  },\n  methods: {\n    loadDepartList: function loadDepartList() {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        var url = \"/sys/user/getCurrentUserDeparts\";\n        _this.currDepartName = '';\n        getAction(url).then(function (res) {\n          if (res.success) {\n            var departs = res.result.list;\n            var orgCode = res.result.orgCode;\n\n            if (departs && departs.length > 0) {\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = departs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var i = _step.value;\n\n                  if (i.orgCode == orgCode) {\n                    _this.currDepartName = i.departName;\n                    break;\n                  }\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n            }\n\n            _this.departSelected = orgCode;\n            _this.departList = departs;\n\n            if (_this.currDepartName) {\n              _this.currTitle = \"部门切换（当前部门 : \" + _this.currDepartName + \"）\";\n            }\n          }\n\n          resolve();\n        });\n      });\n    },\n    close: function close() {\n      this.departClear();\n    },\n    departOk: function departOk() {\n      var _this2 = this;\n\n      if (!this.departSelected) {\n        this.validate_status = 'error';\n        return false;\n      }\n\n      var obj = {\n        orgCode: this.departSelected,\n        username: this.username\n      };\n      putAction(\"/sys/selectDepart\", obj).then(function (res) {\n        if (res.success) {\n          var userInfo = res.result.userInfo;\n          Vue.ls.set(USER_INFO, userInfo, 7 * 24 * 60 * 60 * 1000);\n          store.commit('SET_INFO', userInfo); //console.log(\"---切换组织机构---userInfo-------\",store.getters.userInfo.orgCode);\n\n          _this2.departClear();\n        }\n      });\n    },\n    show: function show() {\n      var _this3 = this;\n\n      //如果组件传值username此处就不用loadDepartList了\n      this.loadDepartList().then(function () {\n        _this3.visible = true;\n\n        if (!_this3.departList || _this3.departList.length <= 0) {\n          _this3.$message.warning(\"您尚未设置部门信息!\");\n\n          _this3.departClear();\n        }\n      });\n    },\n    departClear: function departClear() {\n      this.departList = [];\n      this.departSelected = \"\";\n      this.visible = false;\n      this.validate_status = '';\n      this.currDepartName = \"\";\n    }\n  }\n};",null]}