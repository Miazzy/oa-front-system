{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/table/index.js","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/table/index.js","mtime":1571018558905},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":1565525386522},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1565525383413}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\nimport T from \"ant-design-vue/es/table/Table\";\nimport get from \"lodash.get\";\nexport default {\n  data: function data() {\n    return {\n      needTotalList: [],\n      selectedRows: [],\n      selectedRowKeys: [],\n      localLoading: false,\n      localDataSource: [],\n      localPagination: Object.assign({}, T.props.pagination)\n    };\n  },\n  props: Object.assign({}, T.props, {\n    rowKey: {\n      type: [String, Function],\n      default: 'id'\n    },\n    data: {\n      type: Function,\n      required: true\n    },\n    pageNum: {\n      type: Number,\n      default: 1\n    },\n    pageSize: {\n      type: Number,\n      default: 10\n    },\n    showSizeChanger: {\n      type: Boolean,\n      default: true\n    },\n    showAlertInfo: {\n      type: Boolean,\n      default: false\n    },\n    showPagination: {\n      default: 'auto'\n    }\n  }),\n  watch: {\n    'localPagination.current': function localPaginationCurrent(val) {\n      this.$router.push({\n        name: this.$route.name,\n        params: Object.assign({}, this.$route.params, {\n          pageNo: val\n        })\n      });\n    },\n    pageNum: function pageNum(val) {\n      Object.assign(this.localPagination, {\n        current: val\n      });\n    },\n    pageSize: function pageSize(val) {\n      console.log('pageSize:', val);\n      Object.assign(this.localPagination, {\n        pageSize: val\n      });\n    },\n    showSizeChanger: function showSizeChanger(val) {\n      console.log('showSizeChanger', val);\n      Object.assign(this.localPagination, {\n        showSizeChanger: val\n      });\n    }\n  },\n  created: function created() {\n    this.localPagination = ['auto', true].includes(this.showPagination) && Object.assign({}, this.localPagination, {\n      current: this.pageNum,\n      pageSize: this.pageSize,\n      showSizeChanger: this.showSizeChanger\n    });\n    this.needTotalList = this.initTotalList(this.columns);\n    this.loadData();\n  },\n  methods: {\n    refresh: function refresh() {\n      this.loadData();\n    },\n    loadData: function loadData(pagination, filters, sorter) {\n      var _this = this;\n\n      this.localLoading = true;\n      var result = this.data(Object.assign({\n        pageNo: pagination && pagination.current || this.localPagination.current,\n        pageSize: pagination && pagination.pageSize || this.localPagination.pageSize\n      }, sorter && sorter.field && {\n        sortField: sorter.field\n      } || {}, sorter && sorter.order && {\n        sortOrder: sorter.order\n      } || {}, _objectSpread({}, filters)));\n\n      if (result instanceof Promise) {\n        result.then(function (r) {\n          _this.localPagination = Object.assign({}, _this.localPagination, {\n            current: r.pageNo,\n            // 返回结果中的当前分页数\n            total: r.totalCount,\n            // 返回结果中的总记录数\n            showSizeChanger: _this.showSizeChanger,\n            pageSize: pagination && pagination.pageSize || _this.localPagination.pageSize\n          });\n          !r.totalCount && ['auto', false].includes(_this.showPagination) && (_this.localPagination = false);\n          _this.localDataSource = r.data; // 返回结果中的数组数据\n\n          _this.localLoading = false;\n        });\n      }\n    },\n    initTotalList: function initTotalList(columns) {\n      var totalList = [];\n      columns && columns instanceof Array && columns.forEach(function (column) {\n        if (column.needTotal) {\n          totalList.push(_objectSpread({}, column, {\n            total: 0\n          }));\n        }\n      });\n      return totalList;\n    },\n    updateSelect: function updateSelect(selectedRowKeys, selectedRows) {\n      this.selectedRowKeys = selectedRowKeys;\n      this.selectedRows = selectedRows;\n      var list = this.needTotalList;\n      this.needTotalList = list.map(function (item) {\n        return _objectSpread({}, item, {\n          total: selectedRows.reduce(function (sum, val) {\n            var total = sum + get(val, item.dataIndex);\n            return isNaN(total) ? 0 : total;\n          }, 0)\n        });\n      }); // this.$emit('change', selectedRowKeys, selectedRows)\n    },\n    updateEdit: function updateEdit() {\n      this.selectedRows = [];\n    },\n    onClearSelected: function onClearSelected() {\n      this.selectedRowKeys = [];\n      this.updateSelect([], []);\n    },\n    renderMsg: function renderMsg(h) {\n      var _vm = this;\n\n      var d = []; // 构建 已选择\n\n      d.push(h('span', {\n        style: {\n          marginRight: '12px'\n        }\n      }, ['已选择 ', h('a', {\n        style: {\n          fontWeight: 600\n        }\n      }, this.selectedRows.length)])); // 构建 列统计\n\n      this.needTotalList.map(function (item) {\n        d.push(h('span', {\n          style: {\n            marginRight: '12px'\n          }\n        }, [\"\".concat(item.title, \"\\u603B\\u8BA1 \"), h('a', {\n          style: {\n            fontWeight: 600\n          }\n        }, \"\".concat(!item.customRender ? item.total : item.customRender(item.total)))]));\n      }); // 构建 清空选择\n\n      d.push(h('a', {\n        style: {\n          marginLeft: '24px'\n        },\n        on: {\n          click: _vm.onClearSelected\n        }\n      }, '清空'));\n      return d;\n    },\n    renderAlert: function renderAlert(h) {\n      return h('span', {\n        slot: 'message'\n      }, this.renderMsg(h));\n    }\n  },\n  render: function render(h) {\n    var _vm = this;\n\n    var props = {},\n        localKeys = Object.keys(this.$data);\n    Object.keys(T.props).forEach(function (k) {\n      var localKey = \"local\".concat(k.substring(0, 1).toUpperCase()).concat(k.substring(1));\n\n      if (localKeys.includes(localKey)) {\n        return props[k] = _vm[localKey];\n      }\n\n      return props[k] = _vm[k];\n    }); // 显示信息提示\n\n    if (this.showAlertInfo) {\n      props.rowSelection = {\n        selectedRowKeys: this.selectedRowKeys,\n        onChange: function onChange(selectedRowKeys, selectedRows) {\n          _vm.updateSelect(selectedRowKeys, selectedRows);\n\n          _vm.$emit('onSelect', {\n            selectedRowKeys: selectedRowKeys,\n            selectedRows: selectedRows\n          });\n        }\n      };\n      return h('div', {}, [h(\"a-alert\", {\n        style: {\n          marginBottom: '16px'\n        },\n        props: {\n          type: 'info',\n          showIcon: true\n        }\n      }, [_vm.renderAlert(h)]), h(\"a-table\", {\n        tag: \"component\",\n        attrs: props,\n        on: {\n          change: _vm.loadData\n        },\n        scopedSlots: this.$scopedSlots\n      }, this.$slots.default)]);\n    }\n\n    return h(\"a-table\", {\n      tag: \"component\",\n      attrs: props,\n      on: {\n        change: _vm.loadData\n      },\n      scopedSlots: this.$scopedSlots\n    }, this.$slots.default);\n  }\n};",null]}