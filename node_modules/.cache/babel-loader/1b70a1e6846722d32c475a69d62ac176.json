{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/tools/UserPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/tools/UserPassword.vue","mtime":1571018558907},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":1565525386522},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { putAction } from '@/api/manage';\nexport default {\n  name: \"UserPassword\",\n  data: function data() {\n    return {\n      title: \"修改密码\",\n      modalWidth: 800,\n      visible: false,\n      confirmLoading: false,\n      validatorRules: {\n        oldpassword: {\n          rules: [{\n            required: true,\n            message: '请输入旧密码!'\n          }]\n        },\n        password: {\n          rules: [{\n            required: true,\n            message: '请输入新密码!'\n          }, {\n            validator: this.validateToNextPassword\n          }]\n        },\n        confirmpassword: {\n          rules: [{\n            required: true,\n            message: '请确认新密码!'\n          }, {\n            validator: this.compareToFirstPassword\n          }]\n        }\n      },\n      confirmDirty: false,\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      form: this.$form.createForm(this),\n      url: \"sys/user/updatePassword\",\n      username: \"\"\n    };\n  },\n  methods: {\n    show: function show(uname) {\n      if (!uname) {\n        this.$message.warning(\"当前系统无登陆用户!\");\n        return;\n      } else {\n        this.username = uname;\n        this.form.resetFields();\n        this.visible = true;\n      }\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n      this.disableSubmit = false;\n      this.selectedRole = [];\n    },\n    handleOk: function handleOk() {\n      var _this = this;\n\n      var that = this; // 触发表单验证\n\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          that.confirmLoading = true;\n          var params = Object.assign({\n            username: _this.username\n          }, values);\n          console.log(\"修改密码提交数据\", params);\n          putAction(_this.url, params).then(function (res) {\n            if (res.success) {\n              console.log(res);\n              that.$message.success(res.message);\n              that.close();\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n          });\n        }\n      });\n    },\n    validateToNextPassword: function validateToNextPassword(rule, value, callback) {\n      var form = this.form;\n\n      if (value && this.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    },\n    compareToFirstPassword: function compareToFirstPassword(rule, value, callback) {\n      var form = this.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('两次输入的密码不一样！');\n      } else {\n        callback();\n      }\n    },\n    handleConfirmBlur: function handleConfirmBlur(e) {\n      var value = e.target.value;\n      this.confirmDirty = this.confirmDirty || !!value;\n    }\n  }\n};",null]}