{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/eslint-loader/index.js??ref--13-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/menu/index.js","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/menu/index.js","mtime":1571018558903},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _typeof from \"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport _mergeJSXProps2 from \"@vue/babel-helper-vue-jsx-merge-props\";\nimport _objectSpread from \"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport Menu from 'ant-design-vue/es/menu';\nimport Icon from 'ant-design-vue/es/icon';\nvar Item = Menu.Item,\n    SubMenu = Menu.SubMenu;\nexport default {\n  name: 'SMenu',\n  props: {\n    menu: {\n      type: Array,\n      required: true\n    },\n    theme: {\n      type: String,\n      required: false,\n      default: 'dark'\n    },\n    mode: {\n      type: String,\n      required: false,\n      default: 'inline'\n    },\n    collapsed: {\n      type: Boolean,\n      required: false,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      openKeys: [],\n      selectedKeys: [],\n      cachedOpenKeys: []\n    };\n  },\n  computed: {\n    rootSubmenuKeys: function rootSubmenuKeys(vm) {\n      var keys = [];\n      vm.menu.forEach(function (item) {\n        return keys.push(item.path);\n      });\n      return keys;\n    }\n  },\n  mounted: function mounted() {\n    this.updateMenu();\n  },\n  watch: {\n    collapsed: function collapsed(val) {\n      if (val) {\n        this.cachedOpenKeys = this.openKeys.concat();\n        this.openKeys = [];\n      } else {\n        this.openKeys = this.cachedOpenKeys;\n      }\n    },\n    $route: function $route() {\n      this.updateMenu();\n    }\n  },\n  methods: {\n    // select menu item\n    onOpenChange: function onOpenChange(openKeys) {\n      var _this = this;\n\n      // 在水平模式下时执行，并且不再执行后续\n      if (this.mode === 'horizontal') {\n        this.openKeys = openKeys;\n        return;\n      } // 非水平模式时\n\n\n      var latestOpenKey = openKeys.find(function (key) {\n        return !_this.openKeys.includes(key);\n      });\n\n      if (!this.rootSubmenuKeys.includes(latestOpenKey)) {\n        this.openKeys = openKeys;\n      } else {\n        this.openKeys = latestOpenKey ? [latestOpenKey] : [];\n      }\n    },\n    updateMenu: function updateMenu() {\n      var routes = this.$route.matched.concat();\n      var hidden = this.$route.meta.hidden;\n\n      if (routes.length >= 3 && hidden) {\n        routes.pop();\n        this.selectedKeys = [routes[routes.length - 1].path];\n      } else {\n        this.selectedKeys = [routes.pop().path];\n      }\n\n      var openKeys = [];\n\n      if (this.mode === 'inline') {\n        routes.forEach(function (item) {\n          openKeys.push(item.path);\n        });\n      } //update-begin-author:taoyan date:20190510 for:online表单菜单点击展开的一级目录不对\n\n\n      if (!this.selectedKeys || this.selectedKeys[0].indexOf(\":\") < 0) {\n        this.collapsed ? this.cachedOpenKeys = openKeys : this.openKeys = openKeys;\n      } //update-end-author:taoyan date:20190510 for:online表单菜单点击展开的一级目录不对\n\n    },\n    // render\n    renderItem: function renderItem(menu) {\n      if (!menu.hidden) {\n        return menu.children && !menu.alwaysShow ? this.renderSubMenu(menu) : this.renderMenuItem(menu);\n      }\n\n      return null;\n    },\n    renderMenuItem: function renderMenuItem(menu) {\n      var h = this.$createElement;\n      var target = menu.meta.target || null;\n      var tag = target && 'a' || 'router-link';\n      var props = {\n        to: {\n          name: menu.name\n        }\n      };\n\n      if (menu.route && menu.route === '0') {\n        props = {\n          to: {\n            path: menu.path\n          }\n        };\n      }\n\n      var attrs = {\n        href: menu.path,\n        target: menu.meta.target\n      };\n\n      if (menu.children && menu.alwaysShow) {\n        // 把有子菜单的 并且 父菜单是要隐藏子菜单的\n        // 都给子菜单增加一个 hidden 属性\n        // 用来给刷新页面时， selectedKeys 做控制用\n        menu.children.forEach(function (item) {\n          item.meta = Object.assign(item.meta, {\n            hidden: true\n          });\n        });\n      }\n\n      return h(Item, _mergeJSXProps([{}, {\n        key: menu.path\n      }]), [h(tag, {\n        \"props\": _objectSpread({}, props),\n        \"attrs\": _objectSpread({}, attrs)\n      }, [this.renderIcon(menu.meta.icon), h(\"span\", [menu.meta.title])])]);\n    },\n    renderSubMenu: function renderSubMenu(menu) {\n      var _this2 = this;\n\n      var h = this.$createElement;\n      var itemArr = [];\n\n      if (!menu.alwaysShow) {\n        menu.children.forEach(function (item) {\n          return itemArr.push(_this2.renderItem(item));\n        });\n      }\n\n      return h(SubMenu, _mergeJSXProps2([{}, {\n        key: menu.path\n      }]), [h(\"span\", {\n        \"slot\": \"title\"\n      }, [this.renderIcon(menu.meta.icon), h(\"span\", [menu.meta.title])]), itemArr]);\n    },\n    renderIcon: function renderIcon(icon) {\n      var h = this.$createElement;\n\n      if (icon === 'none' || icon === undefined) {\n        return null;\n      }\n\n      var props = {};\n      _typeof(icon) === 'object' ? props.component = icon : props.type = icon;\n      return h(Icon, {\n        \"props\": _objectSpread({}, props)\n      });\n    }\n  },\n  render: function render() {\n    var _this3 = this;\n\n    var h = arguments[0];\n    var mode = this.mode,\n        theme = this.theme,\n        menu = this.menu;\n    var props = {\n      mode: mode,\n      theme: theme,\n      openKeys: this.openKeys\n    };\n    var on = {\n      select: function select(obj) {\n        _this3.selectedKeys = obj.selectedKeys;\n\n        _this3.$emit('select', obj);\n      },\n      openChange: this.onOpenChange\n    };\n    var menuTree = menu.map(function (item) {\n      if (item.hidden) {\n        return null;\n      }\n\n      return _this3.renderItem(item);\n    }); // {...{ props, on: on }}\n\n    return h(Menu, {\n      \"props\": _objectSpread({}, props),\n      \"on\": _objectSpread({}, on),\n      \"model\": {\n        value: _this3.selectedKeys,\n        callback: function callback($$v) {\n          _this3.selectedKeys = $$v;\n        }\n      }\n    }, [menuTree]);\n  }\n};",null]}