{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/jeecg/modules/JeecgOrderModalForJEditableTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/jeecg/modules/JeecgOrderModalForJEditableTable.vue","mtime":1571018558922},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport JEditableTable from '@/components/jeecg/JEditableTable';\nimport { FormTypes, VALIDATE_NO_PASSED, getRefPromise, validateFormAndTables } from '@/utils/JEditableTableUtil';\nimport { httpAction, getAction } from '@/api/manage';\nimport JDate from '@/components/jeecg/JDate';\nimport pick from 'lodash.pick';\nimport moment from 'moment';\nexport default {\n  name: 'JeecgOrderModalForJEditableTable',\n  components: {\n    JDate: JDate,\n    JEditableTable: JEditableTable\n  },\n  data: function data() {\n    return {\n      title: '操作',\n      visible: false,\n      form: this.$form.createForm(this),\n      confirmLoading: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 6\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 24 - 6\n        }\n      },\n      activeKey: '1',\n      // 客户信息\n      table1: {\n        loading: false,\n        dataSource: [],\n        columns: [{\n          title: '客户名',\n          key: 'name',\n          width: '24%',\n          type: FormTypes.input,\n          defaultValue: '',\n          placeholder: '请输入${title}',\n          validateRules: [{\n            required: true,\n            message: '${title}不能为空'\n          }]\n        }, {\n          title: '性别',\n          key: 'sex',\n          width: '18%',\n          type: FormTypes.select,\n          options: [// 下拉选项\n          {\n            title: '男',\n            value: '1'\n          }, {\n            title: '女',\n            value: '2'\n          }],\n          defaultValue: '',\n          placeholder: '请选择${title}'\n        }, {\n          title: '身份证号',\n          key: 'idcard',\n          width: '24%',\n          type: FormTypes.input,\n          defaultValue: '',\n          placeholder: '请输入${title}',\n          validateRules: [{\n            pattern: '^\\\\d{6}(18|19|20)?\\\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\\\d|3[01])\\\\d{3}(\\\\d|[xX])$',\n            message: '${title}格式不正确'\n          }]\n        }, {\n          title: '手机号',\n          key: 'telphone',\n          width: '24%',\n          type: FormTypes.input,\n          defaultValue: '',\n          placeholder: '请输入${title}',\n          validateRules: [{\n            pattern: '^1(3|4|5|7|8)\\\\d{9}$',\n            message: '${title}格式不正确'\n          }]\n        }]\n      },\n      // 机票信息\n      table2: {\n        loading: false,\n        dataSource: [],\n        columns: [{\n          title: '航班号',\n          key: 'ticketCode',\n          width: '40%',\n          type: FormTypes.input,\n          defaultValue: '',\n          placeholder: '请输入${title}',\n          validateRules: [{\n            required: true,\n            message: '${title}不能为空'\n          }]\n        }, {\n          title: '航班时间',\n          key: 'tickectDate',\n          width: '30%',\n          type: FormTypes.date,\n          placeholder: '请选择${title}',\n          defaultValue: ''\n        }]\n      },\n      url: {\n        add: '/test/jeecgOrderMain/add',\n        edit: '/test/jeecgOrderMain/edit',\n        orderCustomerList: '/test/jeecgOrderMain/queryOrderCustomerListByMainId',\n        orderTicketList: '/test/jeecgOrderMain/queryOrderTicketListByMainId'\n      }\n    };\n  },\n  created: function created() {},\n  methods: {\n    // 获取所有的editableTable实例\n    getAllTable: function getAllTable() {\n      return Promise.all([getRefPromise(this, 'editableTable1'), getRefPromise(this, 'editableTable2')]);\n    },\n    add: function add() {\n      // 默认新增一条数据\n      this.getAllTable().then(function (editableTables) {\n        editableTables[0].add();\n        editableTables[1].add();\n      });\n      this.edit({});\n    },\n    edit: function edit(record) {\n      var _this = this;\n\n      this.visible = true;\n      this.activeKey = '1';\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.$nextTick(function () {\n        _this.form.setFieldsValue(pick(_this.model, 'orderCode', 'ctype', 'orderMoney', 'content')); //时间格式化\n\n\n        _this.form.setFieldsValue({\n          orderDate: _this.model.orderDate ? moment(_this.model.orderDate) : null\n        });\n      }); // 加载子表数据\n\n      if (this.model.id) {\n        var params = {\n          id: this.model.id\n        };\n        this.requestTableData(this.url.orderCustomerList, params, this.table1);\n        this.requestTableData(this.url.orderTicketList, params, this.table2);\n      }\n    },\n    close: function close() {\n      this.visible = false;\n      this.getAllTable().then(function (editableTables) {\n        editableTables[0].initialize();\n        editableTables[1].initialize();\n      });\n      this.$emit('close');\n    },\n\n    /** 查询某个tab的数据 */\n    requestTableData: function requestTableData(url, params, tab) {\n      tab.loading = true;\n      getAction(url, params).then(function (res) {\n        tab.dataSource = res.result || [];\n      }).finally(function () {\n        tab.loading = false;\n      });\n    },\n    handleOk: function handleOk() {\n      this.validateFields();\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n\n    /** ATab 选项卡切换事件 */\n    handleChangeTabs: function handleChangeTabs(key) {\n      getRefPromise(this, \"editableTable\".concat(key)).then(function (editableTable) {\n        editableTable.resetScrollTop();\n      });\n    },\n\n    /** 触发表单验证 */\n    validateFields: function validateFields() {\n      var _this2 = this;\n\n      this.getAllTable().then(function (tables) {\n        /** 一次性验证主表和所有的次表 */\n        return validateFormAndTables(_this2.form, tables);\n      }).then(function (allValues) {\n        var formData = _this2.classifyIntoFormData(allValues); // 发起请求\n\n\n        return _this2.requestAddOrEdit(formData);\n      }).catch(function (e) {\n        if (e.error === VALIDATE_NO_PASSED) {\n          // 如果有未通过表单验证的子表，就自动跳转到它所在的tab\n          _this2.activeKey = e.index == null ? _this2.activeKey : (e.index + 1).toString();\n        } else {\n          console.error(e);\n        }\n      });\n    },\n\n    /** 整理成formData */\n    classifyIntoFormData: function classifyIntoFormData(allValues) {\n      var orderMain = Object.assign(this.model, allValues.formValue); //时间格式化\n\n      orderMain.orderDate = orderMain.orderDate ? orderMain.orderDate.format('YYYY-MM-DD HH:mm:ss') : null;\n      return _objectSpread({}, orderMain, {\n        // 展开\n        jeecgOrderCustomerList: allValues.tablesValue[0].values,\n        jeecgOrderTicketList: allValues.tablesValue[1].values\n      });\n    },\n\n    /** 发起新增或修改的请求 */\n    requestAddOrEdit: function requestAddOrEdit(formData) {\n      var _this3 = this;\n\n      var url = this.url.add,\n          method = 'post';\n\n      if (this.model.id) {\n        url = this.url.edit;\n        method = 'put';\n      }\n\n      this.confirmLoading = true;\n      httpAction(url, formData, method).then(function (res) {\n        if (res.success) {\n          _this3.$message.success(res.message);\n\n          _this3.$emit('ok');\n\n          _this3.close();\n        } else {\n          _this3.$message.warning(res.message);\n        }\n      }).finally(function () {\n        _this3.confirmLoading = false;\n      });\n    }\n  }\n};",{"version":3,"sources":["JeecgOrderModalForJEditableTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-modal\n    :title=\"title\"\n    :width=\"1200\"\n    :visible=\"visible\"\n    :maskClosable=\"false\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleOk\"\n    @cancel=\"handleCancel\">\n\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form :form=\"form\">\n        <!-- 主表单区域 -->\n        <a-row class=\"form-row\" :gutter=\"0\">\n          <a-col :lg=\"8\">\n            <a-form-item\n              :labelCol=\"labelCol\"\n              :wrapperCol=\"wrapperCol\"\n              label=\"订单号\">\n              <a-input\n                placeholder=\"请输入订单号\"\n                v-decorator=\"['orderCode', {rules: [{ required: true, message: '请输入订单号!' }]}]\"/>\n            </a-form-item>\n          </a-col>\n          <a-col :lg=\"8\">\n            <a-form-item\n              :labelCol=\"labelCol\"\n              :wrapperCol=\"wrapperCol\"\n              label=\"订单类型\">\n              <a-select placeholder=\"请选择订单类型\" v-decorator=\"['ctype',{}]\">\n                <a-select-option value=\"1\">国内订单</a-select-option>\n                <a-select-option value=\"2\">国际订单</a-select-option>\n              </a-select>\n            </a-form-item>\n          </a-col>\n          <a-col :lg=\"8\">\n            <a-form-item\n              :labelCol=\"labelCol\"\n              :wrapperCol=\"wrapperCol\"\n              label=\"订单日期\">\n              <a-date-picker showTime format=\"YYYY-MM-DD HH:mm:ss\" style=\"width: 100%\" v-decorator=\"[ 'orderDate',{}]\"/>\n            </a-form-item>\n          </a-col>\n        </a-row>\n        <a-row class=\"form-row\" :gutter=\"0\">\n          <a-col :lg=\"8\">\n            <a-form-item\n              :labelCol=\"labelCol\"\n              :wrapperCol=\"wrapperCol\"\n              label=\"订单金额\">\n              <a-input-number placeholder=\"请输入订单金额\" style=\"width: 100%\" v-decorator=\"[ 'orderMoney', {}]\"/>\n            </a-form-item>\n          </a-col>\n          <a-col :lg=\"8\">\n            <a-form-item\n              :labelCol=\"labelCol\"\n              :wrapperCol=\"wrapperCol\"\n              label=\"订单备注\">\n              <a-input placeholder=\"请输入订单备注\" v-decorator=\"['content', {}]\"/>\n            </a-form-item>\n          </a-col>\n        </a-row>\n      </a-form>\n\n      <!-- 子表单区域 -->\n      <a-tabs v-model=\"activeKey\" @change=\"handleChangeTabs\">\n        <a-tab-pane tab=\"客户信息\" key=\"1\" :forceRender=\"true\">\n\n          <j-editable-table\n            ref=\"editableTable1\"\n            :loading=\"table1.loading\"\n            :columns=\"table1.columns\"\n            :dataSource=\"table1.dataSource\"\n            :maxHeight=\"300\"\n            :rowNumber=\"true\"\n            :rowSelection=\"true\"\n            :actionButton=\"true\"/>\n\n        </a-tab-pane>\n\n        <a-tab-pane tab=\"机票信息\" key=\"2\" :forceRender=\"true\">\n\n          <j-editable-table\n            ref=\"editableTable2\"\n            :loading=\"table2.loading\"\n            :columns=\"table2.columns\"\n            :dataSource=\"table2.dataSource\"\n            :maxHeight=\"300\"\n            :rowNumber=\"true\"\n            :rowSelection=\"true\"\n            :actionButton=\"true\"/>\n\n        </a-tab-pane>\n      </a-tabs>\n\n    </a-spin>\n  </a-modal>\n</template>\n\n<script>\n\n  import JEditableTable from '@/components/jeecg/JEditableTable'\n  import { FormTypes, VALIDATE_NO_PASSED, getRefPromise, validateFormAndTables } from '@/utils/JEditableTableUtil'\n  import { httpAction, getAction } from '@/api/manage'\n  import JDate from '@/components/jeecg/JDate'\n  import pick from 'lodash.pick'\n  import moment from 'moment'\n\n  export default {\n    name: 'JeecgOrderModalForJEditableTable',\n    components: {\n      JDate, JEditableTable\n    },\n    data() {\n      return {\n        title: '操作',\n        visible: false,\n        form: this.$form.createForm(this),\n        confirmLoading: false,\n        model: {},\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 6 }\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 24 - 6 }\n        },\n        activeKey: '1',\n        // 客户信息\n        table1: {\n          loading: false,\n          dataSource: [],\n          columns: [\n            {\n              title: '客户名',\n              key: 'name',\n              width: '24%',\n              type: FormTypes.input,\n              defaultValue: '',\n              placeholder: '请输入${title}',\n              validateRules: [{ required: true, message: '${title}不能为空' }]\n            },\n            {\n              title: '性别',\n              key: 'sex',\n              width: '18%',\n              type: FormTypes.select,\n              options: [ // 下拉选项\n                { title: '男', value: '1' },\n                { title: '女', value: '2' }\n              ],\n              defaultValue: '',\n              placeholder: '请选择${title}'\n            },\n            {\n              title: '身份证号',\n              key: 'idcard',\n              width: '24%',\n              type: FormTypes.input,\n              defaultValue: '',\n              placeholder: '请输入${title}',\n              validateRules: [{\n                pattern: '^\\\\d{6}(18|19|20)?\\\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\\\d|3[01])\\\\d{3}(\\\\d|[xX])$',\n                message: '${title}格式不正确'\n              }]\n            },\n            {\n              title: '手机号',\n              key: 'telphone',\n              width: '24%',\n              type: FormTypes.input,\n              defaultValue: '',\n              placeholder: '请输入${title}',\n              validateRules: [{\n                pattern: '^1(3|4|5|7|8)\\\\d{9}$',\n                message: '${title}格式不正确'\n              }]\n            }\n          ]\n        },\n        // 机票信息\n        table2: {\n          loading: false,\n          dataSource: [],\n          columns: [\n            {\n              title: '航班号',\n              key: 'ticketCode',\n              width: '40%',\n              type: FormTypes.input,\n              defaultValue: '',\n              placeholder: '请输入${title}',\n              validateRules: [{ required: true, message: '${title}不能为空' }]\n            },\n            {\n              title: '航班时间',\n              key: 'tickectDate',\n              width: '30%',\n              type: FormTypes.date,\n              placeholder: '请选择${title}',\n              defaultValue: ''\n            }\n          ]\n        },\n        url: {\n          add: '/test/jeecgOrderMain/add',\n          edit: '/test/jeecgOrderMain/edit',\n          orderCustomerList: '/test/jeecgOrderMain/queryOrderCustomerListByMainId',\n          orderTicketList: '/test/jeecgOrderMain/queryOrderTicketListByMainId'\n        }\n      }\n    },\n    created() {\n    },\n    methods: {\n\n      // 获取所有的editableTable实例\n      getAllTable() {\n        return Promise.all([\n          getRefPromise(this, 'editableTable1'),\n          getRefPromise(this, 'editableTable2')\n        ])\n      },\n\n      add() {\n        // 默认新增一条数据\n        this.getAllTable().then(editableTables => {\n          editableTables[0].add()\n          editableTables[1].add()\n        })\n\n        this.edit({})\n      },\n      edit(record) {\n        this.visible = true\n        this.activeKey = '1'\n        this.form.resetFields()\n        this.model = Object.assign({}, record)\n\n        this.$nextTick(() => {\n          this.form.setFieldsValue(pick(this.model, 'orderCode', 'ctype', 'orderMoney', 'content'))\n          //时间格式化\n          this.form.setFieldsValue({ orderDate: this.model.orderDate ? moment(this.model.orderDate) : null })\n        })\n\n        // 加载子表数据\n        if (this.model.id) {\n          let params = { id: this.model.id }\n          this.requestTableData(this.url.orderCustomerList, params, this.table1)\n          this.requestTableData(this.url.orderTicketList, params, this.table2)\n        }\n\n      },\n      close() {\n        this.visible = false\n        this.getAllTable().then(editableTables => {\n          editableTables[0].initialize()\n          editableTables[1].initialize()\n        })\n        this.$emit('close')\n      },\n      /** 查询某个tab的数据 */\n      requestTableData(url, params, tab) {\n        tab.loading = true\n        getAction(url, params).then(res => {\n          tab.dataSource = res.result || []\n        }).finally(() => {\n          tab.loading = false\n        })\n      },\n      handleOk() {\n        this.validateFields()\n      },\n      handleCancel() {\n        this.close()\n      },\n      /** ATab 选项卡切换事件 */\n      handleChangeTabs(key) {\n        getRefPromise(this, `editableTable${key}`).then(editableTable => {\n          editableTable.resetScrollTop()\n        })\n      },\n\n      /** 触发表单验证 */\n      validateFields() {\n        this.getAllTable().then(tables => {\n          /** 一次性验证主表和所有的次表 */\n          return validateFormAndTables(this.form, tables)\n        }).then(allValues => {\n          let formData = this.classifyIntoFormData(allValues)\n          // 发起请求\n          return this.requestAddOrEdit(formData)\n        }).catch(e => {\n          if (e.error === VALIDATE_NO_PASSED) {\n            // 如果有未通过表单验证的子表，就自动跳转到它所在的tab\n            this.activeKey = e.index == null ? this.activeKey : (e.index + 1).toString()\n          } else {\n            console.error(e)\n          }\n        })\n      },\n      /** 整理成formData */\n      classifyIntoFormData(allValues) {\n        let orderMain = Object.assign(this.model, allValues.formValue)\n        //时间格式化\n        orderMain.orderDate = orderMain.orderDate ? orderMain.orderDate.format('YYYY-MM-DD HH:mm:ss') : null\n        return {\n          ...orderMain, // 展开\n          jeecgOrderCustomerList: allValues.tablesValue[0].values,\n          jeecgOrderTicketList: allValues.tablesValue[1].values\n        }\n      },\n      /** 发起新增或修改的请求 */\n      requestAddOrEdit(formData) {\n        let url = this.url.add, method = 'post'\n        if (this.model.id) {\n          url = this.url.edit\n          method = 'put'\n        }\n        this.confirmLoading = true\n        httpAction(url, formData, method).then((res) => {\n          if (res.success) {\n            this.$message.success(res.message)\n            this.$emit('ok')\n            this.close()\n          } else {\n            this.$message.warning(res.message)\n          }\n        }).finally(() => {\n          this.confirmLoading = false\n        })\n      }\n\n    }\n  }\n</script>\n\n<style scoped>\n</style>"],"sourceRoot":"src/views/jeecg/modules"}]}