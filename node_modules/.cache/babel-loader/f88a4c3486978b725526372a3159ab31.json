{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/jeecg/modules/JeecgOrderModalForJEditableTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/jeecg/modules/JeecgOrderModalForJEditableTable.vue","mtime":1571018558922},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport JEditableTable from '@/components/jeecg/JEditableTable';\nimport { FormTypes, VALIDATE_NO_PASSED, getRefPromise, validateFormAndTables } from '@/utils/JEditableTableUtil';\nimport { httpAction, getAction } from '@/api/manage';\nimport JDate from '@/components/jeecg/JDate';\nimport pick from 'lodash.pick';\nimport moment from 'moment';\nexport default {\n  name: 'JeecgOrderModalForJEditableTable',\n  components: {\n    JDate: JDate,\n    JEditableTable: JEditableTable\n  },\n  data: function data() {\n    return {\n      title: '操作',\n      visible: false,\n      form: this.$form.createForm(this),\n      confirmLoading: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 6\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 24 - 6\n        }\n      },\n      activeKey: '1',\n      // 客户信息\n      table1: {\n        loading: false,\n        dataSource: [],\n        columns: [{\n          title: '客户名',\n          key: 'name',\n          width: '24%',\n          type: FormTypes.input,\n          defaultValue: '',\n          placeholder: '请输入${title}',\n          validateRules: [{\n            required: true,\n            message: '${title}不能为空'\n          }]\n        }, {\n          title: '性别',\n          key: 'sex',\n          width: '18%',\n          type: FormTypes.select,\n          options: [// 下拉选项\n          {\n            title: '男',\n            value: '1'\n          }, {\n            title: '女',\n            value: '2'\n          }],\n          defaultValue: '',\n          placeholder: '请选择${title}'\n        }, {\n          title: '身份证号',\n          key: 'idcard',\n          width: '24%',\n          type: FormTypes.input,\n          defaultValue: '',\n          placeholder: '请输入${title}',\n          validateRules: [{\n            pattern: '^\\\\d{6}(18|19|20)?\\\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\\\d|3[01])\\\\d{3}(\\\\d|[xX])$',\n            message: '${title}格式不正确'\n          }]\n        }, {\n          title: '手机号',\n          key: 'telphone',\n          width: '24%',\n          type: FormTypes.input,\n          defaultValue: '',\n          placeholder: '请输入${title}',\n          validateRules: [{\n            pattern: '^1(3|4|5|7|8)\\\\d{9}$',\n            message: '${title}格式不正确'\n          }]\n        }]\n      },\n      // 机票信息\n      table2: {\n        loading: false,\n        dataSource: [],\n        columns: [{\n          title: '航班号',\n          key: 'ticketCode',\n          width: '40%',\n          type: FormTypes.input,\n          defaultValue: '',\n          placeholder: '请输入${title}',\n          validateRules: [{\n            required: true,\n            message: '${title}不能为空'\n          }]\n        }, {\n          title: '航班时间',\n          key: 'tickectDate',\n          width: '30%',\n          type: FormTypes.date,\n          placeholder: '请选择${title}',\n          defaultValue: ''\n        }]\n      },\n      url: {\n        add: '/test/jeecgOrderMain/add',\n        edit: '/test/jeecgOrderMain/edit',\n        orderCustomerList: '/test/jeecgOrderMain/queryOrderCustomerListByMainId',\n        orderTicketList: '/test/jeecgOrderMain/queryOrderTicketListByMainId'\n      }\n    };\n  },\n  created: function created() {},\n  methods: {\n    // 获取所有的editableTable实例\n    getAllTable: function getAllTable() {\n      return Promise.all([getRefPromise(this, 'editableTable1'), getRefPromise(this, 'editableTable2')]);\n    },\n    add: function add() {\n      // 默认新增一条数据\n      this.getAllTable().then(function (editableTables) {\n        editableTables[0].add();\n        editableTables[1].add();\n      });\n      this.edit({});\n    },\n    edit: function edit(record) {\n      var _this = this;\n\n      this.visible = true;\n      this.activeKey = '1';\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.$nextTick(function () {\n        _this.form.setFieldsValue(pick(_this.model, 'orderCode', 'ctype', 'orderMoney', 'content')); //时间格式化\n\n\n        _this.form.setFieldsValue({\n          orderDate: _this.model.orderDate ? moment(_this.model.orderDate) : null\n        });\n      }); // 加载子表数据\n\n      if (this.model.id) {\n        var params = {\n          id: this.model.id\n        };\n        this.requestTableData(this.url.orderCustomerList, params, this.table1);\n        this.requestTableData(this.url.orderTicketList, params, this.table2);\n      }\n    },\n    close: function close() {\n      this.visible = false;\n      this.getAllTable().then(function (editableTables) {\n        editableTables[0].initialize();\n        editableTables[1].initialize();\n      });\n      this.$emit('close');\n    },\n\n    /** 查询某个tab的数据 */\n    requestTableData: function requestTableData(url, params, tab) {\n      tab.loading = true;\n      getAction(url, params).then(function (res) {\n        tab.dataSource = res.result || [];\n      }).finally(function () {\n        tab.loading = false;\n      });\n    },\n    handleOk: function handleOk() {\n      this.validateFields();\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n\n    /** ATab 选项卡切换事件 */\n    handleChangeTabs: function handleChangeTabs(key) {\n      getRefPromise(this, \"editableTable\".concat(key)).then(function (editableTable) {\n        editableTable.resetScrollTop();\n      });\n    },\n\n    /** 触发表单验证 */\n    validateFields: function validateFields() {\n      var _this2 = this;\n\n      this.getAllTable().then(function (tables) {\n        /** 一次性验证主表和所有的次表 */\n        return validateFormAndTables(_this2.form, tables);\n      }).then(function (allValues) {\n        var formData = _this2.classifyIntoFormData(allValues); // 发起请求\n\n\n        return _this2.requestAddOrEdit(formData);\n      }).catch(function (e) {\n        if (e.error === VALIDATE_NO_PASSED) {\n          // 如果有未通过表单验证的子表，就自动跳转到它所在的tab\n          _this2.activeKey = e.index == null ? _this2.activeKey : (e.index + 1).toString();\n        } else {\n          console.error(e);\n        }\n      });\n    },\n\n    /** 整理成formData */\n    classifyIntoFormData: function classifyIntoFormData(allValues) {\n      var orderMain = Object.assign(this.model, allValues.formValue); //时间格式化\n\n      orderMain.orderDate = orderMain.orderDate ? orderMain.orderDate.format('YYYY-MM-DD HH:mm:ss') : null;\n      return _objectSpread({}, orderMain, {\n        // 展开\n        jeecgOrderCustomerList: allValues.tablesValue[0].values,\n        jeecgOrderTicketList: allValues.tablesValue[1].values\n      });\n    },\n\n    /** 发起新增或修改的请求 */\n    requestAddOrEdit: function requestAddOrEdit(formData) {\n      var _this3 = this;\n\n      var url = this.url.add,\n          method = 'post';\n\n      if (this.model.id) {\n        url = this.url.edit;\n        method = 'put';\n      }\n\n      this.confirmLoading = true;\n      httpAction(url, formData, method).then(function (res) {\n        if (res.success) {\n          _this3.$message.success(res.message);\n\n          _this3.$emit('ok');\n\n          _this3.close();\n        } else {\n          _this3.$message.warning(res.message);\n        }\n      }).finally(function () {\n        _this3.confirmLoading = false;\n      });\n    }\n  }\n};",null]}