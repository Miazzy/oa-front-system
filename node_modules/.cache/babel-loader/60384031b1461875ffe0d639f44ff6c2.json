{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/SysAnnouncementModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/modules/SysAnnouncementModal.vue","mtime":1571018558937},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { httpAction } from '@/api/manage';\nimport pick from 'lodash.pick';\nimport { getAction } from '@/api/manage';\nimport JDate from '@/components/jeecg/JDate';\nimport JEditor from '@/components/jeecg/JEditor';\nimport SelectUserListModal from \"./SelectUserListModal\";\nimport moment from 'moment';\nexport default {\n  components: {\n    JEditor: JEditor,\n    JDate: JDate,\n    SelectUserListModal: SelectUserListModal\n  },\n  name: \"SysAnnouncementModal\",\n  data: function data() {\n    return {\n      title: \"操作\",\n      visible: false,\n      disableSubmit: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules: {\n        title: {\n          rules: [{\n            required: true,\n            message: '请输入标题!'\n          }]\n        },\n        msgCategory: {\n          rules: [{\n            required: true,\n            message: '请选择消息类型!'\n          }]\n        },\n        msgType: {\n          rules: [{\n            required: true,\n            message: '请选择通告对象类型!'\n          }]\n        },\n        endTime: {\n          rules: [{\n            validator: this.endTimeValidate\n          }]\n        },\n        startTime: {\n          rules: [{\n            validator: this.startTimeValidate\n          }]\n        }\n      },\n      url: {\n        queryByIds: \"/sys/user/queryByIds\",\n        add: \"/sys/annountCement/add\",\n        edit: \"/sys/annountCement/edit\"\n      },\n      userType: false,\n      userIds: [],\n      selectedUser: [],\n      disabled: false,\n      msgContent: \"\"\n    };\n  },\n  created: function created() {},\n  methods: {\n    add: function add() {\n      this.edit({});\n    },\n    edit: function edit(record) {\n      this.form.resetFields();\n      this.model = {};\n      this.disable = false;\n      this.visible = true;\n      this.getUser(record);\n    },\n    getUser: function getUser(record) {\n      var _this = this;\n\n      this.model = Object.assign({}, record); // 指定用户\n\n      if (record && record.msgType === \"USER\") {\n        this.userType = true;\n        this.userIds = record.userIds;\n        getAction(this.url.queryByIds, {\n          userIds: this.userIds\n        }).then(function (res) {\n          if (res.success) {\n            for (var i = 0; i < res.result.length; i++) {\n              _this.selectedUser.push(res.result[i].realname);\n            }\n\n            _this.$refs.UserListModal.edit(res.result, _this.userIds);\n          }\n        });\n      }\n\n      this.$nextTick(function () {\n        _this.form.setFieldsValue(pick(_this.model, 'endTime', 'startTime', 'titile', 'msgContent', 'sender', 'priority', 'msgCategory', 'msgType', 'sendStatus', 'delFlag'));\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.selectedUser = [];\n      this.visible = false;\n    },\n    handleOk: function handleOk() {\n      var _this2 = this;\n\n      var that = this; // 触发表单验证\n\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          that.confirmLoading = true;\n          var httpurl = '';\n          var method = '';\n\n          if (!_this2.model.id) {\n            httpurl += _this2.url.add;\n            method = 'post';\n          } else {\n            httpurl += _this2.url.edit;\n            method = 'put';\n          }\n\n          var formData = Object.assign(_this2.model, values);\n\n          if (_this2.userType) {\n            formData.userIds = _this2.userIds;\n          }\n\n          console.log(formData);\n          httpAction(httpurl, formData, method).then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.close();\n          });\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.visible = false;\n      this.$emit('close');\n      this.resetUser();\n    },\n    resetUser: function resetUser() {\n      this.userType = false;\n      this.userIds = [];\n      this.selectedUser = [];\n      this.disabled = false;\n      this.$refs.UserListModal.edit(null, null);\n    },\n    selectUserIds: function selectUserIds() {\n      this.$refs.UserListModal.add(this.selectedUser, this.userIds);\n    },\n    chooseMsgType: function chooseMsgType(value) {\n      if (\"USER\" == value) {\n        this.userType = true;\n      } else {\n        this.userType = false;\n        this.selectedUser = [];\n        this.userIds = [];\n      }\n    },\n    // 子modal回调\n    choseUser: function choseUser(userList) {\n      this.selectedUser = [];\n      this.userIds = [];\n\n      for (var i = 0; i < userList.length; i++) {\n        this.selectedUser.push(userList[i].realname);\n        this.userIds += userList[i].id + \",\";\n      }\n    },\n    startTimeValidate: function startTimeValidate(rule, value, callback) {\n      var endTime = this.form.getFieldValue(\"endTime\");\n\n      if (!value || !endTime) {\n        callback();\n      } else if (moment(value).isBefore(endTime)) {\n        callback();\n      } else {\n        callback(\"开始时间需小于结束时间\");\n      }\n    },\n    endTimeValidate: function endTimeValidate(rule, value, callback) {\n      var startTime = this.form.getFieldValue(\"startTime\");\n\n      if (!value || !startTime) {\n        callback();\n      } else if (moment(startTime).isBefore(value)) {\n        callback();\n      } else {\n        callback(\"结束时间需大于开始时间\");\n      }\n    }\n  }\n};",null]}