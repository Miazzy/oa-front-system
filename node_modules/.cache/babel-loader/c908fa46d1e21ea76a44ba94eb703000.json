{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/jeecg/JUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/components/jeecg/JUpload.vue","mtime":1572486784814},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport { ACCESS_TOKEN } from '@/store/mutation-types';\nvar FILE_TYPE_ALL = 'all';\nvar FILE_TYPE_IMG = 'image';\nvar FILE_TYPE_TXT = 'file';\n\nvar uidGenerator = function uidGenerator() {\n  return '-' + parseInt(Math.random() * 10000 + 1, 10);\n};\n\nvar getFileName = function getFileName(path) {\n  if (path.lastIndexOf('\\\\') >= 0) {\n    var reg = new RegExp('\\\\\\\\', 'g');\n    path = path.replace(reg, '/');\n  }\n\n  return path.substring(path.lastIndexOf('/') + 1);\n};\n\nexport default {\n  name: 'JUpload',\n  data: function data() {\n    return {\n      uploadAction: window._CONFIG['domianURL'] + '/sys/common/upload',\n      urlDownload: window._CONFIG['downloadURL'] + '/',\n      headers: {},\n      fileList: []\n    };\n  },\n  props: {\n    text: {\n      type: String,\n      required: false,\n      default: '点击上传'\n    },\n    fileType: {\n      type: String,\n      required: false,\n      default: FILE_TYPE_ALL\n    },\n\n    /*这个属性用于控制文件上传的业务路径*/\n    bizPath: {\n      type: String,\n      required: false,\n      default: 'temp'\n    },\n    value: {\n      type: String,\n      required: false\n    },\n    //此属性被废弃了\n    triggerChange: {\n      type: Boolean,\n      required: false,\n      default: false\n    }\n  },\n  watch: {\n    value: function value(val) {\n      console.log(' fileList : ' + val);\n      this.initFileList(val);\n    }\n  },\n  created: function created() {\n    var token = Vue.ls.get(ACCESS_TOKEN);\n    this.headers = {\n      'X-Access-Token': token\n    };\n  },\n  methods: {\n    initFileList: function initFileList(paths) {\n      if (!paths || paths.length == 0) {\n        //return [];\n        // update-begin- --- author:os_chengtgen ------ date:20190729 ---- for:issues:326,Jupload组件初始化bug\n        this.fileList = [];\n        return; // update-end- --- author:os_chengtgen ------ date:20190729 ---- for:issues:326,Jupload组件初始化bug\n      }\n\n      var fileList = [];\n      var arr = paths.split(',');\n\n      for (var a = 0; a < arr.length; a++) {\n        fileList.push({\n          uid: uidGenerator(),\n          name: getFileName(arr[a]),\n          status: 'done',\n          url: this.urlDownload + arr[a],\n          response: {\n            status: 'history',\n            message: arr[a]\n          }\n        });\n      }\n\n      this.fileList = fileList;\n    },\n    handlePathChange: function handlePathChange() {\n      var uploadFiles = this.fileList;\n      var path = '';\n\n      if (!uploadFiles || uploadFiles.length == 0) {\n        path = '';\n      }\n\n      var arr = [];\n\n      for (var a = 0; a < uploadFiles.length; a++) {\n        arr.push(uploadFiles[a].response.message);\n      }\n\n      if (arr.length > 0) {\n        path = arr.join(',');\n      }\n\n      this.$emit('change', path);\n    },\n    beforeUpload: function beforeUpload(file) {\n      var fileType = file.type;\n\n      if (fileType === FILE_TYPE_IMG) {\n        if (fileType.indexOf('image') < 0) {\n          this.$message.warning('请上传图片');\n          return false;\n        }\n      } else if (fileType === FILE_TYPE_TXT) {\n        if (fileType.indexOf('image') >= 0) {\n          this.$message.warning('请上传文件');\n          return false;\n        }\n      } //TODO 扩展功能验证文件大小\n\n\n      return true;\n    },\n    handleChange: function handleChange(info) {\n      var _this = this;\n\n      console.log('--文件列表改变--');\n      var fileList = info.fileList;\n\n      if (info.file.status === 'done') {\n        if (info.file.response.success) {\n          fileList = fileList.map(function (file) {\n            if (file.response) {\n              file.url = _this.urlDownload + file.response.message;\n            }\n\n            return file;\n          });\n        }\n\n        this.$message.success(\"\".concat(info.file.name, \" \\u4E0A\\u4F20\\u6210\\u529F!\"));\n      } else if (info.file.status === 'error') {\n        this.$message.error(\"\".concat(info.file.name, \" \\u4E0A\\u4F20\\u5931\\u8D25.\"));\n      } else if (info.file.status === 'removed') {\n        this.handleDelete(info.file);\n      }\n\n      this.fileList = fileList;\n\n      if (info.file.status === 'done' || info.file.status === 'removed') {\n        this.handlePathChange();\n      }\n    },\n    handleDelete: function handleDelete(file) {\n      //如有需要新增 删除逻辑\n      console.log(file);\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  }\n};",{"version":3,"sources":["JUpload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-upload\r\n    name=\"file\"\r\n    :multiple=\"true\"\r\n    :action=\"uploadAction\"\r\n    :headers=\"headers\"\r\n    :data=\"{'isup':1,'bizPath':bizPath}\"\r\n    :fileList=\"fileList\"\r\n    :beforeUpload=\"beforeUpload\"\r\n    @change=\"handleChange\"\r\n  >\r\n    <a-button>\r\n      <a-icon type=\"upload\" />\r\n      {{ text }}\r\n    </a-button>\r\n  </a-upload>\r\n</template>\r\n\r\n<script>\r\nimport Vue from 'vue'\r\nimport { ACCESS_TOKEN } from '@/store/mutation-types'\r\n\r\nconst FILE_TYPE_ALL = 'all'\r\nconst FILE_TYPE_IMG = 'image'\r\nconst FILE_TYPE_TXT = 'file'\r\nconst uidGenerator = () => {\r\n  return '-' + parseInt(Math.random() * 10000 + 1, 10)\r\n}\r\nconst getFileName = path => {\r\n  if (path.lastIndexOf('\\\\') >= 0) {\r\n    let reg = new RegExp('\\\\\\\\', 'g')\r\n    path = path.replace(reg, '/')\r\n  }\r\n  return path.substring(path.lastIndexOf('/') + 1)\r\n}\r\nexport default {\r\n  name: 'JUpload',\r\n  data() {\r\n    return {\r\n      uploadAction: window._CONFIG['domianURL'] + '/sys/common/upload',\r\n      urlDownload: window._CONFIG['downloadURL'] + '/',\r\n      headers: {},\r\n      fileList: []\r\n    }\r\n  },\r\n  props: {\r\n    text: {\r\n      type: String,\r\n      required: false,\r\n      default: '点击上传'\r\n    },\r\n    fileType: {\r\n      type: String,\r\n      required: false,\r\n      default: FILE_TYPE_ALL\r\n    },\r\n    /*这个属性用于控制文件上传的业务路径*/\r\n    bizPath: {\r\n      type: String,\r\n      required: false,\r\n      default: 'temp'\r\n    },\r\n    value: {\r\n      type: String,\r\n      required: false\r\n    },\r\n    //此属性被废弃了\r\n    triggerChange: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false\r\n    }\r\n  },\r\n  watch: {\r\n    value(val) {\r\n      console.log(' fileList : ' + val)\r\n      this.initFileList(val)\r\n    }\r\n  },\r\n  created() {\r\n    const token = Vue.ls.get(ACCESS_TOKEN)\r\n    this.headers = { 'X-Access-Token': token }\r\n  },\r\n\r\n  methods: {\r\n    initFileList(paths) {\r\n      if (!paths || paths.length == 0) {\r\n        //return [];\r\n        // update-begin- --- author:os_chengtgen ------ date:20190729 ---- for:issues:326,Jupload组件初始化bug\r\n        this.fileList = []\r\n        return\r\n        // update-end- --- author:os_chengtgen ------ date:20190729 ---- for:issues:326,Jupload组件初始化bug\r\n      }\r\n      let fileList = []\r\n      let arr = paths.split(',')\r\n      for (var a = 0; a < arr.length; a++) {\r\n        fileList.push({\r\n          uid: uidGenerator(),\r\n          name: getFileName(arr[a]),\r\n          status: 'done',\r\n          url: this.urlDownload + arr[a],\r\n          response: {\r\n            status: 'history',\r\n            message: arr[a]\r\n          }\r\n        })\r\n      }\r\n      this.fileList = fileList\r\n    },\r\n    handlePathChange() {\r\n      let uploadFiles = this.fileList\r\n      let path = ''\r\n      if (!uploadFiles || uploadFiles.length == 0) {\r\n        path = ''\r\n      }\r\n      let arr = []\r\n\r\n      for (var a = 0; a < uploadFiles.length; a++) {\r\n        arr.push(uploadFiles[a].response.message)\r\n      }\r\n      if (arr.length > 0) {\r\n        path = arr.join(',')\r\n      }\r\n      this.$emit('change', path)\r\n    },\r\n    beforeUpload(file) {\r\n      var fileType = file.type\r\n      if (fileType === FILE_TYPE_IMG) {\r\n        if (fileType.indexOf('image') < 0) {\r\n          this.$message.warning('请上传图片')\r\n          return false\r\n        }\r\n      } else if (fileType === FILE_TYPE_TXT) {\r\n        if (fileType.indexOf('image') >= 0) {\r\n          this.$message.warning('请上传文件')\r\n          return false\r\n        }\r\n      }\r\n      //TODO 扩展功能验证文件大小\r\n      return true\r\n    },\r\n    handleChange(info) {\r\n      console.log('--文件列表改变--')\r\n      let fileList = info.fileList\r\n      if (info.file.status === 'done') {\r\n        if (info.file.response.success) {\r\n          fileList = fileList.map(file => {\r\n            if (file.response) {\r\n              file.url = this.urlDownload + file.response.message\r\n            }\r\n            return file\r\n          })\r\n        }\r\n        this.$message.success(`${info.file.name} 上传成功!`)\r\n      } else if (info.file.status === 'error') {\r\n        this.$message.error(`${info.file.name} 上传失败.`)\r\n      } else if (info.file.status === 'removed') {\r\n        this.handleDelete(info.file)\r\n      }\r\n      this.fileList = fileList\r\n      if (info.file.status === 'done' || info.file.status === 'removed') {\r\n        this.handlePathChange()\r\n      }\r\n    },\r\n    handleDelete(file) {\r\n      //如有需要新增 删除逻辑\r\n      console.log(file)\r\n    }\r\n  },\r\n  model: {\r\n    prop: 'value',\r\n    event: 'change'\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>"],"sourceRoot":"src/components/jeecg"}]}