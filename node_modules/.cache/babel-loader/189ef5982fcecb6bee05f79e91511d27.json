{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/modules/online/cgform/auto/OnlCgformTreeList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/modules/online/cgform/auto/OnlCgformTreeList.vue","mtime":1572397199667},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _toConsumableArray from \"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getAction, postAction, deleteAction, downFile } from '@/api/manage';\nimport { filterMultiDictText } from '@/components/dict/JDictSelectUtil';\nimport { filterObj } from '@/utils/util';\nimport JImportModal from '@/components/jeecg/JImportModal';\nexport default {\n  name: 'OnlCgformTreeList',\n  components: {\n    JImportModal: JImportModal\n  },\n  data: function data() {\n    return {\n      code: '87b55a515d3441b6b98e48e5b35474a6',\n      description: '在线报表功能测试页面',\n      currentTableName: \"\",\n      pidField: \"\",\n      hasChildrenField: \"\",\n      textField: '',\n      loading: false,\n      // 表头\n      columns: [],\n      //数据集\n      dataSource: [],\n      // 选择器\n      selectedRowKeys: [],\n      selectionRows: [],\n      // 分页参数\n      pagination: {\n        current: 1,\n        pageSize: 10,\n        pageSizeOptions: ['10', '20', '30'],\n        showTotal: function showTotal(total, range) {\n          return range[0] + '-' + range[1] + ' 共' + total + '条';\n        },\n        showQuickJumper: true,\n        showSizeChanger: true,\n        total: 0\n      },\n      url: {\n        getColumns: '/online/cgform/api/getColumns/',\n        getTreeData: '/online/cgform/api/getTreeData/',\n        optPre: \"/online/cgform/api/form/\",\n        exportXls: '/online/cgform/api/exportXls/',\n        buttonAction: '/online/cgform/api/doButton',\n        startProcess: \"/process/extActProcess/startMutilProcess\"\n      },\n      isorter: {\n        column: 'create_time',\n        order: 'desc'\n      },\n      dictOptions: {},\n      queryParam: {},\n      actionColumn: {\n        title: '操作',\n        dataIndex: 'action',\n        scopedSlots: {\n          customRender: 'action'\n        },\n        fixed: \"right\",\n        align: \"center\",\n        width: 150\n      },\n      formTemplate: \"99\",\n\n      /*自定义按钮-link*/\n      cgButtonLinkList: [],\n\n      /*自定义按钮-button*/\n      cgButtonList: [],\n\n      /*JS增强*/\n      EnhanceJS: '',\n\n      /*操作按钮权限*/\n      buttonSwitch: {\n        add: true,\n        update: true,\n        delete: true,\n        batch_delete: true,\n        import: true,\n        export: true\n      },\n      expandedRowKeys: []\n    };\n  },\n  created: function created() {\n    var _this2 = this;\n\n    this.initAutoListConfig().then(function () {\n      _this2.loadData(1);\n    }).catch(function (msg) {\n      console.log(msg);\n    });\n  },\n  mounted: function mounted() {//this.cgButtonJsHandler('mounted')\n  },\n  watch: {\n    '$route': function $route() {\n      var _this3 = this;\n\n      // 刷新参数放到这里去触发，就可以刷新相同界面了\n      this.initAutoListConfig().then(function () {\n        _this3.loadData(1);\n      }).catch(function (msg) {\n        console.log(msg);\n      });\n    }\n  },\n  computed: {\n    tableProps: function tableProps() {\n      var _this = this;\n\n      return {\n        // 列表项是否可选择\n        // https://vue.ant.design/components/table-cn/#rowSelection\n        rowSelection: {\n          selectedRowKeys: _this.selectedRowKeys,\n          onChange: function onChange(selectedRowKeys) {\n            return _this.selectedRowKeys = selectedRowKeys;\n          }\n        }\n      };\n    }\n  },\n  methods: {\n    resetData: function resetData() {\n      this.description = '';\n      this.currentTableName = '';\n      this.pidField = '';\n      this.hasChildrenField = '';\n      this.textField = '';\n      this.columns = [];\n      this.dataSource = [];\n      this.selectedRowKeys = [];\n      this.selectionRows = [];\n    },\n    initAutoListConfig: function initAutoListConfig() {\n      var _this4 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this4.$route.params.code) {\n          reject(\"列表加载需要参数CODE为空!\");\n        } else {\n          _this4.resetData();\n\n          _this4.loading = true;\n          _this4.code = _this4.$route.params.code;\n          getAction(\"\".concat(_this4.url.getColumns).concat(_this4.code)).then(function (res) {\n            console.log(\"--onlineList-加载动态列>>\", res);\n\n            if (res.success) {\n              _this4.configInfohandler(res);\n\n              resolve();\n            } else {\n              reject(\"onlineList-加载表配置信息失败\");\n            }\n\n            _this4.loading = false;\n          }).catch(function (err) {\n            reject(err);\n          });\n        }\n      });\n    },\n    configInfohandler: function configInfohandler(res) {\n      var _this5 = this;\n\n      this.dictOptions = res.result.dictOptions;\n      this.formTemplate = res.result.formTemplate;\n      this.description = res.result.description;\n      this.currentTableName = res.result.currentTableName;\n      this.pidField = res.result.pidField;\n      this.hasChildrenField = res.result.hasChildrenField;\n      this.textField = res.result.textField; //自定义按钮\n\n      this.initCgButtonList(res.result.cgButtonList); //JS增强\n\n      this.initCgEnhanceJs(res.result.enhanceJs); //操作按钮权限\n\n      this.initButtonSwitch(res.result.hideColumns);\n      var currColumns = res.result.columns;\n      var textFieldIndex = -1;\n\n      for (var a = 0; a < currColumns.length; a++) {\n        currColumns[a].align = 'left';\n\n        if (this.textField == currColumns[a].dataIndex) {\n          textFieldIndex = a;\n        }\n\n        if (currColumns[a].customRender) {\n          (function () {\n            var dictCode = currColumns[a].customRender;\n\n            currColumns[a].customRender = function (text) {\n              return filterMultiDictText(_this5.dictOptions[dictCode], text);\n            };\n          })();\n        }\n      }\n\n      if (textFieldIndex != -1) {\n        var textFieldColumn = currColumns.splice(textFieldIndex, 1);\n        currColumns.unshift(textFieldColumn[0]);\n      }\n\n      currColumns.push(this.actionColumn);\n      this.columns = _toConsumableArray(currColumns);\n    },\n    //加载根节点\n    loadData: function loadData(arg) {\n      var _this6 = this;\n\n      if (arg == 1) {\n        this.pagination.current = 1;\n      }\n\n      this.loading = true;\n      this.expandedRowKeys = [];\n      var params = this.getQueryParams(); //查询条件\n\n      params[this.pidField] = '0';\n      console.log(\"--onlineList-查询条件-->\", params);\n      getAction(\"\".concat(this.url.getTreeData).concat(this.code), params).then(function (res) {\n        console.log(\"--onlineList-列表数据\", res);\n\n        if (res.success) {\n          var result = res.result;\n\n          if (Number(result.total) > 0) {\n            _this6.pagination.total = Number(result.total);\n            var dataSource = res.result.records.map(function (item) {\n              // 判断是否标记了带有子级\n              if (item[_this6.hasChildrenField] === true || item[_this6.hasChildrenField] == '1') {\n                var loadChild = {\n                  id: \"\".concat(item.id, \"_loadChild\"),\n                  name: 'loading...',\n                  isLoading: true\n                };\n                item.children = [loadChild];\n              }\n\n              return item;\n            });\n            _this6.dataSource = dataSource;\n          } else {\n            _this6.pagination.total = 0;\n            _this6.dataSource = [];\n          }\n        } else {\n          _this6.$message.warning(res.message);\n        }\n\n        _this6.loading = false;\n      });\n    },\n    //加载叶子节点\n    handleExpand: function handleExpand(expanded, record) {\n      var _this7 = this;\n\n      // 判断是否是展开状态\n      if (expanded) {\n        this.expandedRowKeys.push(record.id);\n\n        if (record.children.length > 0 && record.children[0].isLoading === true) {\n          var params = this.getQueryParams(); //查询条件\n\n          params[this.pidField] = record.id;\n          getAction(\"\".concat(this.url.getTreeData).concat(this.code), params).then(function (res) {\n            if (res.success) {\n              if (Number(res.result.total) > 0) {\n                var dataSource = res.result.records.map(function (item) {\n                  // 判断是否标记了带有子级\n                  if (item[_this7.hasChildrenField] === true || item[_this7.hasChildrenField] == '1') {\n                    var loadChild = {\n                      id: \"\".concat(item.id, \"_loadChild\"),\n                      name: 'loading...',\n                      isLoading: true\n                    };\n                    item.children = [loadChild];\n                  }\n\n                  return item;\n                });\n                record.children = dataSource;\n              } else {\n                record.children = '';\n                record.hasChildrenField = '0';\n              }\n            } else {\n              _this7.$message.warning(res.message);\n            }\n          });\n        }\n      } else {\n        var keyIndex = this.expandedRowKeys.indexOf(record.id);\n\n        if (keyIndex >= 0) {\n          this.expandedRowKeys.splice(keyIndex, 1);\n        }\n      }\n    },\n    getQueryParams: function getQueryParams() {\n      var param = Object.assign({}, this.queryParam, this.isorter);\n      param.pageNo = this.pagination.current;\n      param.pageSize = this.pagination.pageSize;\n      return filterObj(param);\n    },\n    initCgButtonList: function initCgButtonList(btnList) {\n      var linkArr = [];\n      var buttonArr = [];\n\n      if (btnList && btnList.length > 0) {\n        for (var i = 0; i < btnList.length; i++) {\n          var temp = btnList[i];\n\n          if (temp.buttonStyle == 'button') {\n            buttonArr.push(temp);\n          } else if (temp.buttonStyle == 'link') {\n            linkArr.push(temp);\n          }\n        }\n      }\n\n      this.cgButtonLinkList = [].concat(linkArr);\n      this.cgButtonList = [].concat(buttonArr);\n    },\n    initCgEnhanceJs: function initCgEnhanceJs(enhanceJs) {\n      //console.log(\"--onlineList-js增强\",enhanceJs)\n      if (enhanceJs) {\n        var Obj = eval(\"(\" + enhanceJs + \")\");\n        this.EnhanceJS = new Obj(getAction, postAction, deleteAction);\n        this.cgButtonJsHandler('created');\n      } else {\n        this.EnhanceJS = '';\n      }\n    },\n    initButtonSwitch: function initButtonSwitch(hideColumns) {\n      var _this8 = this;\n\n      if (hideColumns && hideColumns.length > 0) {\n        Object.keys(this.buttonSwitch).forEach(function (key) {\n          if (hideColumns.indexOf(key) >= 0) {\n            _this8.buttonSwitch[key] = false;\n          }\n        });\n      }\n    },\n    onClearSelected: function onClearSelected() {\n      this.selectedRowKeys = [];\n      this.selectionRows = [];\n    },\n    handleTableChange: function handleTableChange(pagination, filters, sorter) {\n      //TODO 筛选\n      if (Object.keys(sorter).length > 0) {\n        this.isorter.column = sorter.field;\n        this.isorter.order = \"ascend\" == sorter.order ? \"asc\" : \"desc\";\n      }\n\n      this.pagination = pagination;\n      this.loadData();\n    },\n\n    /*-------数据格式化-begin----------*/\n    getDateNoTime: function getDateNoTime(text) {\n      if (!text) {\n        return '';\n      }\n\n      var a = text;\n\n      if (a.length > 10) {\n        a = a.substring(0, 10);\n      }\n\n      return a;\n    },\n    getImgView: function getImgView(text) {\n      if (text && text.indexOf(\",\") > 0) {\n        text = text.substring(0, text.indexOf(\",\"));\n      }\n\n      return window._CONFIG['downloadURL'] + \"/\" + text;\n    },\n    uploadFile: function uploadFile(text) {\n      if (!text) {\n        this.$message.warning(\"未知的文件\");\n        return;\n      }\n\n      if (text.indexOf(\",\") > 0) {\n        text = text.substring(0, text.indexOf(\",\"));\n      }\n\n      window.open(window._CONFIG['domianURL'] + \"/sys/common/download/\" + text);\n    },\n\n    /*-------数据格式化-end----------*/\n\n    /*-------功能按钮触发事件-begin----------*/\n    handleEdit: function handleEdit(record) {\n      this.cgButtonLinkHandler(record, \"beforeEdit\", \"js\");\n      this.$refs.modal.edit(this.formTemplate, record.id);\n    },\n    handleDetail: function handleDetail(record) {\n      this.$refs.modal.detail(this.formTemplate, record.id);\n    },\n    handleDeleteOne: function handleDeleteOne(record) {\n      this.cgButtonLinkHandler(record, \"beforeDelete\", \"js\");\n      this.handleDelete(record.id);\n    },\n    handleDelete: function handleDelete(id) {\n      var _this9 = this;\n\n      deleteAction(this.url.optPre + this.code + \"/\" + id).then(function (res) {\n        if (res.success) {\n          _this9.$message.success(res.message);\n\n          _this9.loadData();\n        } else {\n          _this9.$message.warning(res.message);\n        }\n      });\n    },\n    handleAdd: function handleAdd() {\n      this.cgButtonJsHandler('beforeAdd');\n      this.$refs.modal.add(this.formTemplate);\n    },\n    handleFormSuccess: function handleFormSuccess() {\n      this.loadData();\n    },\n    handleImportXls: function handleImportXls() {\n      this.$refs.importModal.show();\n    },\n    importOk: function importOk() {\n      this.loadData(1);\n    },\n    getImportUrl: function getImportUrl() {\n      return '/online/cgform/api/importXls/' + this.code;\n    },\n    handleExportXls: function handleExportXls() {\n      var _this10 = this;\n\n      var param = this.queryParam;\n\n      if (this.selectedRowKeys && this.selectedRowKeys.length > 0) {\n        param['selections'] = this.selectedRowKeys.join(\",\");\n      }\n\n      console.log(\"导出参数\", param);\n      var paramsStr = JSON.stringify(filterObj(param));\n      downFile(this.url.exportXls + this.code, {\n        paramsStr: paramsStr\n      }).then(function (data) {\n        if (!data) {\n          _this10.$message.warning(\"文件下载失败\");\n\n          return;\n        }\n\n        if (typeof window.navigator.msSaveBlob !== 'undefined') {\n          window.navigator.msSaveBlob(new Blob([data]), _this10.description + '.xls');\n        } else {\n          var url = window.URL.createObjectURL(new Blob([data]));\n          var link = document.createElement('a');\n          link.style.display = 'none';\n          link.href = url;\n          link.setAttribute('download', _this10.description + '.xls');\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link); //下载完成移除元素\n\n          window.URL.revokeObjectURL(url); //释放掉blob对象\n        }\n      });\n    },\n    handleDelBatch: function handleDelBatch() {\n      if (this.selectedRowKeys.length <= 0) {\n        this.$message.warning('请选择一条记录！');\n        return false;\n      } else {\n        var ids = \"\";\n        var that = this;\n        that.selectedRowKeys.forEach(function (val) {\n          ids += val + \",\";\n        });\n        that.$confirm({\n          title: \"确认删除\",\n          content: \"是否删除选中数据?\",\n          onOk: function onOk() {\n            that.handleDelete(ids);\n            that.onClearSelected();\n          }\n        });\n      }\n    },\n\n    /*-------功能按钮触发事件-begin----------*/\n\n    /*-------JS增强-begin----------*/\n    cgButtonLinkHandler: function cgButtonLinkHandler(record, buttonCode, optType) {\n      var _this11 = this;\n\n      if (optType == \"js\") {\n        if (this.EnhanceJS[buttonCode]) {\n          this.EnhanceJS[buttonCode](this, record);\n        }\n      } else if (optType == \"action\") {\n        var params = {\n          formId: this.code,\n          buttonCode: buttonCode,\n          dataId: record.id\n        };\n        console.log(\"自定义按钮link请求后台参数：\", params);\n        postAction(this.url.buttonAction, params).then(function (res) {\n          if (res.success) {\n            _this11.loadData();\n\n            _this11.$message.success(\"处理完成!\");\n          } else {\n            _this11.$message.warning(\"处理失败!\");\n          }\n        });\n      }\n    },\n    cgButtonJsHandler: function cgButtonJsHandler(buttonCode) {\n      if (this.EnhanceJS[buttonCode]) {\n        this.EnhanceJS[buttonCode](this);\n      }\n    },\n    cgButtonActionHandler: function cgButtonActionHandler(buttonCode) {\n      var _this12 = this;\n\n      //处理自定义button的 需要配置该button自定义sql\n      if (!this.selectedRowKeys || this.selectedRowKeys.length == 0) {\n        this.$message.warning(\"请先选中一条记录\");\n        return false;\n      }\n\n      if (this.selectedRowKeys.length > 1) {\n        this.$message.warning(\"请只选中一条记录\");\n        return false;\n      }\n\n      var params = {\n        formId: this.code,\n        buttonCode: buttonCode,\n        dataId: this.selectedRowKeys[0]\n      };\n      console.log(\"自定义按钮请求后台参数：\", params);\n      postAction(this.url.buttonAction, params).then(function (res) {\n        if (res.success) {\n          _this12.loadData();\n\n          _this12.$message.success(\"处理完成!\");\n        } else {\n          _this12.$message.warning(\"处理失败!\");\n        }\n      });\n    }\n  }\n};",null]}