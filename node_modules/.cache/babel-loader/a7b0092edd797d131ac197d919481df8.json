{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/modules/online/cgform/auto/OnlCgformAutoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/modules/online/cgform/auto/OnlCgformAutoList.vue","mtime":1571018558929},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _toConsumableArray from \"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.array.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { postAction, getAction, deleteAction, downFile } from '@/api/manage';\nimport { filterMultiDictText } from '@/components/dict/JDictSelectUtil';\nimport { filterObj } from '@/utils/util';\nimport JImportModal from '@/components/jeecg/JImportModal';\nexport default {\n  name: 'OnlCgFormAutoList',\n  components: {\n    JImportModal: JImportModal\n  },\n  data: function data() {\n    return {\n      code: '',\n      description: '在线报表功能测试页面',\n      currentTableName: \"\",\n      url: {\n        getQueryInfo: '/online/cgform/api/getQueryInfo/',\n        getColumns: '/online/cgform/api/getColumns/',\n        getData: '/online/cgform/api/getData/',\n        optPre: \"/online/cgform/api/form/\",\n        exportXls: '/online/cgform/api/exportXls/',\n        buttonAction: '/online/cgform/api/doButton'\n      },\n      flowCodePre: \"onl_\",\n      isorter: {\n        column: 'createTime',\n        order: 'desc'\n      },\n      //dictOptions:{fieldName:[]}\n      dictOptions: {},\n      cgButtonLinkList: [],\n      cgButtonList: [],\n      queryInfo: [],\n      queryParam: {},\n      toggleSearchStatus: false,\n      table: {\n        loading: true,\n        // 表头\n        columns: [],\n        //数据集\n        dataSource: [],\n        // 选择器\n        selectedRowKeys: [],\n        selectionRows: [],\n        // 分页参数\n        pagination: {\n          current: 1,\n          pageSize: 10,\n          pageSizeOptions: ['10', '20', '30'],\n          showTotal: function showTotal(total, range) {\n            return range[0] + '-' + range[1] + ' 共' + total + '条';\n          },\n          showQuickJumper: true,\n          showSizeChanger: true,\n          total: 0\n        }\n      },\n      actionColumn: {\n        title: '操作',\n        dataIndex: 'action',\n        scopedSlots: {\n          customRender: 'action'\n        },\n        fixed: \"right\",\n        align: \"center\",\n        width: 150\n      },\n      formTemplate: \"99\",\n      EnhanceJS: '',\n      hideColumns: [],\n      buttonSwitch: {\n        add: true,\n        update: true,\n        delete: true,\n        batch_delete: true,\n        import: true,\n        export: true\n      },\n      hasBpmStatus: false\n    };\n  },\n  created: function created() {\n    this.initAutoList();\n  },\n  mounted: function mounted() {\n    this.cgButtonJsHandler('mounted');\n  },\n  watch: {\n    '$route': function $route() {\n      // 刷新参数放到这里去触发，就可以刷新相同界面了\n      this.initAutoList();\n    }\n  },\n  methods: {\n    hasBpmStatusFilter: function hasBpmStatusFilter() {\n      var columnObjs = this.table.columns;\n      var columns = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = columnObjs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          columns.push(item.dataIndex);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (columns.includes('bpm_status') || columns.includes('BPM_STATUS')) {\n        this.hasBpmStatus = true;\n      } else {\n        this.hasBpmStatus = false;\n      }\n    },\n    initQueryInfo: function initQueryInfo() {\n      var _this = this;\n\n      getAction(\"\".concat(this.url.getQueryInfo).concat(this.code)).then(function (res) {\n        console.log(\"--onlineList-获取查询条件配置\", res);\n\n        if (res.success) {\n          _this.queryInfo = res.result;\n        } else {\n          _this.$message.warning(res.message);\n        }\n      });\n    },\n    initAutoList: function initAutoList() {\n      var _this2 = this;\n\n      if (!this.$route.params.code) {\n        return false;\n      }\n\n      this.table.loading = true;\n      this.code = this.$route.params.code;\n      getAction(\"\".concat(this.url.getColumns).concat(this.code)).then(function (res) {\n        console.log(\"--onlineList-加载动态列>>\", res);\n\n        if (res.success) {\n          _this2.dictOptions = res.result.dictOptions;\n          _this2.formTemplate = res.result.formTemplate;\n          _this2.description = res.result.description;\n          _this2.currentTableName = res.result.currentTableName;\n\n          _this2.initCgButtonList(res.result.cgButtonList);\n\n          _this2.initCgEnhanceJs(res.result.enhanceJs);\n\n          _this2.initButtonSwitch(res.result.hideColumns);\n\n          var currColumns = res.result.columns;\n\n          for (var a = 0; a < currColumns.length; a++) {\n            if (currColumns[a].customRender) {\n              (function () {\n                var dictCode = currColumns[a].customRender;\n\n                currColumns[a].customRender = function (text) {\n                  return filterMultiDictText(_this2.dictOptions[dictCode], text);\n                };\n              })();\n            }\n          }\n\n          currColumns.push(_this2.actionColumn);\n          _this2.table.columns = _toConsumableArray(currColumns);\n\n          _this2.hasBpmStatusFilter();\n\n          _this2.loadData();\n\n          _this2.initQueryInfo();\n        } else {\n          _this2.$message.warning(res.message);\n        }\n      });\n    },\n    loadData: function loadData(arg) {\n      var _this3 = this;\n\n      if (arg == 1) {\n        this.table.pagination.current = 1;\n      }\n\n      var params = this.getQueryParams(); //查询条件\n\n      console.log(\"--onlineList-查询条件-->\", params);\n      getAction(\"\".concat(this.url.getData).concat(this.code), params).then(function (res) {\n        console.log(\"--onlineList-列表数据\", res);\n\n        if (res.success) {\n          var result = res.result;\n\n          if (Number(result.total) > 0) {\n            _this3.table.pagination.total = Number(result.total);\n            _this3.table.dataSource = result.records;\n          } else {\n            _this3.table.pagination.total = 0;\n            _this3.table.dataSource = []; //this.$message.warning(\"查无数据\")\n          }\n        } else {\n          _this3.$message.warning(res.message);\n        }\n\n        _this3.table.loading = false;\n      });\n    },\n    getQueryParams: function getQueryParams() {\n      var param = Object.assign({}, this.queryParam, this.isorter);\n      param.pageNo = this.table.pagination.current;\n      param.pageSize = this.table.pagination.pageSize;\n      return filterObj(param);\n    },\n    handleChangeInTableSelect: function handleChangeInTableSelect(selectedRowKeys, selectionRows) {\n      this.table.selectedRowKeys = selectedRowKeys;\n      this.table.selectionRows = selectionRows;\n    },\n    handleTableChange: function handleTableChange(pagination, filters, sorter) {\n      //TODO 筛选\n      if (Object.keys(sorter).length > 0) {\n        this.isorter.column = sorter.field;\n        this.isorter.order = \"ascend\" == sorter.order ? \"asc\" : \"desc\";\n      }\n\n      this.table.pagination = pagination;\n      this.loadData();\n    },\n    handleAdd: function handleAdd() {\n      this.cgButtonJsHandler('beforeAdd');\n      this.$refs.modal.add(this.formTemplate);\n    },\n    handleImportXls: function handleImportXls() {\n      this.$refs.importModal.show();\n    },\n    importOk: function importOk() {\n      this.loadData(1);\n    },\n    handleExportXls2: function handleExportXls2() {\n      var param = this.queryParam;\n\n      if (this.table.selectedRowKeys && this.table.selectedRowKeys.length > 0) {\n        param['selections'] = this.table.selectedRowKeys.join(\",\");\n      }\n\n      var paramsStr = encodeURI(JSON.stringify(param));\n      console.log('paramsStr: ' + paramsStr);\n      var url = window._CONFIG['domianURL'] + this.url.exportXls + this.code + \"?paramsStr=\" + paramsStr;\n      window.location.href = url;\n    },\n    handleExportXls: function handleExportXls() {\n      var _this4 = this;\n\n      var param = this.queryParam;\n\n      if (this.table.selectedRowKeys && this.table.selectedRowKeys.length > 0) {\n        param['selections'] = this.table.selectedRowKeys.join(\",\");\n      }\n\n      console.log(\"导出参数\", param);\n      var paramsStr = JSON.stringify(filterObj(param));\n      downFile(this.url.exportXls + this.code, {\n        paramsStr: paramsStr\n      }).then(function (data) {\n        if (!data) {\n          _this4.$message.warning(\"文件下载失败\");\n\n          return;\n        }\n\n        if (typeof window.navigator.msSaveBlob !== 'undefined') {\n          window.navigator.msSaveBlob(new Blob([data]), _this4.description + '.xls');\n        } else {\n          var url = window.URL.createObjectURL(new Blob([data]));\n          var link = document.createElement('a');\n          link.style.display = 'none';\n          link.href = url;\n          link.setAttribute('download', _this4.description + '.xls');\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link); //下载完成移除元素\n\n          window.URL.revokeObjectURL(url); //释放掉blob对象\n        }\n      });\n    },\n    handleEdit: function handleEdit(record) {\n      this.cgButtonLinkHandler(record, \"beforeEdit\", \"js\");\n      this.$refs.modal.edit(this.formTemplate, record.id);\n    },\n    handleDetail: function handleDetail(record) {\n      this.$refs.modal.detail(this.formTemplate, record.id);\n    },\n    handleDeleteOne: function handleDeleteOne(record) {\n      this.cgButtonLinkHandler(record, \"beforeDelete\", \"js\");\n      this.handleDelete(record.id);\n    },\n    handleDelete: function handleDelete(id) {\n      var _this5 = this;\n\n      deleteAction(this.url.optPre + this.code + \"/\" + id).then(function (res) {\n        if (res.success) {\n          _this5.$message.success(res.message);\n\n          _this5.loadData();\n        } else {\n          _this5.$message.warning(res.message);\n        }\n      });\n    },\n    handleFormSuccess: function handleFormSuccess() {\n      this.loadData();\n    },\n    onClearSelected: function onClearSelected() {\n      this.table.selectedRowKeys = [];\n      this.table.selectionRows = [];\n    },\n    getImgView: function getImgView(text) {\n      if (text && text.indexOf(\",\") > 0) {\n        text = text.substring(0, text.indexOf(\",\"));\n      }\n\n      return window._CONFIG['imgDomainURL'] + \"/\" + text;\n    },\n    uploadFile: function uploadFile(text) {\n      if (!text) {\n        this.$message.warning(\"未知的文件\");\n        return;\n      }\n\n      if (text.indexOf(\",\") > 0) {\n        text = text.substring(0, text.indexOf(\",\"));\n      }\n\n      window.open(window._CONFIG['imgDomainURL'] + \"/\" + text); //TODO 下载的方法\n    },\n    handleDelBatch: function handleDelBatch() {\n      if (this.table.selectedRowKeys.length <= 0) {\n        this.$message.warning('请选择一条记录！');\n        return false;\n      } else {\n        var ids = \"\";\n        var that = this;\n        that.table.selectedRowKeys.forEach(function (val) {\n          ids += val + \",\";\n        });\n        that.$confirm({\n          title: \"确认删除\",\n          content: \"是否删除选中数据?\",\n          onOk: function onOk() {\n            that.handleDelete(ids);\n            that.onClearSelected();\n          }\n        });\n      }\n    },\n    searchByquery: function searchByquery() {\n      this.loadData(1);\n    },\n    searchReset: function searchReset() {\n      this.queryParam = {};\n      this.loadData(1);\n    },\n    handleToggleSearch: function handleToggleSearch() {\n      this.toggleSearchStatus = !this.toggleSearchStatus;\n    },\n    getFormatDate: function getFormatDate(text) {\n      if (!text) {\n        return '';\n      }\n\n      var a = text;\n\n      if (a.length > 10) {\n        a = a.substring(0, 10);\n      }\n\n      return a;\n    },\n    getImportUrl: function getImportUrl() {\n      return '/online/cgform/api/importXls/' + this.code;\n    },\n    initCgEnhanceJs: function initCgEnhanceJs(enhanceJs) {\n      //console.log(\"--onlineList-js增强\",enhanceJs)\n      if (enhanceJs) {\n        var Obj = eval(\"(\" + enhanceJs + \")\");\n        this.EnhanceJS = new Obj(getAction, postAction, deleteAction);\n        this.cgButtonJsHandler('created');\n      } else {\n        this.EnhanceJS = '';\n      }\n    },\n    initCgButtonList: function initCgButtonList(btnList) {\n      var linkArr = [];\n      var buttonArr = [];\n\n      if (btnList && btnList.length > 0) {\n        for (var i = 0; i < btnList.length; i++) {\n          var temp = btnList[i];\n\n          if (temp.buttonStyle == 'button') {\n            buttonArr.push(temp);\n          } else if (temp.buttonStyle == 'link') {\n            linkArr.push(temp);\n          }\n        }\n      }\n\n      this.cgButtonLinkList = [].concat(linkArr);\n      this.cgButtonList = [].concat(buttonArr);\n    },\n    cgButtonJsHandler: function cgButtonJsHandler(buttonCode) {\n      if (this.EnhanceJS[buttonCode]) {\n        this.EnhanceJS[buttonCode](this);\n      }\n    },\n    cgButtonActionHandler: function cgButtonActionHandler(buttonCode) {\n      var _this6 = this;\n\n      //处理自定义button的 需要配置该button自定义sql\n      if (!this.table.selectedRowKeys || this.table.selectedRowKeys.length == 0) {\n        this.$message.warning(\"请先选中一条记录\");\n        return false;\n      }\n\n      if (this.table.selectedRowKeys.length > 1) {\n        this.$message.warning(\"请只选中一条记录\");\n        return false;\n      }\n\n      var params = {\n        formId: this.code,\n        buttonCode: buttonCode,\n        dataId: this.table.selectedRowKeys[0]\n      };\n      console.log(\"自定义按钮请求后台参数：\", params);\n      postAction(this.url.buttonAction, params).then(function (res) {\n        if (res.success) {\n          _this6.loadData();\n\n          _this6.$message.success(\"处理完成!\");\n        } else {\n          _this6.$message.warning(\"处理失败!\");\n        }\n      });\n    },\n    cgButtonLinkHandler: function cgButtonLinkHandler(record, buttonCode, optType) {\n      var _this7 = this;\n\n      if (optType == \"js\") {\n        if (this.EnhanceJS[buttonCode]) {\n          this.EnhanceJS[buttonCode](this, record);\n        }\n      } else if (optType == \"action\") {\n        var params = {\n          formId: this.code,\n          buttonCode: buttonCode,\n          dataId: record.id\n        };\n        console.log(\"自定义按钮link请求后台参数：\", params);\n        postAction(this.url.buttonAction, params).then(function (res) {\n          if (res.success) {\n            _this7.loadData();\n\n            _this7.$message.success(\"处理完成!\");\n          } else {\n            _this7.$message.warning(\"处理失败!\");\n          }\n        });\n      }\n    },\n    initButtonSwitch: function initButtonSwitch(hideColumns) {\n      var _this8 = this;\n\n      if (hideColumns && hideColumns.length > 0) {\n        Object.keys(this.buttonSwitch).forEach(function (key) {\n          if (hideColumns.indexOf(key) >= 0) {\n            _this8.buttonSwitch[key] = false;\n          }\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["OnlCgformAutoList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-card :bordered=\"false\" style=\"height: 100%\">\n    <div class=\"table-page-search-wrapper\">\n      <a-form layout=\"inline\">\n        <a-row :gutter=\"24\" v-if=\"queryInfo && queryInfo.length>0\">\n          <template v-for=\"(item,index) in queryInfo\">\n            <template v-if=\" item.hidden==='1' \">\n              <a-col v-if=\"item.view=='datetime'\" :md=\"12\" :sm=\"16\" :key=\" 'query'+index \" v-show=\"toggleSearchStatus\">\n                <online-query-form-item :queryParam=\"queryParam\" :item=\"item\" :dictOptions=\"dictOptions\"></online-query-form-item>\n              </a-col>\n              <a-col v-else :md=\"6\" :sm=\"8\" :key=\" 'query'+index \" v-show=\"toggleSearchStatus\">\n                <online-query-form-item :queryParam=\"queryParam\" :item=\"item\" :dictOptions=\"dictOptions\"></online-query-form-item>\n              </a-col>\n            </template>\n            <template v-else>\n              <a-col v-if=\"item.view=='datetime'\" :md=\"12\" :sm=\"16\" :key=\" 'query'+index \">\n                <online-query-form-item :queryParam=\"queryParam\" :item=\"item\" :dictOptions=\"dictOptions\"></online-query-form-item>\n              </a-col>\n              <a-col v-else :md=\"6\" :sm=\"8\" :key=\" 'query'+index \">\n                <online-query-form-item :queryParam=\"queryParam\" :item=\"item\" :dictOptions=\"dictOptions\"></online-query-form-item>\n              </a-col>\n            </template>\n          </template>\n\n          <a-col :md=\"6\" :sm=\"8\">\n            <span style=\"float: left;overflow: hidden;\" class=\"table-page-search-submitButtons\">\n              <a-button type=\"primary\" @click=\"searchByquery\" icon=\"search\">查询</a-button>\n              <a-button type=\"primary\" @click=\"searchReset\" icon=\"reload\" style=\"margin-left: 8px\">重置</a-button>\n              <a @click=\"handleToggleSearch\" style=\"margin-left: 8px\">\n                {{ toggleSearchStatus ? '收起' : '展开' }}\n                <a-icon :type=\"toggleSearchStatus ? 'up' : 'down'\"/>\n              </a>\n            </span>\n          </a-col>\n\n        </a-row>\n      </a-form>\n    </div>\n\n    <!-- 操作按钮区域 -->\n    <div class=\"table-operator\">\n      <a-button v-if=\"buttonSwitch.add\" @click=\"handleAdd\" type=\"primary\" icon=\"plus\">新增</a-button>\n      <a-button v-if=\"buttonSwitch.import\" @click=\"handleImportXls\" type=\"primary\" icon=\"upload\" style=\"margin-left:8px\">导入</a-button>\n      <a-button v-if=\"buttonSwitch.export\" @click=\"handleExportXls\" type=\"primary\" icon=\"download\" style=\"margin-left:8px\">导出</a-button>\n      <template v-if=\"cgButtonList && cgButtonList.length>0\" v-for=\"(item,index) in cgButtonList\">\n        <a-button\n          v-if=\" item.optType=='js' \"\n          :key=\" 'cgbtn'+index \"\n          @click=\"cgButtonJsHandler(item.buttonCode)\"\n          type=\"primary\"\n          :icon=\"item.buttonIcon\"\n          style=\"margin-left:8px\">\n          {{ item.buttonName }}\n        </a-button>\n        <a-button\n          v-else-if=\" item.optType=='action' \"\n          :key=\" 'cgbtn'+index \"\n          @click=\"cgButtonActionHandler(item.buttonCode)\"\n          type=\"primary\"\n          :icon=\"item.buttonIcon\"\n          style=\"margin-left:8px\">\n          {{ item.buttonName }}\n        </a-button>\n      </template>\n\n      <a-button\n        v-if=\"buttonSwitch.batch_delete\"\n        @click=\"handleDelBatch\"\n        style=\"margin-left:8px\"\n        v-show=\"table.selectedRowKeys.length > 0\"\n        ghost\n        type=\"primary\"\n        icon=\"delete\">批量删除</a-button>\n    </div>\n\n    <div>\n      <div class=\"ant-alert ant-alert-info\" style=\"margin-bottom: 16px;\">\n        <i class=\"anticon anticon-info-circle ant-alert-icon\"></i>\n        已选择&nbsp;<a style=\"font-weight: 600\">{{ table.selectedRowKeys.length }}</a>项&nbsp;&nbsp;\n        <a style=\"margin-left: 24px\" @click=\"onClearSelected\">清空</a>\n      </div>\n\n      <a-table\n        ref=\"cgformAutoList\"\n        bordered\n        size=\"middle\"\n        rowKey=\"id\"\n        :columns=\"table.columns\"\n        :dataSource=\"table.dataSource\"\n        :pagination=\"table.pagination\"\n        :loading=\"table.loading\"\n        :rowSelection=\"{selectedRowKeys:table.selectedRowKeys, onChange: handleChangeInTableSelect}\"\n        @change=\"handleTableChange\"\n        style=\"min-height: 300px\">\n\n        <template slot=\"dateSlot\" slot-scope=\"text\">\n          <span>{{ getFormatDate(text) }}</span>\n        </template>\n\n        <template slot=\"htmlSlot\" slot-scope=\"text\">\n          <div v-html=\"text\"></div>\n        </template>\n\n        <template slot=\"imgSlot\" slot-scope=\"text\">\n          <span v-if=\"!text\" style=\"font-size: 12px;font-style: italic;\">无此图片</span>\n          <img v-else :src=\"getImgView(text)\" height=\"25px\" alt=\"图片不存在\" style=\"max-width:80px;font-size: 12px;font-style: italic;\"/>\n        </template>\n\n        <template slot=\"fileSlot\" slot-scope=\"text\">\n          <span v-if=\"!text\" style=\"font-size: 12px;font-style: italic;\">无此文件</span>\n          <a-button\n            v-else\n            :ghost=\"true\"\n            type=\"primary\"\n            icon=\"download\"\n            size=\"small\"\n            @click=\"uploadFile(text)\">\n            下载\n          </a-button>\n        </template>\n\n        <span slot=\"action\" slot-scope=\"text, record\">\n          <template v-if=\"hasBpmStatus\">\n            <template v-if=\"record.bpm_status == '1'||record.bpm_status == ''|| record.bpm_status == null\">\n              <template v-if=\"buttonSwitch.update\">\n              <a @click=\"handleEdit(record)\">编辑</a>\n              <a-divider type=\"vertical\"/>\n            </template>\n            </template>\n          </template>\n          <template v-else>\n            <template v-if=\"buttonSwitch.update\">\n              <a @click=\"handleEdit(record)\">编辑</a>\n              <a-divider type=\"vertical\"/>\n            </template>\n          </template>\n          <a-dropdown>\n            <a class=\"ant-dropdown-link\">\n              更多 <a-icon type=\"down\" />\n            </a>\n            <a-menu slot=\"overlay\">\n              <a-menu-item >\n                <a href=\"javascript:;\" @click=\"handleDetail(record)\">详情</a>\n              </a-menu-item>\n              <template v-if=\"hasBpmStatus\">\n              </template>\n              <template v-else>\n                <a-menu-item v-if=\"buttonSwitch.delete\">\n                  <a-popconfirm title=\"确定删除吗?\" @confirm=\"() => handleDeleteOne(record)\">\n                    <a>删除</a>\n                  </a-popconfirm>\n                </a-menu-item>\n               </template>\n              <template v-if=\"cgButtonLinkList && cgButtonLinkList.length>0\" v-for=\"(btnItem,btnIndex) in cgButtonLinkList\">\n                <a-menu-item :key=\" 'cgbtnLink'+btnIndex \">\n                  <a href=\"javascript:void(0);\" @click=\"cgButtonLinkHandler(record,btnItem.buttonCode,btnItem.optType)\">\n                    <a-icon v-if=\"btnItem.buttonIcon\" :type=\"btnItem.buttonIcon\" />\n                    {{ btnItem.buttonName }}\n                  </a>\n                </a-menu-item>\n              </template>\n\n            </a-menu>\n          </a-dropdown>\n        </span>\n      </a-table>\n\n      <OnlCgformAutoModal @success=\"handleFormSuccess\" ref=\"modal\" :code=\"code\"></OnlCgformAutoModal>\n\n      <j-import-modal ref=\"importModal\" :url=\"getImportUrl()\" @ok=\"importOk\"></j-import-modal>\n\n    </div>\n  </a-card>\n</template>\n\n<script>\n\n  import { postAction,getAction,deleteAction,downFile } from '@/api/manage'\n  import { filterMultiDictText } from '@/components/dict/JDictSelectUtil'\n  import { filterObj } from '@/utils/util';\n  import JImportModal from '@/components/jeecg/JImportModal'\n\n  export default {\n    name: 'OnlCgFormAutoList',\n    components: {\n      JImportModal\n    },\n    data() {\n      return {\n        code: '',\n        description: '在线报表功能测试页面',\n        currentTableName:\"\",\n        url: {\n          getQueryInfo:'/online/cgform/api/getQueryInfo/',\n          getColumns: '/online/cgform/api/getColumns/',\n          getData: '/online/cgform/api/getData/',\n          optPre:\"/online/cgform/api/form/\",\n          exportXls:'/online/cgform/api/exportXls/',\n          buttonAction:'/online/cgform/api/doButton',\n        },\n        flowCodePre:\"onl_\",\n        isorter:{\n          column: 'createTime',\n          order: 'desc',\n        },\n        //dictOptions:{fieldName:[]}\n        dictOptions:{\n\n        },\n        cgButtonLinkList:[],\n        cgButtonList:[],\n        queryInfo:[],\n        queryParam:{\n\n        },\n        toggleSearchStatus:false,\n        table: {\n          loading: true,\n          // 表头\n          columns: [],\n          //数据集\n          dataSource: [],\n          // 选择器\n          selectedRowKeys: [],\n          selectionRows: [],\n          // 分页参数\n          pagination: {\n             current: 1,\n             pageSize: 10,\n             pageSizeOptions: ['10', '20', '30'],\n             showTotal: (total, range) => {\n               return range[0] + '-' + range[1] + ' 共' + total + '条'\n             },\n             showQuickJumper: true,\n             showSizeChanger: true,\n             total: 0\n          }\n        },\n        actionColumn:{\n          title: '操作',\n          dataIndex: 'action',\n          scopedSlots: { customRender: 'action' },\n          fixed:\"right\",\n          align:\"center\",\n          width:150\n        },\n        formTemplate:\"99\",\n        EnhanceJS:'',\n        hideColumns:[],\n        buttonSwitch:{\n          add:true,\n          update:true,\n          delete:true,\n          batch_delete:true,\n          import:true,\n          export:true\n        },\n        hasBpmStatus:false,\n      }\n    },\n    created() {\n      this.initAutoList();\n    },\n    mounted(){\n      this.cgButtonJsHandler('mounted')\n    },\n    watch: {\n      '$route'() {\n        // 刷新参数放到这里去触发，就可以刷新相同界面了\n        this.initAutoList()\n      }\n    },\n    methods: {\n      hasBpmStatusFilter(){\n        var columnObjs = this.table.columns;\n        let columns = [];\n        for (var item of columnObjs) {\n          columns.push(item.dataIndex);\n        }\n        if(columns.includes('bpm_status')||columns.includes('BPM_STATUS')){\n          this.hasBpmStatus = true;\n        }else{\n          this.hasBpmStatus = false;\n        }\n      },\n      initQueryInfo(){\n        getAction(`${this.url.getQueryInfo}${this.code}`).then((res)=>{\n          console.log(\"--onlineList-获取查询条件配置\",res);\n          if(res.success){\n            this.queryInfo = res.result\n          }else{\n            this.$message.warning(res.message)\n          }\n        })\n      },\n      initAutoList(){\n        if(!this.$route.params.code){\n          return false\n        }\n        this.table.loading = true\n        this.code = this.$route.params.code\n        getAction(`${this.url.getColumns}${this.code}`).then((res)=>{\n          console.log(\"--onlineList-加载动态列>>\",res);\n          if(res.success){\n            this.dictOptions = res.result.dictOptions\n            this.formTemplate = res.result.formTemplate\n            this.description = res.result.description\n            this.currentTableName = res.result.currentTableName\n            this.initCgButtonList(res.result.cgButtonList)\n            this.initCgEnhanceJs(res.result.enhanceJs)\n            this.initButtonSwitch(res.result.hideColumns)\n            let currColumns = res.result.columns\n            for(let a=0;a<currColumns.length;a++){\n              if(currColumns[a].customRender){\n                let dictCode = currColumns[a].customRender;\n                currColumns[a].customRender=(text)=>{\n                  return filterMultiDictText(this.dictOptions[dictCode], text);\n                }\n              }\n            }\n            currColumns.push(this.actionColumn);\n            this.table.columns = [...currColumns]\n            this.hasBpmStatusFilter();\n            this.loadData();\n            this.initQueryInfo();\n          }else{\n            this.$message.warning(res.message)\n          }\n        })\n      },\n      loadData(arg){\n        if(arg==1){\n          this.table.pagination.current=1\n        }\n        let params = this.getQueryParams();//查询条件\n        console.log(\"--onlineList-查询条件-->\",params)\n        getAction(`${this.url.getData}${this.code}`,params).then((res)=>{\n          console.log(\"--onlineList-列表数据\",res)\n          if(res.success){\n            let result = res.result;\n            if(Number(result.total)>0){\n              this.table.pagination.total = Number(result.total)\n              this.table.dataSource = result.records\n            }else{\n              this.table.pagination.total=0;\n              this.table.dataSource=[]\n              //this.$message.warning(\"查无数据\")\n            }\n          }else{\n            this.$message.warning(res.message)\n          }\n          this.table.loading = false\n        })\n      },\n      getQueryParams() {\n        let param = Object.assign({}, this.queryParam,this.isorter);\n        param.pageNo = this.table.pagination.current;\n        param.pageSize = this.table.pagination.pageSize;\n        return filterObj(param);\n      },\n      handleChangeInTableSelect(selectedRowKeys, selectionRows) {\n        this.table.selectedRowKeys = selectedRowKeys\n        this.table.selectionRows = selectionRows\n      },\n      handleTableChange(pagination, filters, sorter){\n        //TODO 筛选\n        if (Object.keys(sorter).length>0){\n          this.isorter.column = sorter.field;\n          this.isorter.order = \"ascend\"==sorter.order?\"asc\":\"desc\"\n        }\n        this.table.pagination = pagination;\n        this.loadData();\n      },\n      handleAdd(){\n        this.cgButtonJsHandler('beforeAdd')\n        this.$refs.modal.add(this.formTemplate);\n      },\n      handleImportXls(){\n        this.$refs.importModal.show()\n      },\n      importOk(){\n        this.loadData(1)\n      },\n      handleExportXls2(){\n        let param = this.queryParam;\n        if(this.table.selectedRowKeys && this.table.selectedRowKeys.length>0){\n          param['selections'] = this.table.selectedRowKeys.join(\",\")\n        }\n        let paramsStr = encodeURI(JSON.stringify(param));\n        console.log('paramsStr: ' + paramsStr)\n        let url = window._CONFIG['domianURL']+this.url.exportXls+this.code+\"?paramsStr=\"+paramsStr\n        window.location.href = url;\n      },\n      handleExportXls(){\n        let param = this.queryParam;\n        if(this.table.selectedRowKeys && this.table.selectedRowKeys.length>0){\n          param['selections'] = this.table.selectedRowKeys.join(\",\")\n        }\n        console.log(\"导出参数\",param)\n        let paramsStr = JSON.stringify(filterObj(param));\n        downFile(this.url.exportXls+this.code,{paramsStr:paramsStr}).then((data)=>{\n          if (!data) {\n            this.$message.warning(\"文件下载失败\")\n            return\n          }\n          if (typeof window.navigator.msSaveBlob !== 'undefined') {\n            window.navigator.msSaveBlob(new Blob([data]), this.description+'.xls')\n          }else{\n            let url = window.URL.createObjectURL(new Blob([data]))\n            let link = document.createElement('a')\n            link.style.display = 'none'\n            link.href = url\n            link.setAttribute('download', this.description+'.xls')\n            document.body.appendChild(link)\n            link.click()\n            document.body.removeChild(link); //下载完成移除元素\n            window.URL.revokeObjectURL(url); //释放掉blob对象\n          }\n        })\n      },\n      handleEdit(record){\n        this.cgButtonLinkHandler(record,\"beforeEdit\",\"js\")\n        this.$refs.modal.edit(this.formTemplate,record.id);\n      },\n      handleDetail(record){\n        this.$refs.modal.detail(this.formTemplate,record.id);\n      },\n      handleDeleteOne(record){\n        this.cgButtonLinkHandler(record,\"beforeDelete\",\"js\")\n        this.handleDelete(record.id)\n      },\n      handleDelete(id){\n        deleteAction(this.url.optPre+this.code+\"/\"+id).then((res)=>{\n          if(res.success){\n            this.$message.success(res.message)\n            this.loadData()\n          }else{\n            this.$message.warning(res.message)\n          }\n        })\n      },\n\n      handleFormSuccess(){\n        this.loadData()\n      },\n      onClearSelected(){\n        this.table.selectedRowKeys = []\n        this.table.selectionRows = []\n      },\n      getImgView(text){\n        if(text && text.indexOf(\",\")>0){\n          text = text.substring(0,text.indexOf(\",\"))\n        }\n        return window._CONFIG['imgDomainURL']+\"/\"+text\n      },\n      uploadFile(text){\n        if(!text){\n          this.$message.warning(\"未知的文件\")\n          return;\n        }\n        if(text.indexOf(\",\")>0){\n          text = text.substring(0,text.indexOf(\",\"))\n        }\n        window.open(window._CONFIG['imgDomainURL']+\"/\"+text);//TODO 下载的方法\n      },\n      handleDelBatch(){\n        if(this.table.selectedRowKeys.length<=0){\n          this.$message.warning('请选择一条记录！');\n          return false;\n        }else{\n          let ids = \"\";\n          let that = this;\n          that.table.selectedRowKeys.forEach(function(val) {\n            ids+=val+\",\";\n          });\n          that.$confirm({\n            title:\"确认删除\",\n            content:\"是否删除选中数据?\",\n            onOk: function(){\n              that.handleDelete(ids)\n              that.onClearSelected();\n            }\n          });\n        }\n      },\n\n      searchByquery(){\n        this.loadData(1);\n      },\n      searchReset(){\n        this.queryParam = {}\n        this.loadData(1);\n      },\n      handleToggleSearch(){\n        this.toggleSearchStatus = !this.toggleSearchStatus;\n      },\n      getFormatDate(text){\n        if(!text){\n          return ''\n        }\n        let a = text;\n        if(a.length>10){\n          a = a.substring(0,10);\n        }\n        return a;\n      },\n      getImportUrl(){\n        return '/online/cgform/api/importXls/'+this.code\n      },\n      initCgEnhanceJs(enhanceJs){\n        //console.log(\"--onlineList-js增强\",enhanceJs)\n        if(enhanceJs){\n          let Obj = eval (\"(\" + enhanceJs + \")\");\n          this.EnhanceJS = new Obj(getAction,postAction,deleteAction);\n          this.cgButtonJsHandler('created')\n        }else{\n          this.EnhanceJS = ''\n        }\n      },\n      initCgButtonList(btnList){\n        let linkArr = []\n        let buttonArr = []\n        if(btnList && btnList.length>0){\n          for(let i=0;i<btnList.length;i++){\n            let temp = btnList[i]\n            if(temp.buttonStyle=='button'){\n              buttonArr.push(temp)\n            }else if(temp.buttonStyle=='link'){\n              linkArr.push(temp)\n            }\n          }\n        }\n        this.cgButtonLinkList = [...linkArr]\n        this.cgButtonList=[...buttonArr]\n      },\n      cgButtonJsHandler(buttonCode){\n        if(this.EnhanceJS[buttonCode]){\n          this.EnhanceJS[buttonCode](this)\n        }\n      },\n      cgButtonActionHandler(buttonCode){\n        //处理自定义button的 需要配置该button自定义sql\n        if(!this.table.selectedRowKeys || this.table.selectedRowKeys.length==0){\n          this.$message.warning(\"请先选中一条记录\")\n          return false\n        }\n        if(this.table.selectedRowKeys.length>1){\n          this.$message.warning(\"请只选中一条记录\")\n          return false\n        }\n        let params = {\n          formId:this.code,\n          buttonCode:buttonCode,\n          dataId:this.table.selectedRowKeys[0]\n        }\n        console.log(\"自定义按钮请求后台参数：\",params)\n        postAction(this.url.buttonAction,params).then(res=>{\n          if(res.success){\n            this.loadData()\n            this.$message.success(\"处理完成!\")\n          }else{\n            this.$message.warning(\"处理失败!\")\n          }\n        })\n\n      },\n      cgButtonLinkHandler(record,buttonCode,optType){\n        if(optType==\"js\"){\n          if(this.EnhanceJS[buttonCode]){\n            this.EnhanceJS[buttonCode](this,record)\n          }\n        }else if(optType==\"action\"){\n          let params = {\n            formId:this.code,\n            buttonCode:buttonCode,\n            dataId:record.id\n          }\n          console.log(\"自定义按钮link请求后台参数：\",params)\n          postAction(this.url.buttonAction,params).then(res=>{\n            if(res.success){\n              this.loadData()\n              this.$message.success(\"处理完成!\")\n            }else{\n              this.$message.warning(\"处理失败!\")\n            }\n          })\n        }\n      },\n      initButtonSwitch(hideColumns){\n        if(hideColumns && hideColumns.length>0){\n          Object.keys(this.buttonSwitch).forEach(key=>{\n            if(hideColumns.indexOf(key)>=0){\n              this.buttonSwitch[key]=false\n            }\n          })\n\n        }\n      }\n\n    }\n  }\n</script>\n<style>\n  .ant-card-body .table-operator{\n    margin-bottom: 18px;\n  }\n  .ant-table-tbody .ant-table-row td{\n    padding-top:15px;\n    padding-bottom:15px;\n  }\n  .anty-row-operator button{margin: 0 5px}\n  .ant-btn-danger{background-color: #ffffff}\n\n  .anty-img-wrap{height:25px;position: relative;}\n  .anty-img-wrap > img{max-height:100%;}\n  .ant-modal-cust-warp{height: 100%}\n  .ant-modal-cust-warp .ant-modal-body{height:calc(100% - 110px) !important;overflow-y: auto}\n  .ant-modal-cust-warp .ant-modal-content{height:90% !important;overflow-y: hidden}\n</style>"],"sourceRoot":"src/views/modules/online/cgform/auto"}]}