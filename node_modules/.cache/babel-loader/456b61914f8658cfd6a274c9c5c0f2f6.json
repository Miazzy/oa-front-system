{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/utils/util.js","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/utils/util.js","mtime":1571018558912},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":1565525386522},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1565525383413}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _toConsumableArray from \"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _typeof from \"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport { isURL } from '@/utils/validate';\nexport function timeFix() {\n  var time = new Date();\n  var hour = time.getHours();\n  return hour < 9 ? '早上好' : hour <= 11 ? '上午好' : hour <= 13 ? '中午好' : hour < 20 ? '下午好' : '晚上好';\n}\nexport function welcome() {\n  var arr = ['休息一会儿吧', '准备吃什么呢?', '要不要打一把 DOTA', '我猜你可能累了'];\n  var index = Math.floor(Math.random() * arr.length);\n  return arr[index];\n}\n/**\n * 触发 window.resize\n */\n\nexport function triggerWindowResizeEvent() {\n  var event = document.createEvent('HTMLEvents');\n  event.initEvent('resize', true, true);\n  event.eventType = 'message';\n  window.dispatchEvent(event);\n}\n/**\n * 过滤对象中为空的属性\n * @param obj\n * @returns {*}\n */\n\nexport function filterObj(obj) {\n  if (!(_typeof(obj) == 'object')) {\n    return;\n  }\n\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key) && (obj[key] == null || obj[key] == undefined || obj[key] === '')) {\n      delete obj[key];\n    }\n  }\n\n  return obj;\n}\n/**\n * 时间格式化\n * @param value\n * @param fmt\n * @returns {*}\n */\n\nexport function formatDate(value, fmt) {\n  var regPos = /^\\d+(\\.\\d+)?$/;\n\n  if (regPos.test(value)) {\n    //如果是数字\n    var getDate = new Date(value);\n    var o = {\n      'M+': getDate.getMonth() + 1,\n      'd+': getDate.getDate(),\n      'h+': getDate.getHours(),\n      'm+': getDate.getMinutes(),\n      's+': getDate.getSeconds(),\n      'q+': Math.floor((getDate.getMonth() + 3) / 3),\n      'S': getDate.getMilliseconds()\n    };\n\n    if (/(y+)/.test(fmt)) {\n      fmt = fmt.replace(RegExp.$1, (getDate.getFullYear() + '').substr(4 - RegExp.$1.length));\n    }\n\n    for (var k in o) {\n      if (new RegExp('(' + k + ')').test(fmt)) {\n        fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? o[k] : ('00' + o[k]).substr(('' + o[k]).length));\n      }\n    }\n\n    return fmt;\n  } else {\n    //TODO\n    value = value.trim();\n    return value.substr(0, fmt.length);\n  }\n} // 生成首页路由\n\nexport function generateIndexRouter(data) {\n  var indexRouter = [{\n    path: '/',\n    name: 'dashboard',\n    //component: () => import('@/components/layouts/BasicLayout'),\n    component: function component(resolve) {\n      return require(['@/components/layouts/TabLayout'], resolve);\n    },\n    meta: {\n      title: '首页'\n    },\n    redirect: '/dashboard/analysis',\n    children: _toConsumableArray(generateChildRouters(data))\n  }, {\n    \"path\": \"*\",\n    \"redirect\": \"/404\",\n    \"hidden\": true\n  }];\n  return indexRouter;\n} // 生成嵌套路由（子路由）\n\nfunction generateChildRouters(data) {\n  var routers = [];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    var _loop = function _loop() {\n      item = _step.value;\n      var _component = \"\";\n\n      if (item.component.indexOf(\"layouts\") >= 0) {\n        _component = \"components/\" + item.component;\n      } else {\n        _component = \"views/\" + item.component;\n      } // eslint-disable-next-line\n\n\n      var URL = (item.meta.url || '').replace(/{{([^}}]+)?}}/g, function (s1, s2) {\n        return eval(s2);\n      }); // URL支持{{ window.xxx }}占位符变量\n\n      if (isURL(URL)) {\n        item.meta.url = URL;\n      }\n\n      var menu = {\n        path: item.path,\n        name: item.name,\n        redirect: item.redirect,\n        component: function component(resolve) {\n          return require(['@/' + _component + '.vue'], resolve);\n        },\n        hidden: item.hidden,\n        //component:()=> import(`@/views/${item.component}.vue`),\n        meta: {\n          title: item.meta.title,\n          icon: item.meta.icon,\n          url: item.meta.url,\n          permissionList: item.meta.permissionList,\n          keepAlive: item.meta.keepAlive\n        }\n      };\n\n      if (item.alwaysShow) {\n        menu.alwaysShow = true;\n        menu.redirect = menu.path;\n      }\n\n      if (item.children && item.children.length > 0) {\n        menu.children = _toConsumableArray(generateChildRouters(item.children));\n      } //--update-begin----author:scott---date:20190320------for:根据后台菜单配置，判断是否路由菜单字段，动态选择是否生成路由（为了支持参数URL菜单）------\n      //判断是否生成路由\n\n\n      if (item.route && item.route === '0') {//console.log(' 不生成路由 item.route：  '+item.route);\n        //console.log(' 不生成路由 item.path：  '+item.path);\n      } else {\n        routers.push(menu);\n      } //--update-end----author:scott---date:20190320------for:根据后台菜单配置，判断是否路由菜单字段，动态选择是否生成路由（为了支持参数URL菜单）------\n\n    };\n\n    for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var item;\n\n      _loop();\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return routers;\n}\n/**\n * 深度克隆对象、数组\n * @param obj 被克隆的对象\n * @return 克隆后的对象\n */\n\n\nexport function cloneObject(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n/**\n * 随机生成数字\n *\n * 示例：生成长度为 12 的随机数：randomNumber(12)\n * 示例：生成 3~23 之间的随机数：randomNumber(3, 23)\n *\n * @param1 最小值 | 长度\n * @param2 最大值\n * @return int 生成后的数字\n */\n\nexport function randomNumber() {\n  // 生成 最小值 到 最大值 区间的随机数\n  var random = function random(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  if (arguments.length === 1) {\n    var _arguments = Array.prototype.slice.call(arguments),\n        length = _arguments[0]; // 生成指定长度的随机数字，首位一定不是 0\n\n\n    var nums = _toConsumableArray(Array(length).keys()).map(function (i) {\n      return i > 0 ? random(0, 9) : random(1, 9);\n    });\n\n    return parseInt(nums.join(''));\n  } else if (arguments.length >= 2) {\n    var _arguments2 = Array.prototype.slice.call(arguments),\n        min = _arguments2[0],\n        max = _arguments2[1];\n\n    return random(min, max);\n  } else {\n    return Number.NaN;\n  }\n}\n/**\n * 随机生成字符串\n * @param length 字符串的长度\n * @param chats 可选字符串区间（只会生成传入的字符串中的字符）\n * @return string 生成的字符串\n */\n\nexport function randomString(length, chats) {\n  if (!length) length = 1;\n  if (!chats) chats = '0123456789qwertyuioplkjhgfdsazxcvbnm';\n  var str = '';\n\n  for (var i = 0; i < length; i++) {\n    var num = randomNumber(0, chats.length - 1);\n    str += chats[num];\n  }\n\n  return str;\n}\n/**\n * 随机生成uuid\n * @return string 生成的uuid\n */\n\nexport function randomUUID() {\n  var chats = '0123456789abcdef';\n  return randomString(32, chats);\n}\n/**\n * 下划线转驼峰\n * @param string\n * @returns {*}\n */\n\nexport function underLine2CamelCase(string) {\n  return string.replace(/_([a-z])/g, function (all, letter) {\n    return letter.toUpperCase();\n  });\n}\n/**\n * 判断是否显示办理按钮\n * @param bpmStatus\n * @returns {*}\n */\n\nexport function showDealBtn(bpmStatus) {\n  if (bpmStatus != \"1\" && bpmStatus != \"3\" && bpmStatus != \"4\") {\n    return true;\n  }\n\n  return false;\n}\n/**\n * 增强CSS，可以在页面上输出全局css\n * @param css 要增强的css\n * @param id style标签的id，可以用来清除旧样式\n */\n\nexport function cssExpand(css, id) {\n  var style = document.createElement('style');\n  style.type = \"text/css\";\n  style.innerHTML = \"@charset \\\"UTF-8\\\"; \".concat(css); // 清除旧样式\n\n  if (id) {\n    var $style = document.getElementById(id);\n    if ($style != null) $style.outerHTML = '';\n    style.id = id;\n  } // 应用新样式\n\n\n  document.head.appendChild(style);\n}",null]}