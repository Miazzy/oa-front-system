{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/DepartUserList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/system/DepartUserList.vue","mtime":1571018558932},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DeptBaseInfo from \"./modules/DeptBaseInfo\";\nimport DeptUserInfo from \"./modules/DeptUserInfo\";\nimport { queryDepartTreeList, searchByKeywords } from '@/api/api';\nimport { JeecgListMixin } from '@/mixins/JeecgListMixin';\nexport default {\n  name: 'DepartUserList',\n  mixins: [JeecgListMixin],\n  components: {\n    DeptBaseInfo: DeptBaseInfo,\n    DeptUserInfo: DeptUserInfo\n  },\n  data: function data() {\n    return {\n      currentDeptId: '',\n      iExpandedKeys: [],\n      loading: false,\n      autoExpandParent: true,\n      currFlowId: '',\n      currFlowName: '',\n      disable: true,\n      treeData: [],\n      visible: false,\n      departTree: [],\n      rightClickSelectedKey: '',\n      hiding: true,\n      model: {},\n      dropTrigger: '',\n      depart: {},\n      disableSubmit: false,\n      checkedKeys: [],\n      selectedKeys: [],\n      autoIncr: 1,\n      currSelected: {},\n      form: this.$form.createForm(this),\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      graphDatasource: {\n        nodes: [],\n        edges: []\n      }\n    };\n  },\n  methods: {\n    callback: function callback(key) {\n      console.log(key);\n    },\n    loadData: function loadData() {\n      this.refresh();\n    },\n    loadTree: function loadTree() {\n      var _this = this;\n\n      var that = this;\n      that.treeData = [];\n      that.departTree = [];\n      queryDepartTreeList().then(function (res) {\n        if (res.success) {\n          for (var i = 0; i < res.result.length; i++) {\n            var temp = res.result[i];\n            that.treeData.push(temp);\n            that.departTree.push(temp);\n            that.setThisExpandedKeys(temp); // console.log(temp.id)\n          }\n\n          _this.loading = false;\n        }\n      });\n    },\n    setThisExpandedKeys: function setThisExpandedKeys(node) {\n      if (node.children && node.children.length > 0) {\n        this.iExpandedKeys.push(node.key);\n\n        for (var a = 0; a < node.children.length; a++) {\n          this.setThisExpandedKeys(node.children[a]);\n        }\n      }\n    },\n    refresh: function refresh() {\n      this.loading = true;\n      this.loadTree();\n    },\n    onExpand: function onExpand(expandedKeys) {\n      // console.log('onExpand', expandedKeys)\n      // if not set autoExpandParent to false, if children expanded, parent can not collapse.\n      // or, you can remove all expanded children keys.\n      this.iExpandedKeys = expandedKeys;\n      this.autoExpandParent = false;\n    },\n    onSearch: function onSearch(value) {\n      var that = this;\n\n      if (value) {\n        searchByKeywords({\n          keyWord: value\n        }).then(function (res) {\n          if (res.success) {\n            that.departTree = [];\n\n            for (var i = 0; i < res.result.length; i++) {\n              var temp = res.result[i];\n              that.departTree.push(temp);\n            }\n          } else {\n            that.$message.warning(res.message);\n          }\n        });\n      } else {\n        that.loadTree();\n      }\n    },\n    onCheck: function onCheck(checkedKeys, e) {\n      var record = e.node.dataRef; // console.log('onCheck', checkedKeys, e);\n\n      this.checkedKeys = []; // if (e.checked === true) {\n\n      this.currentDeptId = record.id;\n      this.checkedKeys.push(record.id);\n      this.$refs.DeptBaseInfo.open(record);\n      this.$refs.DeptUserInfo.open(record); // }\n      // else {\n      //   this.checkedKeys = [];\n      //   this.$refs.DeptBaseInfo.clearForm();\n      //   this.$refs.DeptUserInfo.clearList();\n      // }\n\n      this.hiding = false; // this.checkedKeys = checkedKeys.checked\n    },\n    onSelect: function onSelect(selectedKeys, e) {\n      if (this.selectedKeys[0] !== selectedKeys[0]) {\n        this.selectedKeys = [selectedKeys[0]];\n      }\n\n      var record = e.node.dataRef;\n      this.checkedKeys.push(record.id);\n      this.$refs.DeptBaseInfo.open(record);\n      this.$refs.DeptUserInfo.onClearSelected();\n      this.$refs.DeptUserInfo.open(record);\n    }\n  },\n  created: function created() {\n    this.currFlowId = this.$route.params.id;\n    this.currFlowName = this.$route.params.name; // this.loadTree()\n  }\n};",null]}