{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/user/Step1.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/user/Step1.vue","mtime":1571018558938},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport JGraphicCode from '@/components/jeecg/JGraphicCode';\nimport { getAction } from '@/api/manage';\nimport { checkOnlyUser } from '@/api/api';\nexport default {\n  name: \"Step1\",\n  components: {\n    JGraphicCode: JGraphicCode\n  },\n  data: function data() {\n    return {\n      form: this.$form.createForm(this),\n      inputCodeContent: \"\",\n      inputCodeNull: true,\n      verifiedCode: \"\",\n      validatorRules: {\n        username: {\n          rules: [{\n            required: false\n          }, {\n            validator: this.validateInputUsername\n          }]\n        },\n        inputCode: {\n          rules: [{\n            required: true,\n            message: '请输入验证码!'\n          }, {\n            validator: this.validateInputCode\n          }]\n        }\n      }\n    };\n  },\n  methods: {\n    nextStep: function nextStep() {\n      var that = this;\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          var params = {};\n          var reg = /^[1-9]\\d*$|^0$/;\n          var username = values.username;\n\n          if (reg.test(username) == true) {\n            params.phone = username;\n          } else {\n            params.username = username;\n          }\n\n          getAction(\"/sys/user/querySysUser\", params).then(function (res) {\n            if (res.success) {\n              var userList = {\n                username: res.result.username,\n                phone: res.result.phone\n              };\n              setTimeout(function () {\n                that.$emit('nextStep', userList);\n              });\n            }\n          });\n        }\n      });\n    },\n    validateInputCode: function validateInputCode(rule, value, callback) {\n      if (!value || this.verifiedCode == this.inputCodeContent) {\n        callback();\n      } else {\n        callback(new Error(\"您输入的验证码不正确!\"));\n      }\n    },\n    inputCodeChange: function inputCodeChange(e) {\n      this.inputCodeContent = e.target.value;\n      console.log(this.inputCodeContent);\n\n      if (!e.target.value || 0 == e.target.value) {\n        this.inputCodeNull = true;\n      } else {\n        this.inputCodeContent = this.inputCodeContent.toLowerCase();\n        this.inputCodeNull = false;\n      }\n    },\n    generateCode: function generateCode(value) {\n      this.verifiedCode = value.toLowerCase();\n      console.log(this.verifiedCode);\n    },\n    validateInputUsername: function validateInputUsername(rule, value, callback) {\n      console.log(value);\n      var reg = /^[0-9]+.?[0-9]*/;\n\n      if (!value) {\n        callback(\"请输入用户名和手机号！\");\n      } //判断用户输入账号还是手机号码\n\n\n      if (reg.test(value)) {\n        var params = {\n          phone: value\n        };\n        checkOnlyUser(params).then(function (res) {\n          if (res.success) {\n            callback(\"用户名不存在!\");\n          } else {\n            callback();\n          }\n        });\n      } else {\n        var params = {\n          username: value\n        };\n        checkOnlyUser(params).then(function (res) {\n          if (res.success) {\n            callback(\"用户名不存在!\");\n          } else {\n            callback();\n          }\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["Step1.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,OAAA,YAAA,MAAA,iCAAA;AACA,SAAA,SAAA,QAAA,cAAA;AACA,SAAA,aAAA,QAAA,WAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,YAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,KAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CADA;AAEA,MAAA,gBAAA,EAAA,EAFA;AAGA,MAAA,aAAA,EAAA,IAHA;AAIA,MAAA,YAAA,EAAA,EAJA;AAKA,MAAA,cAAA,EAAA;AACA,QAAA,QAAA,EAAA;AAAA,UAAA,KAAA,EAAA,CAAA;AAAA,YAAA,QAAA,EAAA;AAAA,WAAA,EAAA;AAAA,YAAA,SAAA,EAAA,KAAA;AAAA,WAAA;AAAA,SADA;AAEA,QAAA,SAAA,EAAA;AAAA,UAAA,KAAA,EAAA,CAAA;AAAA,YAAA,QAAA,EAAA,IAAA;AAAA,YAAA,OAAA,EAAA;AAAA,WAAA,EAAA;AAAA,YAAA,SAAA,EAAA,KAAA;AAAA,WAAA;AAAA;AAFA;AALA,KAAA;AAWA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,WAAA,IAAA,CAAA,cAAA,CAAA,UAAA,GAAA,EAAA,MAAA,EAAA;AACA,YAAA,CAAA,GAAA,EAAA;AACA,cAAA,MAAA,GAAA,EAAA;AACA,cAAA,GAAA,GAAA,gBAAA;AACA,cAAA,QAAA,GAAA,MAAA,CAAA,QAAA;;AACA,cAAA,GAAA,CAAA,IAAA,CAAA,QAAA,KAAA,IAAA,EAAA;AACA,YAAA,MAAA,CAAA,KAAA,GAAA,QAAA;AACA,WAFA,MAEA;AACA,YAAA,MAAA,CAAA,QAAA,GAAA,QAAA;AACA;;AACA,UAAA,SAAA,CAAA,wBAAA,EAAA,MAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,gBAAA,GAAA,CAAA,OAAA,EAAA;AACA,kBAAA,QAAA,GAAA;AACA,gBAAA,QAAA,EAAA,GAAA,CAAA,MAAA,CAAA,QADA;AAEA,gBAAA,KAAA,EAAA,GAAA,CAAA,MAAA,CAAA;AAFA,eAAA;AAIA,cAAA,UAAA,CAAA,YAAA;AACA,gBAAA,IAAA,CAAA,KAAA,CAAA,UAAA,EAAA,QAAA;AACA,eAFA,CAAA;AAGA;AACA,WAVA;AAWA;AACA,OAtBA;AAwBA,KA3BA;AA4BA,IAAA,iBA5BA,6BA4BA,IA5BA,EA4BA,KA5BA,EA4BA,QA5BA,EA4BA;AACA,UAAA,CAAA,KAAA,IAAA,KAAA,YAAA,IAAA,KAAA,gBAAA,EAAA;AACA,QAAA,QAAA;AACA,OAFA,MAEA;AACA,QAAA,QAAA,CAAA,IAAA,KAAA,CAAA,aAAA,CAAA,CAAA;AACA;AACA,KAlCA;AAmCA,IAAA,eAnCA,2BAmCA,CAnCA,EAmCA;AACA,WAAA,gBAAA,GAAA,CAAA,CAAA,MAAA,CAAA,KAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,gBAAA;;AACA,UAAA,CAAA,CAAA,CAAA,MAAA,CAAA,KAAA,IAAA,KAAA,CAAA,CAAA,MAAA,CAAA,KAAA,EAAA;AACA,aAAA,aAAA,GAAA,IAAA;AACA,OAFA,MAEA;AACA,aAAA,gBAAA,GAAA,KAAA,gBAAA,CAAA,WAAA,EAAA;AACA,aAAA,aAAA,GAAA,KAAA;AACA;AACA,KA5CA;AA6CA,IAAA,YA7CA,wBA6CA,KA7CA,EA6CA;AACA,WAAA,YAAA,GAAA,KAAA,CAAA,WAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,YAAA;AACA,KAhDA;AAiDA,IAAA,qBAjDA,iCAiDA,IAjDA,EAiDA,KAjDA,EAiDA,QAjDA,EAiDA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,UAAA,GAAA,GAAA,iBAAA;;AACA,UAAA,CAAA,KAAA,EAAA;AACA,QAAA,QAAA,CAAA,aAAA,CAAA;AACA,OALA,CAOA;;;AACA,UAAA,GAAA,CAAA,IAAA,CAAA,KAAA,CAAA,EAAA;AACA,YAAA,MAAA,GAAA;AACA,UAAA,KAAA,EAAA;AADA,SAAA;AAGA,QAAA,aAAA,CAAA,MAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,cAAA,GAAA,CAAA,OAAA,EAAA;AACA,YAAA,QAAA,CAAA,SAAA,CAAA;AACA,WAFA,MAEA;AACA,YAAA,QAAA;AACA;AACA,SANA;AAOA,OAXA,MAWA;AACA,YAAA,MAAA,GAAA;AACA,UAAA,QAAA,EAAA;AADA,SAAA;AAGA,QAAA,aAAA,CAAA,MAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,cAAA,GAAA,CAAA,OAAA,EAAA;AACA,YAAA,QAAA,CAAA,SAAA,CAAA;AACA,WAFA,MAEA;AACA,YAAA,QAAA;AACA;AACA,SANA;AAOA;AACA;AAhFA;AAlBA,CAAA","sourcesContent":["<template>\n  <div class=\"main\">\n\n    <a-form  style=\"max-width: 500px; margin: 40px auto 0;\" :form=\"form\">\n      <a-form-item>\n        <a-input\n          v-decorator=\"['username',validatorRules.username]\"\n          size=\"large\"\n          type=\"text\"\n          autocomplete=\"false\"\n          placeholder=\"请输入用户名或手机号\">\n          <a-icon slot=\"prefix\" type=\"lock\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n        </a-input>\n      </a-form-item>\n      <a-row :gutter=\"0\">\n        <a-col :span=\"14\">\n          <a-form-item>\n            <a-input\n              v-decorator=\"['inputCode',validatorRules.inputCode]\"\n              size=\"large\"\n              type=\"text\"\n              @change=\"inputCodeChange\"\n              placeholder=\"请输入验证码\">\n              <a-icon slot=\"prefix\" v-if=\" inputCodeContent==verifiedCode \" type=\"smile\"\n                      :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n              <a-icon slot=\"prefix\" v-else type=\"frown\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n            </a-input>\n          </a-form-item>\n        </a-col>\n        <a-col :span=\"10\">\n          <j-graphic-code @success=\"generateCode\" style=\"float: right\"></j-graphic-code>\n        </a-col>\n      </a-row>\n      <a-form-item :wrapperCol=\"{span: 19, offset: 5}\">\n        <a-button type=\"primary\" @click=\"nextStep\">下一步</a-button>\n      </a-form-item>\n    </a-form>\n  </div>\n</template>\n\n<script>\n  import JGraphicCode from '@/components/jeecg/JGraphicCode'\n  import { getAction } from  '@/api/manage'\n  import {checkOnlyUser } from '@/api/api'\n  export default {\n    name: \"Step1\",\n    components: {\n      JGraphicCode\n    },\n    data () {\n      return {\n        form: this.$form.createForm(this),\n        inputCodeContent: \"\",\n        inputCodeNull:true,\n        verifiedCode:\"\",\n        validatorRules: {\n          username:{rules: [{ required: false},{validator: this.validateInputUsername}]},\n          inputCode:{rules: [{ required: true, message: '请输入验证码!'},{validator: this.validateInputCode}]},\n        },\n\n      }\n    },\n    methods: {\n      nextStep () {\n        let that = this\n        this.form.validateFields((err, values) => {\n          if (!err){\n          var params={}\n          var reg=/^[1-9]\\d*$|^0$/;\n          var username=values.username;\n          if(reg.test(username)==true) {\n            params.phone=username;\n          }else{\n            params.username=username;\n          }\n            getAction(\"/sys/user/querySysUser\",params).then((res)=>{\n              if(res.success){\n            var userList={\n              username:res.result.username,\n              phone:res.result.phone\n            };\n             setTimeout(function () {\n              that.$emit('nextStep',userList)\n            })\n          }\n          });\n        }\n    })\n\n      },\n      validateInputCode(rule, value, callback){\n        if (!value || this.verifiedCode == this.inputCodeContent) {\n          callback();\n        } else {\n          callback(new Error(\"您输入的验证码不正确!\"));\n        }\n      },\n      inputCodeChange(e){\n        this.inputCodeContent = e.target.value;\n        console.log(this.inputCodeContent)\n        if(!e.target.value||0==e.target.value){\n          this.inputCodeNull=true\n        }else{\n          this.inputCodeContent = this.inputCodeContent.toLowerCase()\n          this.inputCodeNull=false\n        }\n      },\n      generateCode(value){\n        this.verifiedCode = value.toLowerCase();\n        console.log(this.verifiedCode);\n      },\n      validateInputUsername(rule, value, callback){\n        console.log(value);\n        var reg=/^[0-9]+.?[0-9]*/;\n        if(!value){\n          callback(\"请输入用户名和手机号！\");\n        }\n\n        //判断用户输入账号还是手机号码\n        if(reg.test(value)){\n          var params = {\n            phone : value,\n          };\n          checkOnlyUser(params).then((res) => {\n            if (res.success) {\n            callback(\"用户名不存在!\")\n          } else {\n            callback()\n          }\n        })\n        }else{\n          var params = {\n            username: value,\n          };\n          checkOnlyUser(params).then((res) => {\n            if (res.success) {\n              callback(\"用户名不存在!\")\n            } else {\n              callback()\n            }\n          })\n        }\n      },\n\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/views/user"}]}