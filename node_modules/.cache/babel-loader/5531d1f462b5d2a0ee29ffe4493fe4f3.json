{"remainingRequest":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/user/Step3.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/src/views/user/Step3.vue","mtime":1571018558939},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/babel-loader/lib/index.js","mtime":1565533683804},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/cache-loader/dist/cjs.js","mtime":1565525385854},{"path":"/Users/yunwisdom/Workspace/jeecg-boot/ant-design-vue-jeecg/node_modules/vue-loader/lib/index.js","mtime":1571018827562}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { putAction, getAction } from '@/api/manage';\nexport default {\n  name: \"Step3\",\n  //    components: {\n  //      Result\n  //    },\n  props: ['userList'],\n  data: function data() {\n    return {\n      loading: false,\n      form: this.$form.createForm(this),\n      accountName: this.userList.username,\n      validatorRules: {\n        username: {\n          rules: [{\n            required: true,\n            message: '用户名不能为空!'\n          }]\n        },\n        password: {\n          rules: [{\n            required: true,\n            pattern: /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,.\\/]).{8,}$/,\n            message: '密码由8位数字、大小写字母和特殊符号组成!!'\n          }, {\n            validator: this.handlePasswordLevel\n          }]\n        },\n        confirmPassword: {\n          rules: [{\n            required: true,\n            message: '密码不能为空!'\n          }, {\n            validator: this.handlePasswordCheck\n          }]\n        }\n      }\n    };\n  },\n  methods: {\n    nextStep: function nextStep() {\n      var _this = this;\n\n      var that = this;\n      that.loading = true;\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          var params = {};\n          params.username = _this.userList.username;\n          params.password = values.password;\n          params.smscode = _this.userList.smscode;\n          params.phone = _this.userList.phone;\n          getAction(\"/sys/user/passwordChange\", params).then(function (res) {\n            if (res.success) {\n              var userList = {\n                username: _this.userList.username\n              };\n              console.log(userList);\n              setTimeout(function () {\n                that.$emit('nextStep', userList);\n              }, 1500);\n            } else {\n              _this.passwordFailed(res.message);\n\n              that.loading = false;\n            }\n          });\n        } else {\n          that.loading = false;\n        }\n      });\n    },\n    prevStep: function prevStep() {\n      this.$emit('prevStep', this.userList);\n    },\n    handlePasswordCheck: function handlePasswordCheck(rule, value, callback) {\n      var password = this.form.getFieldValue('password');\n\n      if (value && password && value.trim() !== password.trim()) {\n        callback(new Error('两次密码不一致'));\n      }\n\n      callback();\n    },\n    passwordFailed: function passwordFailed(err) {\n      this.$notification['error']({\n        message: \"更改密码失败\",\n        description: err,\n        duration: 4\n      });\n    }\n  }\n};",{"version":3,"sources":["Step3.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <a-form :form=\"form\" style=\"max-width: 500px; margin: 40px auto 0;\">\n      <a-form-item\n        label=\"账号名\"\n        :labelCol=\"{span: 5}\"\n        :wrapperCol=\"{span: 19}\"\n      >\n        <a-input\n          type=\"text\"\n          autocomplete=\"false\" :value=\"accountName\" disabled>\n        </a-input>\n      </a-form-item>\n      <a-form-item\n        label=\"新密码\"\n        :labelCol=\"{span: 5}\"\n        :wrapperCol=\"{span: 19}\"\n        class=\"stepFormText\">\n        <a-input\n          v-decorator=\"['password',validatorRules.password]\"\n          type=\"password\"\n          autocomplete=\"false\">\n        </a-input>\n      </a-form-item>\n      <a-form-item\n        label=\"确认密码\"\n        :labelCol=\"{span: 5}\"\n        :wrapperCol=\"{span: 19}\"\n        class=\"stepFormText\">\n        <a-input\n          v-decorator=\"['confirmPassword',validatorRules.confirmPassword]\"\n          type=\"password\"\n          autocomplete=\"false\">\n        </a-input>\n      </a-form-item>\n      <a-form-item :wrapperCol=\"{span: 19, offset: 5}\">\n        <a-button style=\"margin-left: 8px\" @click=\"prevStep\">上一步</a-button>\n        <a-button :loading=\"loading\" type=\"primary\" @click=\"nextStep\" style=\"margin-left:20px\">提交</a-button>\n      </a-form-item>\n    </a-form>\n  </div>\n</template>\n\n<script>\n  import { putAction,getAction } from '@/api/manage'\n  export default {\n    name: \"Step3\",\n//    components: {\n//      Result\n//    },\n    props: ['userList'],\n    data () {\n      return {\n        loading: false,\n        form: this.$form.createForm(this),\n        accountName: this.userList.username,\n        validatorRules: {\n          username: {rules: [{required: true, message: '用户名不能为空!'}]},\n          password: {\n            rules: [{\n              required: true,\n              pattern: /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[~!@#$%^&*()_+`\\-={}:\";'<>?,.\\/]).{8,}$/,\n              message: '密码由8位数字、大小写字母和特殊符号组成!!'\n            }, {validator: this.handlePasswordLevel}]\n          },\n          confirmPassword: {rules: [{required: true, message: '密码不能为空!'}, {validator: this.handlePasswordCheck}]},\n        },\n      }\n    },\n    methods: {\n      nextStep () {\n        let that = this\n        that.loading = true\n        this.form.validateFields((err, values) => {\n          if ( !err ){\n          var params={}\n          params.username=this.userList.username;\n          params.password=values.password;\n          params.smscode=this.userList.smscode;\n          params.phone= this.userList.phone;\n          getAction(\"/sys/user/passwordChange\", params).then((res) => {\n            if(res.success){\n            var userList = {\n              username: this.userList.username\n            }\n            console.log(userList);\n            setTimeout(function () {\n              that.$emit('nextStep', userList)\n            }, 1500)\n          }else{\n            this.passwordFailed(res.message);\n            that.loading = false\n          }\n        })\n        } else{\n          that.loading = false\n        }\n      })\n\n      },\n      prevStep () {\n        this.$emit('prevStep', this.userList)\n      },\n\n      handlePasswordCheck (rule, value, callback) {\n        let password = this.form.getFieldValue('password')\n        if (value && password && value.trim() !== password.trim()) {\n          callback(new Error('两次密码不一致'))\n        }\n        callback()\n      },\n      passwordFailed(err){\n        this.$notification[ 'error' ]({\n          message: \"更改密码失败\",\n          description:err,\n          duration: 4,\n        });\n      },\n    }\n  }\n</script>\n<style lang=\"scss\" scoped>\n  .stepFormText {\n    margin-bottom: 24px;\n  }\n\n  .ant-form-item-label,\n  .ant-form-item-control {\n    line-height: 22px;\n  }\n\n</style>"],"sourceRoot":"src/views/user"}]}